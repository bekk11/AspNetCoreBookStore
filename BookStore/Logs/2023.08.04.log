2023-08-04 09:33:48,173 [1] INFO  Microsoft.Hosting.Lifetime - Now listening on: http://localhost:5049
2023-08-04 09:33:48,184 [1] INFO  Microsoft.Hosting.Lifetime - Application started. Press Ctrl+C to shut down.
2023-08-04 09:33:48,184 [1] INFO  Microsoft.Hosting.Lifetime - Hosting environment: Development
2023-08-04 09:33:48,184 [1] INFO  Microsoft.Hosting.Lifetime - Content root path: P:\C#\BookStore\BookStore
2023-08-04 09:33:48,842 [.NET ThreadPool Worker] INFO  BookStore.Middlewares.Logging.RequestResponseLoggingMiddleware - REQUEST INFO: 0HMSKKFVJSB4F:00000001 - http - localhost:5049 - /swagger/index.html - ::1 -  - 
2023-08-04 09:33:49,997 [.NET ThreadPool Worker] INFO  BookStore.Middlewares.Logging.RequestResponseLoggingMiddleware - REQUEST INFO: 0HMSKKFVJSB4E:00000001 - http - localhost:5049 - /swagger/index.html - ::1 -  - 
2023-08-04 09:34:04,441 [13] INFO  Microsoft.Hosting.Lifetime - Application is shutting down...
2023-08-04 09:34:13,719 [1] INFO  Microsoft.Hosting.Lifetime - Now listening on: http://localhost:5049
2023-08-04 09:34:13,730 [1] INFO  Microsoft.Hosting.Lifetime - Application started. Press Ctrl+C to shut down.
2023-08-04 09:34:13,730 [1] INFO  Microsoft.Hosting.Lifetime - Hosting environment: Development
2023-08-04 09:34:13,730 [1] INFO  Microsoft.Hosting.Lifetime - Content root path: P:\C#\BookStore\BookStore
2023-08-04 09:34:14,244 [.NET ThreadPool Worker] INFO  BookStore.Middlewares.Logging.RequestResponseLoggingMiddleware - REQUEST INFO: 0HMSKKG775V82:00000001 - http - localhost:5049 - /swagger/index.html - ::1 -  - 
2023-08-04 09:34:14,630 [.NET ThreadPool Worker] INFO  BookStore.Middlewares.Logging.RequestResponseLoggingMiddleware - REQUEST INFO: 0HMSKKG775V82:00000002 - http - localhost:5049 - /swagger/v1/swagger.json - ::1 -  - 
2023-08-04 09:34:18,576 [.NET ThreadPool Worker] INFO  BookStore.Middlewares.Logging.RequestResponseLoggingMiddleware - REQUEST INFO: 0HMSKKG775V82:00000003 - http - localhost:5049 - /swagger/index.html - ::1 -  - 
2023-08-04 09:34:18,716 [.NET ThreadPool Worker] INFO  BookStore.Middlewares.Logging.RequestResponseLoggingMiddleware - REQUEST INFO: 0HMSKKG775V82:00000004 - http - localhost:5049 - /swagger/v1/swagger.json - ::1 -  - 
2023-08-04 09:34:36,566 [.NET ThreadPool Worker] INFO  BookStore.Middlewares.Logging.RequestResponseLoggingMiddleware - REQUEST INFO: 0HMSKKG775V84:00000001 - http - localhost:5049 - /author/create - ::1 -  - {  "firstname": "saf",  "lastname": "hter",  "age": 12}
2023-08-04 09:35:31,453 [19] INFO  Microsoft.Hosting.Lifetime - Application is shutting down...
2023-08-04 09:35:38,501 [1] INFO  Microsoft.Hosting.Lifetime - Now listening on: http://localhost:5049
2023-08-04 09:35:38,512 [1] INFO  Microsoft.Hosting.Lifetime - Application started. Press Ctrl+C to shut down.
2023-08-04 09:35:38,512 [1] INFO  Microsoft.Hosting.Lifetime - Hosting environment: Development
2023-08-04 09:35:38,512 [1] INFO  Microsoft.Hosting.Lifetime - Content root path: P:\C#\BookStore\BookStore
2023-08-04 09:35:39,307 [.NET ThreadPool Worker] INFO  BookStore.Middlewares.Logging.RequestResponseLoggingMiddleware - REQUEST INFO: 0HMSKKH0GIT5S:00000001 - http - localhost:5049 - /swagger/index.html - ::1 -  - 
2023-08-04 09:35:39,605 [.NET ThreadPool Worker] INFO  BookStore.Middlewares.Logging.RequestResponseLoggingMiddleware - REQUEST INFO: 0HMSKKH0GIT5S:00000002 - http - localhost:5049 - /swagger/v1/swagger.json - ::1 -  - 
2023-08-04 09:35:49,937 [.NET ThreadPool Worker] INFO  BookStore.Middlewares.Logging.RequestResponseLoggingMiddleware - REQUEST INFO: 0HMSKKH0GIT5U:00000001 - http - localhost:5049 - /author/create - ::1 -  - {  "firstname": "saf",  "lastname": "hter",  "age": 12}
2023-08-04 09:36:07,548 [13] INFO  Microsoft.Hosting.Lifetime - Application is shutting down...
2023-08-04 09:36:14,356 [1] INFO  Microsoft.Hosting.Lifetime - Now listening on: http://localhost:5049
2023-08-04 09:36:14,369 [1] INFO  Microsoft.Hosting.Lifetime - Application started. Press Ctrl+C to shut down.
2023-08-04 09:36:14,370 [1] INFO  Microsoft.Hosting.Lifetime - Hosting environment: Development
2023-08-04 09:36:14,370 [1] INFO  Microsoft.Hosting.Lifetime - Content root path: P:\C#\BookStore\BookStore
2023-08-04 09:43:28,409 [3] INFO  Microsoft.Hosting.Lifetime - Application is shutting down...
2023-08-04 10:13:09,381 [1] INFO  Microsoft.Hosting.Lifetime - Now listening on: http://localhost:5049
2023-08-04 10:13:09,391 [1] INFO  Microsoft.Hosting.Lifetime - Application started. Press Ctrl+C to shut down.
2023-08-04 10:13:09,392 [1] INFO  Microsoft.Hosting.Lifetime - Hosting environment: Development
2023-08-04 10:13:09,392 [1] INFO  Microsoft.Hosting.Lifetime - Content root path: P:\C#\BookStore\BookStore
2023-08-04 10:13:10,350 [.NET ThreadPool Worker] INFO  BookStore.Middlewares.Logging.RequestResponseLoggingMiddleware - REQUEST INFO: 0HMSKL5VAQ62G:00000001 - http - localhost:5049 - /swagger/index.html - ::1 -  - 
2023-08-04 10:13:10,593 [.NET ThreadPool Worker] INFO  BookStore.Middlewares.Logging.RequestResponseLoggingMiddleware - REQUEST INFO: 0HMSKL5VAQ62G:00000002 - http - localhost:5049 - /swagger/v1/swagger.json - ::1 -  - 
2023-08-04 10:13:34,548 [.NET ThreadPool Worker] INFO  BookStore.Middlewares.Logging.RequestResponseLoggingMiddleware - REQUEST INFO: 0HMSKL5VAQ62H:00000001 - http - localhost:5049 - /author/create - ::1 -  - 
2023-08-04 10:16:58,176 [4] INFO  Microsoft.Hosting.Lifetime - Application is shutting down...
2023-08-04 10:17:03,988 [1] INFO  Microsoft.Hosting.Lifetime - Now listening on: http://localhost:5049
2023-08-04 10:17:04,024 [1] INFO  Microsoft.Hosting.Lifetime - Application started. Press Ctrl+C to shut down.
2023-08-04 10:17:04,024 [1] INFO  Microsoft.Hosting.Lifetime - Hosting environment: Development
2023-08-04 10:17:04,024 [1] INFO  Microsoft.Hosting.Lifetime - Content root path: P:\C#\BookStore\BookStore
2023-08-04 10:17:04,818 [.NET ThreadPool Worker] INFO  BookStore.Middlewares.Logging.RequestResponseLoggingMiddleware - REQUEST INFO: 0HMSKL858D7DJ:00000001 - http - localhost:5049 - /swagger/index.html - ::1 -  - 
2023-08-04 10:17:05,267 [.NET ThreadPool Worker] INFO  BookStore.Middlewares.Logging.RequestResponseLoggingMiddleware - REQUEST INFO: 0HMSKL858D7DJ:00000002 - http - localhost:5049 - /swagger/v1/swagger.json - ::1 -  - 
2023-08-04 10:17:08,845 [.NET ThreadPool Worker] INFO  BookStore.Middlewares.Logging.RequestResponseLoggingMiddleware - REQUEST INFO: 0HMSKL858D7DJ:00000003 - http - localhost:5049 - /author/create - ::1 -  - 
2023-08-04 10:17:26,610 [15] INFO  Microsoft.Hosting.Lifetime - Application is shutting down...
2023-08-04 10:17:30,753 [1] INFO  Microsoft.Hosting.Lifetime - Now listening on: http://localhost:5049
2023-08-04 10:17:30,763 [1] INFO  Microsoft.Hosting.Lifetime - Application started. Press Ctrl+C to shut down.
2023-08-04 10:17:30,764 [1] INFO  Microsoft.Hosting.Lifetime - Hosting environment: Development
2023-08-04 10:17:30,764 [1] INFO  Microsoft.Hosting.Lifetime - Content root path: P:\C#\BookStore\BookStore
2023-08-04 10:17:31,146 [.NET ThreadPool Worker] INFO  BookStore.Middlewares.Logging.RequestResponseLoggingMiddleware - REQUEST INFO: 0HMSKL8D3A0GG:00000001 - http - localhost:5049 - /swagger/index.html - ::1 -  - 
2023-08-04 10:17:31,406 [.NET ThreadPool Worker] INFO  BookStore.Middlewares.Logging.RequestResponseLoggingMiddleware - REQUEST INFO: 0HMSKL8D3A0GG:00000002 - http - localhost:5049 - /swagger/v1/swagger.json - ::1 -  - 
2023-08-04 10:17:40,956 [.NET ThreadPool Worker] INFO  BookStore.Middlewares.Logging.RequestResponseLoggingMiddleware - REQUEST INFO: 0HMSKL8D3A0GG:00000003 - http - localhost:5049 - /author/create - ::1 -  - 
2023-08-04 10:18:16,756 [3] INFO  Microsoft.Hosting.Lifetime - Application is shutting down...
2023-08-04 10:18:29,819 [1] INFO  Microsoft.Hosting.Lifetime - Now listening on: http://localhost:5049
2023-08-04 10:18:29,839 [1] INFO  Microsoft.Hosting.Lifetime - Application started. Press Ctrl+C to shut down.
2023-08-04 10:18:29,839 [1] INFO  Microsoft.Hosting.Lifetime - Hosting environment: Development
2023-08-04 10:18:29,839 [1] INFO  Microsoft.Hosting.Lifetime - Content root path: P:\C#\BookStore\BookStore
2023-08-04 10:19:48,965 [.NET ThreadPool Worker] INFO  BookStore.Middlewares.Logging.RequestResponseLoggingMiddleware - REQUEST INFO: 0HMSKL8UNQQT1:00000001 - http - localhost:5049 - /swagger/index.html - ::1 -  - 
2023-08-04 10:19:51,559 [.NET ThreadPool Worker] INFO  BookStore.Middlewares.Logging.RequestResponseLoggingMiddleware - REQUEST INFO: 0HMSKL8UNQQT1:00000002 - http - localhost:5049 - /swagger/v1/swagger.json - ::1 -  - 
2023-08-04 10:32:00,123 [1] INFO  Microsoft.Hosting.Lifetime - Now listening on: http://localhost:5049
2023-08-04 10:32:00,134 [1] INFO  Microsoft.Hosting.Lifetime - Application started. Press Ctrl+C to shut down.
2023-08-04 10:32:00,134 [1] INFO  Microsoft.Hosting.Lifetime - Hosting environment: Development
2023-08-04 10:32:00,134 [1] INFO  Microsoft.Hosting.Lifetime - Content root path: P:\C#\BookStore\BookStore
2023-08-04 10:32:00,752 [.NET ThreadPool Worker] INFO  BookStore.Middlewares.Logging.RequestResponseLoggingMiddleware - HTTP REQUEST INFORMATION:  TRACE: 0HMSKLGG9MFH7:00000001 SCHEMA: http HOST: localhost:5049 PATH: /swagger/index.html QUERYSTRING:  REQUEST BODY:  CLIENT IP: ::1
2023-08-04 10:32:00,904 [.NET ThreadPool Worker] INFO  BookStore.Middlewares.Logging.RequestResponseLoggingMiddleware - HTTP REQUEST INFORMATION:  TRACE: 0HMSKLGG9MFH7:00000002 SCHEMA: http HOST: localhost:5049 PATH: /favicon.ico QUERYSTRING:  REQUEST BODY:  CLIENT IP: ::1
2023-08-04 10:32:15,111 [15] INFO  Microsoft.Hosting.Lifetime - Application is shutting down...
2023-08-04 10:32:23,249 [1] INFO  Microsoft.Hosting.Lifetime - Now listening on: http://localhost:5049
2023-08-04 10:32:23,261 [1] INFO  Microsoft.Hosting.Lifetime - Application started. Press Ctrl+C to shut down.
2023-08-04 10:32:23,261 [1] INFO  Microsoft.Hosting.Lifetime - Hosting environment: Development
2023-08-04 10:32:23,261 [1] INFO  Microsoft.Hosting.Lifetime - Content root path: P:\C#\BookStore\BookStore
2023-08-04 10:32:23,855 [.NET ThreadPool Worker] INFO  BookStore.Middlewares.Logging.RequestResponseLoggingMiddleware - HTTP REQUEST INFORMATION:  TRACE: 0HMSKLGN6BLSP:00000001 SCHEMA: http HOST: localhost:5049 PATH: /swagger/index.html QUERYSTRING:  REQUEST BODY:  CLIENT IP: ::1
2023-08-04 10:32:24,033 [.NET ThreadPool Worker] INFO  BookStore.Middlewares.Logging.RequestResponseLoggingMiddleware - HTTP RESPONSE INFORMATION: TRACE: 0HMSKLGN6BLSP:00000001 SCHEMA: http HOST: localhost:5049 PATH: /swagger/index.html QUERYSTRING:  RESPONSE BODY: <!-- HTML for static distribution bundle build -->
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Swagger UI</title>
    <link rel="stylesheet" type="text/css" href="./swagger-ui.css">
    <link rel="icon" type="image/png" href="./favicon-32x32.png" sizes="32x32" />
    <link rel="icon" type="image/png" href="./favicon-16x16.png" sizes="16x16" />
    <style>

        html {
            box-sizing: border-box;
            overflow: -moz-scrollbars-vertical;
            overflow-y: scroll;
        }

        *,
        *:before,
        *:after {
            box-sizing: inherit;
        }

        body {
            margin: 0;
            background: #fafafa;
        }
    </style>
    
</head>

<body>
    <div id="swagger-ui"></div>

    <!-- Workaround for https://github.com/swagger-api/swagger-editor/issues/1371 -->
    <script>
        if (window.navigator.userAgent.indexOf("Edge") > -1) {
            console.log("Removing native Edge fetch in favor of swagger-ui's polyfill")
            window.fetch = undefined;
        }
    </script>

    <script src="./swagger-ui-bundle.js"></script>
    <script src="./swagger-ui-standalone-preset.js"></script>
    <script>
        /* Source: https://gist.github.com/lamberta/3768814
         * Parse a string function definition and return a function object. Does not use eval.
         * @param {string} str
         * @return {function}
         *
         * Example:
         *  var f = function (x, y) { return x * y; };
         *  var g = parseFunction(f.toString());
         *  g(33, 3); //=> 99
         */
        function parseFunction(str) {
            if (!str) return void (0);

            var fn_body_idx = str.indexOf('{'),
                fn_body = str.substring(fn_body_idx + 1, str.lastIndexOf('}')),
                fn_declare = str.substring(0, fn_body_idx),
                fn_params = fn_declare.substring(fn_declare.indexOf('(') + 1, fn_declare.lastIndexOf(')')),
                args = fn_params.split(',');

            args.push(fn_body);

            function Fn() {
                return Function.apply(this, args);
            }
            Fn.prototype = Function.prototype;

            return new Fn();
        }

        window.onload = function () {
            var configObject = JSON.parse('{"urls":[{"url":"v1/swagger.json","name":"BookStore v1"}],"deepLinking":false,"persistAuthorization":false,"displayOperationId":false,"defaultModelsExpandDepth":1,"defaultModelExpandDepth":1,"defaultModelRendering":"example","displayRequestDuration":false,"docExpansion":"list","showExtensions":false,"showCommonExtensions":false,"supportedSubmitMethods":["get","put","post","delete","options","head","patch","trace"],"tryItOutEnabled":false}');
            var oauthConfigObject = JSON.parse('{"scopeSeparator":" ","scopes":[],"useBasicAuthenticationWithAccessCodeGrant":false,"usePkceWithAuthorizationCodeGrant":false}');

            // Workaround for https://github.com/swagger-api/swagger-ui/issues/5945
            configObject.urls.forEach(function (item) {
                if (item.url.startsWith("http") || item.url.startsWith("/")) return;
                item.url = window.location.href.replace("index.html", item.url).split('#')[0];
            });

            // If validatorUrl is not explicitly provided, disable the feature by setting to null
            if (!configObject.hasOwnProperty("validatorUrl"))
                configObject.validatorUrl = null

            // If oauth2RedirectUrl isn't specified, use the built-in default
            if (!configObject.hasOwnProperty("oauth2RedirectUrl"))
                configObject.oauth2RedirectUrl = (new URL("oauth2-redirect.html", window.location.href)).href;

            // Apply mandatory parameters
            configObject.dom_id = "#swagger-ui";
            configObject.presets = [SwaggerUIBundle.presets.apis, SwaggerUIStandalonePreset];
            configObject.layout = "StandaloneLayout";

            // Parse and add interceptor functions
            var interceptors = JSON.parse('{"RequestInterceptorFunction":null,"ResponseInterceptorFunction":null}');
            if (interceptors.RequestInterceptorFunction)
                configObject.requestInterceptor = parseFunction(interceptors.RequestInterceptorFunction);
            if (interceptors.ResponseInterceptorFunction)
                configObject.responseInterceptor = parseFunction(interceptors.ResponseInterceptorFunction);

            // Begin Swagger UI call region

            const ui = SwaggerUIBundle(configObject);

            ui.initOAuth(oauthConfigObject);

            // End Swagger UI call region

            window.ui = ui
        }
    </script>
</body>
</html>

2023-08-04 10:32:24,191 [.NET ThreadPool Worker] INFO  BookStore.Middlewares.Logging.RequestResponseLoggingMiddleware - HTTP REQUEST INFORMATION:  TRACE: 0HMSKLGN6BLSP:00000002 SCHEMA: http HOST: localhost:5049 PATH: /swagger/v1/swagger.json QUERYSTRING:  REQUEST BODY:  CLIENT IP: ::1
2023-08-04 10:32:24,340 [.NET ThreadPool Worker] INFO  BookStore.Middlewares.Logging.RequestResponseLoggingMiddleware - HTTP RESPONSE INFORMATION: TRACE: 0HMSKLGN6BLSP:00000002 SCHEMA: http HOST: localhost:5049 PATH: /swagger/v1/swagger.json QUERYSTRING:  RESPONSE BODY: {
  "openapi": "3.0.1",
  "info": {
    "title": "BookStore",
    "version": "1.0"
  },
  "paths": {
    "/author/list": {
      "get": {
        "tags": [
          "Author"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/author/create": {
      "post": {
        "tags": [
          "Author"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorTemplate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorTemplate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorTemplate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/author/get/{id}": {
      "get": {
        "tags": [
          "Author"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/author/update/{id}": {
      "put": {
        "tags": [
          "Author"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorTemplate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorTemplate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorTemplate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/author/delete/{id}": {
      "delete": {
        "tags": [
          "Author"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/book/list": {
      "get": {
        "tags": [
          "Book"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/book/create": {
      "post": {
        "tags": [
          "Book"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "Title": {
                    "type": "string"
                  },
                  "Description": {
                    "type": "string"
                  },
                  "AuthorId": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "ImagePath": {
                    "type": "string"
                  },
                  "Image": {
                    "type": "string",
                    "format": "binary"
                  },
                  "Genres": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "format": "int64"
                    }
                  }
                }
              },
              "encoding": {
                "Title": {
                  "style": "form"
                },
                "Description": {
                  "style": "form"
                },
                "AuthorId": {
                  "style": "form"
                },
                "ImagePath": {
                  "style": "form"
                },
                "Image": {
                  "style": "form"
                },
                "Genres": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/book/get/{id}": {
      "get": {
        "tags": [
          "Book"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/book/update/{id}": {
      "put": {
        "tags": [
          "Book"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "Title": {
                    "type": "string"
                  },
                  "Description": {
                    "type": "string"
                  },
                  "AuthorId": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "ImagePath": {
                    "type": "string"
                  },
                  "Image": {
                    "type": "string",
                    "format": "binary"
                  },
                  "Genres": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "format": "int64"
                    }
                  }
                }
              },
              "encoding": {
                "Title": {
                  "style": "form"
                },
                "Description": {
                  "style": "form"
                },
                "AuthorId": {
                  "style": "form"
                },
                "ImagePath": {
                  "style": "form"
                },
                "Image": {
                  "style": "form"
                },
                "Genres": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/book/delete/{id}": {
      "delete": {
        "tags": [
          "Book"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/genre/list": {
      "get": {
        "tags": [
          "Genre"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/genre/create": {
      "post": {
        "tags": [
          "Genre"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenreTemplate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GenreTemplate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GenreTemplate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/genre/get/{id}": {
      "get": {
        "tags": [
          "Genre"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/genre/update/{id}": {
      "put": {
        "tags": [
          "Genre"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenreTemplate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GenreTemplate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GenreTemplate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/genre/delete/{id}": {
      "delete": {
        "tags": [
          "Genre"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AuthorTemplate": {
        "type": "object",
        "properties": {
          "firstname": {
            "type": "string",
            "nullable": true
          },
          "lastname": {
            "type": "string",
            "nullable": true
          },
          "age": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GenreTemplate": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "minLength": 2,
            "type": "string"
          }
        },
        "additionalProperties": false
      }
    }
  }
}
2023-08-04 10:32:54,958 [.NET ThreadPool Worker] INFO  BookStore.Middlewares.Logging.RequestResponseLoggingMiddleware - HTTP REQUEST INFORMATION:  TRACE: 0HMSKLGN6BLSR:00000001 SCHEMA: http HOST: localhost:5049 PATH: /author/list QUERYSTRING:  REQUEST BODY:  CLIENT IP: ::1
2023-08-04 10:32:55,155 [.NET ThreadPool Worker] ERROR BookStore.Controllers.AuthorController - 0HMSKLGN6BLSR:00000001 - GetAllAuthorsAsync() - ErrorMessage Exception of type 'System.Exception' was thrown.
2023-08-04 10:32:55,166 [.NET ThreadPool Worker] INFO  BookStore.Middlewares.Logging.RequestResponseLoggingMiddleware - HTTP RESPONSE INFORMATION: TRACE: 0HMSKLGN6BLSR:00000001 SCHEMA: http HOST: localhost:5049 PATH: /author/list QUERYSTRING:  RESPONSE BODY: {"success":false,"message":"Internal Server Error","data":null}
2023-08-04 10:33:22,701 [.NET ThreadPool Worker] INFO  BookStore.Middlewares.Logging.RequestResponseLoggingMiddleware - HTTP REQUEST INFORMATION:  TRACE: 0HMSKLGN6BLSS:00000001 SCHEMA: http HOST: localhost:5049 PATH: /author/create QUERYSTRING:  REQUEST BODY: {  "firstname": "rqwrqwr",  "lastname": "rwqrqwrwq",  "age": 12} CLIENT IP: ::1
2023-08-04 10:33:22,748 [.NET ThreadPool Worker] INFO  BookStore.Middlewares.Logging.RequestResponseLoggingMiddleware - HTTP RESPONSE INFORMATION: TRACE: 0HMSKLGN6BLSS:00000001 SCHEMA: http HOST: localhost:5049 PATH: /author/create QUERYSTRING:  RESPONSE BODY: {"type":"https://tools.ietf.org/html/rfc7231#section-6.5.1","title":"One or more validation errors occurred.","status":400,"traceId":"0HMSKLGN6BLSS:00000001","errors":{"$":["The input does not contain any JSON tokens. Expected the input to start with a valid JSON token, when isFinalBlock is true. Path: $ | LineNumber: 0 | BytePositionInLine: 0."],"template":["The template field is required."]}}
2023-08-04 10:43:28,257 [20] INFO  Microsoft.Hosting.Lifetime - Application is shutting down...
2023-08-04 10:43:35,632 [1] INFO  Microsoft.Hosting.Lifetime - Now listening on: http://localhost:5049
2023-08-04 10:43:35,643 [1] INFO  Microsoft.Hosting.Lifetime - Application started. Press Ctrl+C to shut down.
2023-08-04 10:43:35,644 [1] INFO  Microsoft.Hosting.Lifetime - Hosting environment: Development
2023-08-04 10:43:35,644 [1] INFO  Microsoft.Hosting.Lifetime - Content root path: P:\C#\BookStore\BookStore
2023-08-04 10:43:39,487 [.NET ThreadPool Worker] INFO  BookStore.Middlewares.Logging.RequestResponseLoggingMiddleware - HTTP REQUEST INFORMATION:  TRACE: 0HMSKLMVHSC9Q:00000001 SCHEMA: http HOST: localhost:5049 PATH: /author/list QUERYSTRING:  REQUEST BODY:  CLIENT IP: ::1
2023-08-04 10:43:39,657 [.NET ThreadPool Worker] ERROR BookStore.Controllers.AuthorController - 0HMSKLMVHSC9Q:00000001 - GetAllAuthorsAsync() - ErrorMessage Exception of type 'System.Exception' was thrown.
2023-08-04 10:43:39,667 [.NET ThreadPool Worker] INFO  BookStore.Middlewares.Logging.RequestResponseLoggingMiddleware - HTTP RESPONSE INFORMATION: TRACE: 0HMSKLMVHSC9Q:00000001 SCHEMA: http HOST: localhost:5049 PATH: /author/list QUERYSTRING:  RESPONSE BODY: {"success":false,"message":"Internal Server Error","data":null}
2023-08-04 10:46:08,587 [20] INFO  Microsoft.Hosting.Lifetime - Application is shutting down...
2023-08-04 10:46:14,173 [1] INFO  Microsoft.Hosting.Lifetime - Now listening on: http://localhost:5049
2023-08-04 10:46:14,184 [1] INFO  Microsoft.Hosting.Lifetime - Application started. Press Ctrl+C to shut down.
2023-08-04 10:46:14,185 [1] INFO  Microsoft.Hosting.Lifetime - Hosting environment: Development
2023-08-04 10:46:14,185 [1] INFO  Microsoft.Hosting.Lifetime - Content root path: P:\C#\BookStore\BookStore
2023-08-04 10:46:23,182 [.NET ThreadPool Worker] INFO  BookStore.Middlewares.Logging.RequestResponseLoggingMiddleware - HTTP REQUEST INFORMATION:  TRACE: 0HMSKLOEQ9G3Q:00000001 SCHEMA: http HOST: localhost:5049 PATH: /author/list QUERYSTRING:  REQUEST BODY:  CLIENT IP: ::1
2023-08-04 10:46:23,345 [.NET ThreadPool Worker] ERROR BookStore.Controllers.AuthorController - 0HMSKLOEQ9G3Q:00000001 - GetAllAuthorsAsync() - ErrorMessage Exception of type 'System.Exception' was thrown.
2023-08-04 10:46:23,357 [.NET ThreadPool Worker] INFO  BookStore.Middlewares.Logging.RequestResponseLoggingMiddleware - HTTP RESPONSE INFORMATION: TRACE: 0HMSKLOEQ9G3Q:00000001 SCHEMA: http HOST: localhost:5049 PATH: /author/list QUERYSTRING:  RESPONSE BODY: {"success":false,"message":"Internal Server Error","data":null}
2023-08-04 10:48:17,786 [16] INFO  Microsoft.Hosting.Lifetime - Application is shutting down...
2023-08-04 10:48:23,764 [1] INFO  Microsoft.Hosting.Lifetime - Now listening on: http://localhost:5049
2023-08-04 10:48:23,776 [1] INFO  Microsoft.Hosting.Lifetime - Application started. Press Ctrl+C to shut down.
2023-08-04 10:48:23,777 [1] INFO  Microsoft.Hosting.Lifetime - Hosting environment: Development
2023-08-04 10:48:23,777 [1] INFO  Microsoft.Hosting.Lifetime - Content root path: P:\C#\BookStore\BookStore
2023-08-04 10:48:23,974 [.NET ThreadPool Worker] INFO  BookStore.Middlewares.Logging.RequestResponseLoggingMiddleware - REQUEST INFO: 0HMSKLPLAJAIT:00000001 - http - localhost:5049 - /swagger/index.html - ::1 -  - 
2023-08-04 10:48:24,118 [.NET ThreadPool Worker] INFO  BookStore.Middlewares.Logging.RequestResponseLoggingMiddleware - REQUEST INFO: 0HMSKLPLAJAIT:00000002 - http - localhost:5049 - /favicon.ico - ::1 -  - 
2023-08-04 10:49:12,734 [16] INFO  Microsoft.Hosting.Lifetime - Application is shutting down...
2023-08-04 10:49:19,166 [1] INFO  Microsoft.Hosting.Lifetime - Now listening on: http://localhost:5049
2023-08-04 10:49:19,176 [1] INFO  Microsoft.Hosting.Lifetime - Application started. Press Ctrl+C to shut down.
2023-08-04 10:49:19,176 [1] INFO  Microsoft.Hosting.Lifetime - Hosting environment: Development
2023-08-04 10:49:19,176 [1] INFO  Microsoft.Hosting.Lifetime - Content root path: P:\C#\BookStore\BookStore
2023-08-04 10:49:19,405 [.NET ThreadPool Worker] INFO  BookStore.Middlewares.Logging.RequestResponseLoggingMiddleware - REQUEST INFO: 0HMSKLQ5RG65A:00000001 - http - localhost:5049 - /swagger/index.html - ::1 -  - 
2023-08-04 10:49:19,527 [.NET ThreadPool Worker] INFO  BookStore.Middlewares.Logging.RequestResponseLoggingMiddleware - REQUEST INFO: 0HMSKLQ5RG65A:00000002 - http - localhost:5049 - /favicon.ico - ::1 -  - 
2023-08-04 10:50:41,432 [17] INFO  Microsoft.Hosting.Lifetime - Application is shutting down...
2023-08-04 10:50:48,111 [1] INFO  Microsoft.Hosting.Lifetime - Now listening on: http://localhost:5049
2023-08-04 10:50:48,122 [1] INFO  Microsoft.Hosting.Lifetime - Application started. Press Ctrl+C to shut down.
2023-08-04 10:50:48,123 [1] INFO  Microsoft.Hosting.Lifetime - Hosting environment: Development
2023-08-04 10:50:48,123 [1] INFO  Microsoft.Hosting.Lifetime - Content root path: P:\C#\BookStore\BookStore
2023-08-04 10:50:48,327 [.NET ThreadPool Worker] INFO  BookStore.Middlewares.Logging.RequestResponseLoggingMiddleware - REQUEST INFO: 0HMSKLR0BIVV1:00000001 - http - localhost:5049 - /swagger/index.html - ::1 -  - 
2023-08-04 10:50:48,440 [.NET ThreadPool Worker] INFO  BookStore.Middlewares.Logging.RequestResponseLoggingMiddleware - RESPONSE INFO: 0HMSKLR0BIVV1:00000001 - http - /swagger/index.html -  - 
2023-08-04 10:50:48,535 [.NET ThreadPool Worker] INFO  BookStore.Middlewares.Logging.RequestResponseLoggingMiddleware - REQUEST INFO: 0HMSKLR0BIVV1:00000002 - http - localhost:5049 - /favicon.ico - ::1 -  - 
2023-08-04 10:50:48,538 [.NET ThreadPool Worker] INFO  BookStore.Middlewares.Logging.RequestResponseLoggingMiddleware - RESPONSE INFO: 0HMSKLR0BIVV1:00000002 - http - /favicon.ico -  - 
2023-08-04 10:50:51,345 [.NET ThreadPool Worker] INFO  BookStore.Middlewares.Logging.RequestResponseLoggingMiddleware - REQUEST INFO: 0HMSKLR0BIVV1:00000003 - http - localhost:5049 - /swagger/index.html - ::1 -  - 
2023-08-04 10:50:51,347 [.NET ThreadPool Worker] INFO  BookStore.Middlewares.Logging.RequestResponseLoggingMiddleware - RESPONSE INFO: 0HMSKLR0BIVV1:00000003 - http - /swagger/index.html -  - 
2023-08-04 10:53:49,323 [22] INFO  Microsoft.Hosting.Lifetime - Application is shutting down...
2023-08-04 10:53:58,797 [1] INFO  Microsoft.Hosting.Lifetime - Now listening on: http://localhost:5049
2023-08-04 10:53:58,808 [1] INFO  Microsoft.Hosting.Lifetime - Application started. Press Ctrl+C to shut down.
2023-08-04 10:53:58,808 [1] INFO  Microsoft.Hosting.Lifetime - Hosting environment: Development
2023-08-04 10:53:58,809 [1] INFO  Microsoft.Hosting.Lifetime - Content root path: P:\C#\BookStore\BookStore
2023-08-04 10:53:59,084 [.NET ThreadPool Worker] INFO  BookStore.Middlewares.Logging.RequestResponseLoggingMiddleware - REQUEST INFO: 0HMSKLSP6BLMM:00000001 - http - localhost:5049 - /swagger/index.html - ::1 - 
2023-08-04 10:53:59,194 [.NET ThreadPool Worker] INFO  BookStore.Middlewares.Logging.RequestResponseLoggingMiddleware - RESPONSE INFO: 0HMSKLSP6BLMM:00000001 - http - /swagger/index.html - 
2023-08-04 10:53:59,320 [.NET ThreadPool Worker] INFO  BookStore.Middlewares.Logging.RequestResponseLoggingMiddleware - REQUEST INFO: 0HMSKLSP6BLMM:00000002 - http - localhost:5049 - /swagger/v1/swagger.json - ::1 - 
2023-08-04 10:53:59,470 [.NET ThreadPool Worker] INFO  BookStore.Middlewares.Logging.RequestResponseLoggingMiddleware - RESPONSE INFO: 0HMSKLSP6BLMM:00000002 - http - /swagger/v1/swagger.json - 
2023-08-04 10:54:01,920 [.NET ThreadPool Worker] INFO  BookStore.Middlewares.Logging.RequestResponseLoggingMiddleware - REQUEST INFO: 0HMSKLSP6BLMM:00000003 - http - localhost:5049 - /author/list - ::1 - 
2023-08-04 10:54:02,378 [.NET ThreadPool Worker] ERROR BookStore.Controllers.AuthorController - 0HMSKLSP6BLMM:00000003 - GetAllAuthorsAsync() - ErrorMessage Exception of type 'System.Exception' was thrown.
2023-08-04 10:54:02,388 [.NET ThreadPool Worker] INFO  BookStore.Middlewares.Logging.RequestResponseLoggingMiddleware - RESPONSE INFO: 0HMSKLSP6BLMM:00000003 - http - /author/list - 
2023-08-04 10:54:27,607 [16] INFO  Microsoft.Hosting.Lifetime - Application is shutting down...
2023-08-04 10:54:34,249 [1] INFO  Microsoft.Hosting.Lifetime - Now listening on: http://localhost:5049
2023-08-04 10:54:34,260 [1] INFO  Microsoft.Hosting.Lifetime - Application started. Press Ctrl+C to shut down.
2023-08-04 10:54:34,260 [1] INFO  Microsoft.Hosting.Lifetime - Hosting environment: Development
2023-08-04 10:54:34,261 [1] INFO  Microsoft.Hosting.Lifetime - Content root path: P:\C#\BookStore\BookStore
2023-08-04 10:54:34,471 [.NET ThreadPool Worker] INFO  BookStore.Middlewares.Logging.RequestResponseLoggingMiddleware - REQUEST INFO: 0HMSKLT3O461R:00000001 - http - localhost:5049 - /swagger/index.html - ::1 - context.Request.QueryString.Value
2023-08-04 10:54:34,638 [.NET ThreadPool Worker] INFO  BookStore.Middlewares.Logging.RequestResponseLoggingMiddleware - RESPONSE INFO: 0HMSKLT3O461R:00000001 - http - /swagger/index.html - 
2023-08-04 10:54:34,744 [.NET ThreadPool Worker] INFO  BookStore.Middlewares.Logging.RequestResponseLoggingMiddleware - REQUEST INFO: 0HMSKLT3O461R:00000002 - http - localhost:5049 - /swagger/v1/swagger.json - ::1 - context.Request.QueryString.Value
2023-08-04 10:54:34,864 [.NET ThreadPool Worker] INFO  BookStore.Middlewares.Logging.RequestResponseLoggingMiddleware - RESPONSE INFO: 0HMSKLT3O461R:00000002 - http - /swagger/v1/swagger.json - 
2023-08-04 10:54:39,570 [.NET ThreadPool Worker] INFO  BookStore.Middlewares.Logging.RequestResponseLoggingMiddleware - REQUEST INFO: 0HMSKLT3O461R:00000003 - http - localhost:5049 - /author/list - ::1 - context.Request.QueryString.Value
2023-08-04 10:54:39,733 [.NET ThreadPool Worker] ERROR BookStore.Controllers.AuthorController - 0HMSKLT3O461R:00000003 - GetAllAuthorsAsync() - ErrorMessage Exception of type 'System.Exception' was thrown.
2023-08-04 10:54:39,745 [.NET ThreadPool Worker] INFO  BookStore.Middlewares.Logging.RequestResponseLoggingMiddleware - RESPONSE INFO: 0HMSKLT3O461R:00000003 - http - /author/list - 
2023-08-04 10:55:22,644 [17] INFO  Microsoft.Hosting.Lifetime - Application is shutting down...
2023-08-04 10:55:29,197 [1] INFO  Microsoft.Hosting.Lifetime - Now listening on: http://localhost:5049
2023-08-04 10:55:29,208 [1] INFO  Microsoft.Hosting.Lifetime - Application started. Press Ctrl+C to shut down.
2023-08-04 10:55:29,209 [1] INFO  Microsoft.Hosting.Lifetime - Hosting environment: Development
2023-08-04 10:55:29,209 [1] INFO  Microsoft.Hosting.Lifetime - Content root path: P:\C#\BookStore\BookStore
2023-08-04 10:55:29,453 [.NET ThreadPool Worker] INFO  BookStore.Middlewares.Logging.RequestResponseLoggingMiddleware - REQUEST INFO: 0HMSKLTK4B0CK:00000001 - http - localhost:5049 - /swagger/index.html - ::1 - 
2023-08-04 10:55:29,454 [.NET ThreadPool Worker] INFO  BookStore.Middlewares.Logging.RequestResponseLoggingMiddleware - RESPONSE INFO: 0HMSKLTK4B0CK:00000001 - http - /swagger/index.html - 
2023-08-04 10:55:32,153 [.NET ThreadPool Worker] INFO  BookStore.Middlewares.Logging.RequestResponseLoggingMiddleware - REQUEST INFO: 0HMSKLTK4B0CK:00000002 - http - localhost:5049 - /swagger/index.html - ::1 - 
2023-08-04 10:55:32,154 [.NET ThreadPool Worker] INFO  BookStore.Middlewares.Logging.RequestResponseLoggingMiddleware - RESPONSE INFO: 0HMSKLTK4B0CK:00000002 - http - /swagger/index.html - 
2023-08-04 10:55:57,176 [19] INFO  Microsoft.Hosting.Lifetime - Application is shutting down...
2023-08-04 10:56:04,032 [1] INFO  Microsoft.Hosting.Lifetime - Now listening on: http://localhost:5049
2023-08-04 10:56:04,043 [1] INFO  Microsoft.Hosting.Lifetime - Application started. Press Ctrl+C to shut down.
2023-08-04 10:56:04,044 [1] INFO  Microsoft.Hosting.Lifetime - Hosting environment: Development
2023-08-04 10:56:04,044 [1] INFO  Microsoft.Hosting.Lifetime - Content root path: P:\C#\BookStore\BookStore
2023-08-04 10:56:04,684 [.NET ThreadPool Worker] INFO  BookStore.Middlewares.Logging.RequestResponseLoggingMiddleware - REQUEST INFO: 0HMSKLTUKLNRU:00000001 - http - localhost:5049 - /swagger/index.html - ::1 - 
2023-08-04 10:56:04,685 [.NET ThreadPool Worker] INFO  BookStore.Middlewares.Logging.RequestResponseLoggingMiddleware - RESPONSE INFO: 0HMSKLTUKLNRU:00000001 - http - /swagger/index.html - 
2023-08-04 10:56:04,914 [.NET ThreadPool Worker] INFO  BookStore.Middlewares.Logging.RequestResponseLoggingMiddleware - REQUEST INFO: 0HMSKLTUKLNRU:00000002 - http - localhost:5049 - /swagger/v1/swagger.json - ::1 - 
2023-08-04 10:56:04,914 [.NET ThreadPool Worker] INFO  BookStore.Middlewares.Logging.RequestResponseLoggingMiddleware - RESPONSE INFO: 0HMSKLTUKLNRU:00000002 - http - /swagger/v1/swagger.json - 
2023-08-04 10:56:07,658 [.NET ThreadPool Worker] INFO  BookStore.Middlewares.Logging.RequestResponseLoggingMiddleware - REQUEST INFO: 0HMSKLTUKLNRU:00000003 - http - localhost:5049 - /author/list - ::1 - 
2023-08-04 10:56:07,659 [.NET ThreadPool Worker] INFO  BookStore.Middlewares.Logging.RequestResponseLoggingMiddleware - RESPONSE INFO: 0HMSKLTUKLNRU:00000003 - http - /author/list - 
2023-08-04 10:56:07,815 [.NET ThreadPool Worker] ERROR BookStore.Controllers.AuthorController - 0HMSKLTUKLNRU:00000003 - GetAllAuthorsAsync() - ErrorMessage Exception of type 'System.Exception' was thrown.
2023-08-04 10:56:18,739 [14] INFO  Microsoft.Hosting.Lifetime - Application is shutting down...
2023-08-04 10:56:25,304 [1] INFO  Microsoft.Hosting.Lifetime - Now listening on: http://localhost:5049
2023-08-04 10:56:25,314 [1] INFO  Microsoft.Hosting.Lifetime - Application started. Press Ctrl+C to shut down.
2023-08-04 10:56:25,315 [1] INFO  Microsoft.Hosting.Lifetime - Hosting environment: Development
2023-08-04 10:56:25,315 [1] INFO  Microsoft.Hosting.Lifetime - Content root path: P:\C#\BookStore\BookStore
2023-08-04 10:56:25,965 [.NET ThreadPool Worker] INFO  BookStore.Middlewares.Logging.RequestResponseLoggingMiddleware - REQUEST INFO: 0HMSKLU4VIL12:00000001 - http - localhost:5049 - /swagger/index.html - ::1 - 
2023-08-04 10:56:26,078 [.NET ThreadPool Worker] INFO  BookStore.Middlewares.Logging.RequestResponseLoggingMiddleware - RESPONSE INFO: 0HMSKLU4VIL12:00000001 - http - /swagger/index.html - 
2023-08-04 10:56:26,199 [.NET ThreadPool Worker] INFO  BookStore.Middlewares.Logging.RequestResponseLoggingMiddleware - REQUEST INFO: 0HMSKLU4VIL12:00000002 - http - localhost:5049 - /swagger/v1/swagger.json - ::1 - 
2023-08-04 10:56:26,350 [.NET ThreadPool Worker] INFO  BookStore.Middlewares.Logging.RequestResponseLoggingMiddleware - RESPONSE INFO: 0HMSKLU4VIL12:00000002 - http - /swagger/v1/swagger.json - 
2023-08-04 10:56:30,748 [.NET ThreadPool Worker] INFO  BookStore.Middlewares.Logging.RequestResponseLoggingMiddleware - REQUEST INFO: 0HMSKLU4VIL12:00000003 - http - localhost:5049 - /author/list - ::1 - 
2023-08-04 10:56:30,895 [.NET ThreadPool Worker] ERROR BookStore.Controllers.AuthorController - 0HMSKLU4VIL12:00000003 - GetAllAuthorsAsync() - ErrorMessage Exception of type 'System.Exception' was thrown.
2023-08-04 10:56:30,906 [.NET ThreadPool Worker] INFO  BookStore.Middlewares.Logging.RequestResponseLoggingMiddleware - RESPONSE INFO: 0HMSKLU4VIL12:00000003 - http - /author/list - 
2023-08-04 10:56:48,120 [.NET ThreadPool Worker] INFO  BookStore.Middlewares.Logging.RequestResponseLoggingMiddleware - REQUEST INFO: 0HMSKLU4VIL14:00000001 - http - localhost:5049 - /book/list - ::1 - 
2023-08-04 10:56:48,142 [.NET ThreadPool Worker] INFO  BookStore.Controllers.BookController - List Books
2023-08-04 10:56:49,846 [.NET ThreadPool Worker] INFO  BookStore.Middlewares.Logging.RequestResponseLoggingMiddleware - RESPONSE INFO: 0HMSKLU4VIL14:00000001 - http - /book/list - 
2023-08-04 10:57:12,992 [16] INFO  Microsoft.Hosting.Lifetime - Application is shutting down...
2023-08-04 10:57:33,325 [1] INFO  Microsoft.Hosting.Lifetime - Now listening on: http://localhost:5049
2023-08-04 10:57:33,336 [1] INFO  Microsoft.Hosting.Lifetime - Application started. Press Ctrl+C to shut down.
2023-08-04 10:57:33,337 [1] INFO  Microsoft.Hosting.Lifetime - Hosting environment: Development
2023-08-04 10:57:33,337 [1] INFO  Microsoft.Hosting.Lifetime - Content root path: P:\C#\BookStore\BookStore
2023-08-04 10:57:33,552 [.NET ThreadPool Worker] INFO  BookStore.Middlewares.Logging.RequestResponseLoggingMiddleware - REQUEST INFO: 0HMSKLUP40PHN:00000001 - http - localhost:5049 - /swagger/index.html - ::1 - 
2023-08-04 10:57:33,716 [.NET ThreadPool Worker] INFO  BookStore.Middlewares.Logging.RequestResponseLoggingMiddleware - RESPONSE INFO: 0HMSKLUP40PHN:00000001 - http - /swagger/index.html - 
2023-08-04 10:57:33,829 [.NET ThreadPool Worker] INFO  BookStore.Middlewares.Logging.RequestResponseLoggingMiddleware - REQUEST INFO: 0HMSKLUP40PHN:00000002 - http - localhost:5049 - /swagger/v1/swagger.json - ::1 - 
2023-08-04 10:57:33,953 [.NET ThreadPool Worker] INFO  BookStore.Middlewares.Logging.RequestResponseLoggingMiddleware - RESPONSE INFO: 0HMSKLUP40PHN:00000002 - http - /swagger/v1/swagger.json - 
2023-08-04 10:57:40,447 [.NET ThreadPool Worker] INFO  BookStore.Middlewares.Logging.RequestResponseLoggingMiddleware - REQUEST INFO: 0HMSKLUP40PHN:00000003 - http - localhost:5049 - /author/list - ::1 - 
2023-08-04 10:57:42,211 [.NET ThreadPool Worker] INFO  BookStore.Middlewares.Logging.RequestResponseLoggingMiddleware - RESPONSE INFO: 0HMSKLUP40PHN:00000003 - http - /author/list - 
2023-08-04 10:59:27,009 [16] INFO  Microsoft.Hosting.Lifetime - Application is shutting down...
2023-08-04 10:59:37,525 [1] INFO  Microsoft.Hosting.Lifetime - Now listening on: http://localhost:5049
2023-08-04 10:59:37,536 [1] INFO  Microsoft.Hosting.Lifetime - Application started. Press Ctrl+C to shut down.
2023-08-04 10:59:37,536 [1] INFO  Microsoft.Hosting.Lifetime - Hosting environment: Development
2023-08-04 10:59:37,537 [1] INFO  Microsoft.Hosting.Lifetime - Content root path: P:\C#\BookStore\BookStore
2023-08-04 10:59:41,199 [.NET ThreadPool Worker] INFO  BookStore.Middlewares.Logging.RequestResponseLoggingMiddleware - HTTP REQUEST INFORMATION:  TRACE: 0HMSKLVU4VHUR:00000001 SCHEMA: http HOST: localhost:5049 PATH: /author/list QUERYSTRING:  REQUEST BODY:  CLIENT IP: ::1
2023-08-04 11:00:18,220 [16] INFO  Microsoft.Hosting.Lifetime - Application is shutting down...
2023-08-04 11:00:24,934 [1] INFO  Microsoft.Hosting.Lifetime - Now listening on: http://localhost:5049
2023-08-04 11:00:24,945 [1] INFO  Microsoft.Hosting.Lifetime - Application started. Press Ctrl+C to shut down.
2023-08-04 11:00:24,945 [1] INFO  Microsoft.Hosting.Lifetime - Hosting environment: Development
2023-08-04 11:00:24,945 [1] INFO  Microsoft.Hosting.Lifetime - Content root path: P:\C#\BookStore\BookStore
2023-08-04 11:00:29,522 [.NET ThreadPool Worker] INFO  BookStore.Middlewares.Logging.RequestResponseLoggingMiddleware - HTTP REQUEST INFORMATION:  TRACE: 0HMSKM0C8FJ6N:00000001 SCHEMA: http HOST: localhost:5049 PATH: /author/list QUERYSTRING:  REQUEST BODY:  CLIENT IP: ::1
2023-08-04 11:00:31,168 [.NET ThreadPool Worker] INFO  BookStore.Middlewares.Logging.RequestResponseLoggingMiddleware - HTTP RESPONSE INFORMATION: TRACE: 0HMSKM0C8FJ6N:00000001 SCHEMA: http HOST: localhost:5049 PATH: /author/list QUERYSTRING:  RESPONSE BODY: {"success":true,"message":"SUCCESS","data":[{"id":2,"firstname":"Bekzod","lastname":"Toshpulatov","age":0},{"id":3,"firstname":"string","lastname":"string","age":0},{"id":4,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":5,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":6,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":7,"firstname":"string","lastname":"string","age":0},{"id":8,"firstname":"string","lastname":"string","age":0},{"id":9,"firstname":"string","lastname":"string","age":0},{"id":10,"firstname":"ewrew","lastname":"rewrwerwe","age":0},{"id":11,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":12,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":13,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":14,"firstname":"gewgewg","lastname":"egewgwegw","age":12}]}
2023-08-04 11:02:39,676 [17] INFO  Microsoft.Hosting.Lifetime - Application is shutting down...
2023-08-04 11:02:47,555 [1] INFO  Microsoft.Hosting.Lifetime - Now listening on: http://localhost:5049
2023-08-04 11:02:47,569 [1] INFO  Microsoft.Hosting.Lifetime - Application started. Press Ctrl+C to shut down.
2023-08-04 11:02:47,569 [1] INFO  Microsoft.Hosting.Lifetime - Hosting environment: Development
2023-08-04 11:02:47,571 [1] INFO  Microsoft.Hosting.Lifetime - Content root path: P:\C#\BookStore\BookStore
2023-08-04 11:02:51,309 [.NET ThreadPool Worker] INFO  BookStore.Middlewares.Logging.RequestResponseLoggingMiddleware - HTTP REQUEST INFORMATION:  TRACE: 0HMSKM1MOJ174:00000001 SCHEMA: http HOST: localhost:5049 PATH: /author/list QUERYSTRING:  REQUEST BODY:  CLIENT IP: ::1
2023-08-04 11:02:52,992 [.NET ThreadPool Worker] INFO  BookStore.Middlewares.Logging.RequestResponseLoggingMiddleware - HTTP RESPONSE INFORMATION: TRACE: 0HMSKM1MOJ174:00000001 SCHEMA: http HOST: localhost:5049 PATH: /author/list QUERYSTRING:  RESPONSE BODY: {"success":true,"message":"SUCCESS","data":[{"id":2,"firstname":"Bekzod","lastname":"Toshpulatov","age":0},{"id":3,"firstname":"string","lastname":"string","age":0},{"id":4,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":5,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":6,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":7,"firstname":"string","lastname":"string","age":0},{"id":8,"firstname":"string","lastname":"string","age":0},{"id":9,"firstname":"string","lastname":"string","age":0},{"id":10,"firstname":"ewrew","lastname":"rewrwerwe","age":0},{"id":11,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":12,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":13,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":14,"firstname":"gewgewg","lastname":"egewgwegw","age":12}]}
2023-08-04 11:03:23,314 [.NET ThreadPool Worker] INFO  BookStore.Middlewares.Logging.RequestResponseLoggingMiddleware - HTTP REQUEST INFORMATION:  TRACE: 0HMSKM1MOJ175:00000001 SCHEMA: http HOST: localhost:5049 PATH: /author/create QUERYSTRING:  REQUEST BODY: {  "firstname": "rwegwegwe",  "lastname": "ewgwgewge",  "age": 11} CLIENT IP: ::1
2023-08-04 11:03:23,360 [.NET ThreadPool Worker] INFO  BookStore.Middlewares.Logging.RequestResponseLoggingMiddleware - HTTP RESPONSE INFORMATION: TRACE: 0HMSKM1MOJ175:00000001 SCHEMA: http HOST: localhost:5049 PATH: /author/create QUERYSTRING:  RESPONSE BODY: {"type":"https://tools.ietf.org/html/rfc7231#section-6.5.1","title":"One or more validation errors occurred.","status":400,"traceId":"0HMSKM1MOJ175:00000001","errors":{"$":["The input does not contain any JSON tokens. Expected the input to start with a valid JSON token, when isFinalBlock is true. Path: $ | LineNumber: 0 | BytePositionInLine: 0."],"template":["The template field is required."]}}
2023-08-04 11:28:10,050 [.NET ThreadPool Worker] INFO  BookStore.Middlewares.Logging.RequestResponseLoggingMiddleware - HTTP REQUEST INFORMATION:  TRACE: 0HMSKM1MOJ176:00000001 SCHEMA: http HOST: localhost:5049 PATH: /genre/create QUERYSTRING:  REQUEST BODY: {  "name": "dwqdqwd"} CLIENT IP: ::1
2023-08-04 11:28:10,064 [.NET ThreadPool Worker] INFO  BookStore.Middlewares.Logging.RequestResponseLoggingMiddleware - HTTP RESPONSE INFORMATION: TRACE: 0HMSKM1MOJ176:00000001 SCHEMA: http HOST: localhost:5049 PATH: /genre/create QUERYSTRING:  RESPONSE BODY: {"type":"https://tools.ietf.org/html/rfc7231#section-6.5.1","title":"One or more validation errors occurred.","status":400,"traceId":"0HMSKM1MOJ176:00000001","errors":{"$":["The input does not contain any JSON tokens. Expected the input to start with a valid JSON token, when isFinalBlock is true. Path: $ | LineNumber: 0 | BytePositionInLine: 0."],"template":["The template field is required."]}}
2023-08-04 11:32:46,608 [4] INFO  Microsoft.Hosting.Lifetime - Application is shutting down...
2023-08-04 11:32:57,032 [1] INFO  Microsoft.Hosting.Lifetime - Now listening on: http://localhost:5049
2023-08-04 11:32:57,057 [1] INFO  Microsoft.Hosting.Lifetime - Application started. Press Ctrl+C to shut down.
2023-08-04 11:32:57,058 [1] INFO  Microsoft.Hosting.Lifetime - Hosting environment: Development
2023-08-04 11:32:57,058 [1] INFO  Microsoft.Hosting.Lifetime - Content root path: P:\C#\BookStore\BookStore
2023-08-04 11:33:23,359 [.NET ThreadPool Worker] INFO  BookStore.Middlewares.Logging.RequestResponseLoggingMiddleware - HTTP REQUEST INFORMATION:  TRACE: 0HMSKMII2UDVE:00000003 SCHEMA: http HOST: localhost:5049 PATH: /author/list QUERYSTRING:  REQUEST BODY:  CLIENT IP: ::1
2023-08-04 11:37:00,455 [.NET ThreadPool Worker] INFO  BookStore.Middlewares.Logging.RequestResponseLoggingMiddleware - HTTP RESPONSE INFORMATION: TRACE: 0HMSKMII2UDVE:00000003 SCHEMA: http HOST: localhost:5049 PATH: /author/list QUERYSTRING:  RESPONSE BODY: {"success":true,"message":"SUCCESS","data":[{"id":2,"firstname":"Bekzod","lastname":"Toshpulatov","age":0},{"id":3,"firstname":"string","lastname":"string","age":0},{"id":4,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":5,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":6,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":7,"firstname":"string","lastname":"string","age":0},{"id":8,"firstname":"string","lastname":"string","age":0},{"id":9,"firstname":"string","lastname":"string","age":0},{"id":10,"firstname":"ewrew","lastname":"rewrwerwe","age":0},{"id":11,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":12,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":13,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":14,"firstname":"gewgewg","lastname":"egewgwegw","age":12}]}
2023-08-04 11:37:23,898 [1] INFO  Microsoft.Hosting.Lifetime - Now listening on: http://localhost:5049
2023-08-04 11:37:23,909 [1] INFO  Microsoft.Hosting.Lifetime - Application started. Press Ctrl+C to shut down.
2023-08-04 11:37:23,910 [1] INFO  Microsoft.Hosting.Lifetime - Hosting environment: Development
2023-08-04 11:37:23,910 [1] INFO  Microsoft.Hosting.Lifetime - Content root path: P:\C#\BookStore\BookStore
2023-08-04 11:37:27,699 [.NET ThreadPool Worker] INFO  BookStore.Middlewares.Logging.RequestResponseLoggingMiddleware - HTTP REQUEST INFORMATION:  TRACE: 0HMSKML1I6BLA:00000003 SCHEMA: http HOST: localhost:5049 PATH: /author/list QUERYSTRING:  REQUEST BODY:  CLIENT IP: ::1
2023-08-04 11:37:29,124 [.NET ThreadPool Worker] INFO  BookStore.Middlewares.Logging.RequestResponseLoggingMiddleware - HTTP RESPONSE INFORMATION: TRACE: 0HMSKML1I6BLA:00000003 SCHEMA: http HOST: localhost:5049 PATH: /author/list QUERYSTRING:  RESPONSE BODY: {"success":true,"message":"SUCCESS","data":[{"id":2,"firstname":"Bekzod","lastname":"Toshpulatov","age":0},{"id":3,"firstname":"string","lastname":"string","age":0},{"id":4,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":5,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":6,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":7,"firstname":"string","lastname":"string","age":0},{"id":8,"firstname":"string","lastname":"string","age":0},{"id":9,"firstname":"string","lastname":"string","age":0},{"id":10,"firstname":"ewrew","lastname":"rewrwerwe","age":0},{"id":11,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":12,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":13,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":14,"firstname":"gewgewg","lastname":"egewgwegw","age":12}]}
2023-08-04 11:37:36,046 [.NET ThreadPool Worker] INFO  BookStore.Middlewares.Logging.RequestResponseLoggingMiddleware - HTTP REQUEST INFORMATION:  TRACE: 0HMSKML1I6BLA:00000004 SCHEMA: http HOST: localhost:5049 PATH: /author/list QUERYSTRING:  REQUEST BODY:  CLIENT IP: ::1
2023-08-04 11:37:36,073 [.NET ThreadPool Worker] INFO  BookStore.Middlewares.Logging.RequestResponseLoggingMiddleware - HTTP RESPONSE INFORMATION: TRACE: 0HMSKML1I6BLA:00000004 SCHEMA: http HOST: localhost:5049 PATH: /author/list QUERYSTRING:  RESPONSE BODY: {"success":true,"message":"SUCCESS","data":[{"id":2,"firstname":"Bekzod","lastname":"Toshpulatov","age":0},{"id":3,"firstname":"string","lastname":"string","age":0},{"id":4,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":5,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":6,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":7,"firstname":"string","lastname":"string","age":0},{"id":8,"firstname":"string","lastname":"string","age":0},{"id":9,"firstname":"string","lastname":"string","age":0},{"id":10,"firstname":"ewrew","lastname":"rewrwerwe","age":0},{"id":11,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":12,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":13,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":14,"firstname":"gewgewg","lastname":"egewgwegw","age":12}]}
2023-08-04 11:37:49,963 [.NET ThreadPool Worker] INFO  BookStore.Middlewares.Logging.RequestResponseLoggingMiddleware - HTTP REQUEST INFORMATION:  TRACE: 0HMSKML1I6BLB:00000001 SCHEMA: http HOST: localhost:5049 PATH: /author/create QUERYSTRING:  REQUEST BODY: {  "firstname": "stdasdasing",  "lastname": "dadsadsa",  "age": 12} CLIENT IP: ::1
2023-08-04 11:37:49,997 [.NET ThreadPool Worker] INFO  BookStore.Middlewares.Logging.RequestResponseLoggingMiddleware - HTTP RESPONSE INFORMATION: TRACE: 0HMSKML1I6BLB:00000001 SCHEMA: http HOST: localhost:5049 PATH: /author/create QUERYSTRING:  RESPONSE BODY: {"type":"https://tools.ietf.org/html/rfc7231#section-6.5.1","title":"One or more validation errors occurred.","status":400,"traceId":"0HMSKML1I6BLB:00000001","errors":{"$":["The input does not contain any JSON tokens. Expected the input to start with a valid JSON token, when isFinalBlock is true. Path: $ | LineNumber: 0 | BytePositionInLine: 0."],"template":["The template field is required."]}}
2023-08-04 11:52:52,465 [7] INFO  Microsoft.Hosting.Lifetime - Application is shutting down...
2023-08-04 11:52:59,809 [1] INFO  Microsoft.Hosting.Lifetime - Now listening on: http://localhost:5049
2023-08-04 11:52:59,823 [1] INFO  Microsoft.Hosting.Lifetime - Application started. Press Ctrl+C to shut down.
2023-08-04 11:52:59,824 [1] INFO  Microsoft.Hosting.Lifetime - Hosting environment: Development
2023-08-04 11:52:59,824 [1] INFO  Microsoft.Hosting.Lifetime - Content root path: P:\C#\BookStore\BookStore
2023-08-04 11:53:03,846 [.NET ThreadPool Worker] INFO  BookStore.Middlewares.Logging.RequestResponseLoggingMiddleware - HTTP REQUEST INFORMATION:  TRACE: 0HMSKMTOIQAQA:00000003 SCHEMA: http HOST: localhost:5049 PATH: /author/list QUERYSTRING:  REQUEST BODY:  CLIENT IP: ::1
2023-08-04 11:53:05,735 [.NET ThreadPool Worker] INFO  BookStore.Middlewares.Logging.RequestResponseLoggingMiddleware - HTTP RESPONSE INFORMATION: TRACE: 0HMSKMTOIQAQA:00000003 SCHEMA: http HOST: localhost:5049 PATH: /author/list QUERYSTRING:  RESPONSE BODY: {"success":true,"message":"SUCCESS","data":[{"id":2,"firstname":"Bekzod","lastname":"Toshpulatov","age":0},{"id":3,"firstname":"string","lastname":"string","age":0},{"id":4,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":5,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":6,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":7,"firstname":"string","lastname":"string","age":0},{"id":8,"firstname":"string","lastname":"string","age":0},{"id":9,"firstname":"string","lastname":"string","age":0},{"id":10,"firstname":"ewrew","lastname":"rewrwerwe","age":0},{"id":11,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":12,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":13,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":14,"firstname":"gewgewg","lastname":"egewgwegw","age":12}]}
2023-08-04 11:57:08,181 [4] INFO  Microsoft.Hosting.Lifetime - Application is shutting down...
2023-08-04 11:57:36,250 [1] INFO  Microsoft.Hosting.Lifetime - Now listening on: http://localhost:5049
2023-08-04 11:57:36,261 [1] INFO  Microsoft.Hosting.Lifetime - Application started. Press Ctrl+C to shut down.
2023-08-04 11:57:36,261 [1] INFO  Microsoft.Hosting.Lifetime - Hosting environment: Development
2023-08-04 11:57:36,262 [1] INFO  Microsoft.Hosting.Lifetime - Content root path: P:\C#\BookStore\BookStore
2023-08-04 11:57:37,162 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - [TraceId: 1cf551a8-fe4c-48e1-a6fc-46aa50ab30e2] Request - Method: GET, Host: localhost:5049, Path: /swagger/index.html
2023-08-04 11:57:37,170 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - [TraceId: 1cf551a8-fe4c-48e1-a6fc-46aa50ab30e2] Request Body: 
2023-08-04 11:57:37,281 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - [TraceId: 1cf551a8-fe4c-48e1-a6fc-46aa50ab30e2] Response - Status: 200
2023-08-04 11:57:37,282 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - [TraceId: 1cf551a8-fe4c-48e1-a6fc-46aa50ab30e2] Response Body: <!-- HTML for static distribution bundle build -->
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Swagger UI</title>
    <link rel="stylesheet" type="text/css" href="./swagger-ui.css">
    <link rel="icon" type="image/png" href="./favicon-32x32.png" sizes="32x32" />
    <link rel="icon" type="image/png" href="./favicon-16x16.png" sizes="16x16" />
    <style>

        html {
            box-sizing: border-box;
            overflow: -moz-scrollbars-vertical;
            overflow-y: scroll;
        }

        *,
        *:before,
        *:after {
            box-sizing: inherit;
        }

        body {
            margin: 0;
            background: #fafafa;
        }
    </style>
    
</head>

<body>
    <div id="swagger-ui"></div>

    <!-- Workaround for https://github.com/swagger-api/swagger-editor/issues/1371 -->
    <script>
        if (window.navigator.userAgent.indexOf("Edge") > -1) {
            console.log("Removing native Edge fetch in favor of swagger-ui's polyfill")
            window.fetch = undefined;
        }
    </script>

    <script src="./swagger-ui-bundle.js"></script>
    <script src="./swagger-ui-standalone-preset.js"></script>
    <script>
        /* Source: https://gist.github.com/lamberta/3768814
         * Parse a string function definition and return a function object. Does not use eval.
         * @param {string} str
         * @return {function}
         *
         * Example:
         *  var f = function (x, y) { return x * y; };
         *  var g = parseFunction(f.toString());
         *  g(33, 3); //=> 99
         */
        function parseFunction(str) {
            if (!str) return void (0);

            var fn_body_idx = str.indexOf('{'),
                fn_body = str.substring(fn_body_idx + 1, str.lastIndexOf('}')),
                fn_declare = str.substring(0, fn_body_idx),
                fn_params = fn_declare.substring(fn_declare.indexOf('(') + 1, fn_declare.lastIndexOf(')')),
                args = fn_params.split(',');

            args.push(fn_body);

            function Fn() {
                return Function.apply(this, args);
            }
            Fn.prototype = Function.prototype;

            return new Fn();
        }

        window.onload = function () {
            var configObject = JSON.parse('{"urls":[{"url":"v1/swagger.json","name":"BookStore v1"}],"deepLinking":false,"persistAuthorization":false,"displayOperationId":false,"defaultModelsExpandDepth":1,"defaultModelExpandDepth":1,"defaultModelRendering":"example","displayRequestDuration":false,"docExpansion":"list","showExtensions":false,"showCommonExtensions":false,"supportedSubmitMethods":["get","put","post","delete","options","head","patch","trace"],"tryItOutEnabled":false}');
            var oauthConfigObject = JSON.parse('{"scopeSeparator":" ","scopes":[],"useBasicAuthenticationWithAccessCodeGrant":false,"usePkceWithAuthorizationCodeGrant":false}');

            // Workaround for https://github.com/swagger-api/swagger-ui/issues/5945
            configObject.urls.forEach(function (item) {
                if (item.url.startsWith("http") || item.url.startsWith("/")) return;
                item.url = window.location.href.replace("index.html", item.url).split('#')[0];
            });

            // If validatorUrl is not explicitly provided, disable the feature by setting to null
            if (!configObject.hasOwnProperty("validatorUrl"))
                configObject.validatorUrl = null

            // If oauth2RedirectUrl isn't specified, use the built-in default
            if (!configObject.hasOwnProperty("oauth2RedirectUrl"))
                configObject.oauth2RedirectUrl = (new URL("oauth2-redirect.html", window.location.href)).href;

            // Apply mandatory parameters
            configObject.dom_id = "#swagger-ui";
            configObject.presets = [SwaggerUIBundle.presets.apis, SwaggerUIStandalonePreset];
            configObject.layout = "StandaloneLayout";

            // Parse and add interceptor functions
            var interceptors = JSON.parse('{"RequestInterceptorFunction":null,"ResponseInterceptorFunction":null}');
            if (interceptors.RequestInterceptorFunction)
                configObject.requestInterceptor = parseFunction(interceptors.RequestInterceptorFunction);
            if (interceptors.ResponseInterceptorFunction)
                configObject.responseInterceptor = parseFunction(interceptors.ResponseInterceptorFunction);

            // Begin Swagger UI call region

            const ui = SwaggerUIBundle(configObject);

            ui.initOAuth(oauthConfigObject);

            // End Swagger UI call region

            window.ui = ui
        }
    </script>
</body>
</html>

2023-08-04 11:57:37,403 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - [TraceId: f2bca1b9-418c-48c3-bc42-50eb9e6d2571] Request - Method: GET, Host: localhost:5049, Path: /swagger/v1/swagger.json
2023-08-04 11:57:37,404 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - [TraceId: f2bca1b9-418c-48c3-bc42-50eb9e6d2571] Request Body: 
2023-08-04 11:57:37,522 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - [TraceId: f2bca1b9-418c-48c3-bc42-50eb9e6d2571] Response - Status: 200
2023-08-04 11:57:37,522 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - [TraceId: f2bca1b9-418c-48c3-bc42-50eb9e6d2571] Response Body: {
  "openapi": "3.0.1",
  "info": {
    "title": "BookStore",
    "version": "1.0"
  },
  "paths": {
    "/author/list": {
      "get": {
        "tags": [
          "Author"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/author/create": {
      "post": {
        "tags": [
          "Author"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorTemplate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorTemplate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorTemplate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/author/get/{id}": {
      "get": {
        "tags": [
          "Author"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/author/update/{id}": {
      "put": {
        "tags": [
          "Author"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorTemplate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorTemplate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorTemplate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/author/delete/{id}": {
      "delete": {
        "tags": [
          "Author"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/book/list": {
      "get": {
        "tags": [
          "Book"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/book/create": {
      "post": {
        "tags": [
          "Book"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "Title": {
                    "type": "string"
                  },
                  "Description": {
                    "type": "string"
                  },
                  "AuthorId": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "ImagePath": {
                    "type": "string"
                  },
                  "Image": {
                    "type": "string",
                    "format": "binary"
                  },
                  "Genres": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "format": "int64"
                    }
                  }
                }
              },
              "encoding": {
                "Title": {
                  "style": "form"
                },
                "Description": {
                  "style": "form"
                },
                "AuthorId": {
                  "style": "form"
                },
                "ImagePath": {
                  "style": "form"
                },
                "Image": {
                  "style": "form"
                },
                "Genres": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/book/get/{id}": {
      "get": {
        "tags": [
          "Book"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/book/update/{id}": {
      "put": {
        "tags": [
          "Book"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "Title": {
                    "type": "string"
                  },
                  "Description": {
                    "type": "string"
                  },
                  "AuthorId": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "ImagePath": {
                    "type": "string"
                  },
                  "Image": {
                    "type": "string",
                    "format": "binary"
                  },
                  "Genres": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "format": "int64"
                    }
                  }
                }
              },
              "encoding": {
                "Title": {
                  "style": "form"
                },
                "Description": {
                  "style": "form"
                },
                "AuthorId": {
                  "style": "form"
                },
                "ImagePath": {
                  "style": "form"
                },
                "Image": {
                  "style": "form"
                },
                "Genres": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/book/delete/{id}": {
      "delete": {
        "tags": [
          "Book"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/genre/list": {
      "get": {
        "tags": [
          "Genre"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/genre/create": {
      "post": {
        "tags": [
          "Genre"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenreTemplate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GenreTemplate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GenreTemplate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/genre/get/{id}": {
      "get": {
        "tags": [
          "Genre"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/genre/update/{id}": {
      "put": {
        "tags": [
          "Genre"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenreTemplate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GenreTemplate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GenreTemplate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/genre/delete/{id}": {
      "delete": {
        "tags": [
          "Genre"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AuthorTemplate": {
        "type": "object",
        "properties": {
          "firstname": {
            "type": "string",
            "nullable": true
          },
          "lastname": {
            "type": "string",
            "nullable": true
          },
          "age": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GenreTemplate": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "minLength": 2,
            "type": "string"
          }
        },
        "additionalProperties": false
      }
    }
  }
}
2023-08-04 11:57:40,470 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - [TraceId: 866ef796-ca02-4c1a-b79e-ce0e0006027b] Request - Method: GET, Host: localhost:5049, Path: /author/list
2023-08-04 11:57:40,471 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - [TraceId: 866ef796-ca02-4c1a-b79e-ce0e0006027b] Request Body: 
2023-08-04 11:57:41,992 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - [TraceId: 866ef796-ca02-4c1a-b79e-ce0e0006027b] Response - Status: 200
2023-08-04 11:57:41,993 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - [TraceId: 866ef796-ca02-4c1a-b79e-ce0e0006027b] Response Body: {"success":true,"message":"SUCCESS","data":[{"id":2,"firstname":"Bekzod","lastname":"Toshpulatov","age":0},{"id":3,"firstname":"string","lastname":"string","age":0},{"id":4,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":5,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":6,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":7,"firstname":"string","lastname":"string","age":0},{"id":8,"firstname":"string","lastname":"string","age":0},{"id":9,"firstname":"string","lastname":"string","age":0},{"id":10,"firstname":"ewrew","lastname":"rewrwerwe","age":0},{"id":11,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":12,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":13,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":14,"firstname":"gewgewg","lastname":"egewgwegw","age":12}]}
2023-08-04 11:58:48,722 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - [TraceId: 722e85be-eae8-4ee3-99fc-ca0522c149f9] Request - Method: POST, Host: localhost:5049, Path: /author/create
2023-08-04 11:58:48,726 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - [TraceId: 722e85be-eae8-4ee3-99fc-ca0522c149f9] Request Body: {
  "firstname": "uheiqwguwehng",
  "lastname": "asfewgew",
  "age": 122
}
2023-08-04 11:58:49,021 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - [TraceId: 722e85be-eae8-4ee3-99fc-ca0522c149f9] Response - Status: 200
2023-08-04 11:58:49,022 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - [TraceId: 722e85be-eae8-4ee3-99fc-ca0522c149f9] Response Body: {"success":true,"message":"AUTHOR SUCCESSFULLY CREATED","data":{"id":15,"firstname":"uheiqwguwehng","lastname":"asfewgew","age":122}}
2023-08-04 12:00:40,456 [16] INFO  Microsoft.Hosting.Lifetime - Application is shutting down...
2023-08-04 12:00:47,298 [1] INFO  Microsoft.Hosting.Lifetime - Now listening on: http://localhost:5049
2023-08-04 12:00:47,324 [1] INFO  Microsoft.Hosting.Lifetime - Application started. Press Ctrl+C to shut down.
2023-08-04 12:00:47,325 [1] INFO  Microsoft.Hosting.Lifetime - Hosting environment: Development
2023-08-04 12:00:47,325 [1] INFO  Microsoft.Hosting.Lifetime - Content root path: P:\C#\BookStore\BookStore
2023-08-04 12:00:48,031 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - [TraceId: 0HMSKN23UARHC:00000001] Request - Method: GET, Host: localhost:5049, Path: /swagger/index.html
2023-08-04 12:00:48,041 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - [TraceId: 0HMSKN23UARHC:00000001] Request Body: 
2023-08-04 12:00:48,162 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - [TraceId: 0HMSKN23UARHC:00000001] Response - Status: 200
2023-08-04 12:00:48,165 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - [TraceId: 0HMSKN23UARHC:00000001] Response Body: <!-- HTML for static distribution bundle build -->
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Swagger UI</title>
    <link rel="stylesheet" type="text/css" href="./swagger-ui.css">
    <link rel="icon" type="image/png" href="./favicon-32x32.png" sizes="32x32" />
    <link rel="icon" type="image/png" href="./favicon-16x16.png" sizes="16x16" />
    <style>

        html {
            box-sizing: border-box;
            overflow: -moz-scrollbars-vertical;
            overflow-y: scroll;
        }

        *,
        *:before,
        *:after {
            box-sizing: inherit;
        }

        body {
            margin: 0;
            background: #fafafa;
        }
    </style>
    
</head>

<body>
    <div id="swagger-ui"></div>

    <!-- Workaround for https://github.com/swagger-api/swagger-editor/issues/1371 -->
    <script>
        if (window.navigator.userAgent.indexOf("Edge") > -1) {
            console.log("Removing native Edge fetch in favor of swagger-ui's polyfill")
            window.fetch = undefined;
        }
    </script>

    <script src="./swagger-ui-bundle.js"></script>
    <script src="./swagger-ui-standalone-preset.js"></script>
    <script>
        /* Source: https://gist.github.com/lamberta/3768814
         * Parse a string function definition and return a function object. Does not use eval.
         * @param {string} str
         * @return {function}
         *
         * Example:
         *  var f = function (x, y) { return x * y; };
         *  var g = parseFunction(f.toString());
         *  g(33, 3); //=> 99
         */
        function parseFunction(str) {
            if (!str) return void (0);

            var fn_body_idx = str.indexOf('{'),
                fn_body = str.substring(fn_body_idx + 1, str.lastIndexOf('}')),
                fn_declare = str.substring(0, fn_body_idx),
                fn_params = fn_declare.substring(fn_declare.indexOf('(') + 1, fn_declare.lastIndexOf(')')),
                args = fn_params.split(',');

            args.push(fn_body);

            function Fn() {
                return Function.apply(this, args);
            }
            Fn.prototype = Function.prototype;

            return new Fn();
        }

        window.onload = function () {
            var configObject = JSON.parse('{"urls":[{"url":"v1/swagger.json","name":"BookStore v1"}],"deepLinking":false,"persistAuthorization":false,"displayOperationId":false,"defaultModelsExpandDepth":1,"defaultModelExpandDepth":1,"defaultModelRendering":"example","displayRequestDuration":false,"docExpansion":"list","showExtensions":false,"showCommonExtensions":false,"supportedSubmitMethods":["get","put","post","delete","options","head","patch","trace"],"tryItOutEnabled":false}');
            var oauthConfigObject = JSON.parse('{"scopeSeparator":" ","scopes":[],"useBasicAuthenticationWithAccessCodeGrant":false,"usePkceWithAuthorizationCodeGrant":false}');

            // Workaround for https://github.com/swagger-api/swagger-ui/issues/5945
            configObject.urls.forEach(function (item) {
                if (item.url.startsWith("http") || item.url.startsWith("/")) return;
                item.url = window.location.href.replace("index.html", item.url).split('#')[0];
            });

            // If validatorUrl is not explicitly provided, disable the feature by setting to null
            if (!configObject.hasOwnProperty("validatorUrl"))
                configObject.validatorUrl = null

            // If oauth2RedirectUrl isn't specified, use the built-in default
            if (!configObject.hasOwnProperty("oauth2RedirectUrl"))
                configObject.oauth2RedirectUrl = (new URL("oauth2-redirect.html", window.location.href)).href;

            // Apply mandatory parameters
            configObject.dom_id = "#swagger-ui";
            configObject.presets = [SwaggerUIBundle.presets.apis, SwaggerUIStandalonePreset];
            configObject.layout = "StandaloneLayout";

            // Parse and add interceptor functions
            var interceptors = JSON.parse('{"RequestInterceptorFunction":null,"ResponseInterceptorFunction":null}');
            if (interceptors.RequestInterceptorFunction)
                configObject.requestInterceptor = parseFunction(interceptors.RequestInterceptorFunction);
            if (interceptors.ResponseInterceptorFunction)
                configObject.responseInterceptor = parseFunction(interceptors.ResponseInterceptorFunction);

            // Begin Swagger UI call region

            const ui = SwaggerUIBundle(configObject);

            ui.initOAuth(oauthConfigObject);

            // End Swagger UI call region

            window.ui = ui
        }
    </script>
</body>
</html>

2023-08-04 12:00:48,334 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - [TraceId: 0HMSKN23UARHC:00000002] Request - Method: GET, Host: localhost:5049, Path: /swagger/v1/swagger.json
2023-08-04 12:00:48,335 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - [TraceId: 0HMSKN23UARHC:00000002] Request Body: 
2023-08-04 12:00:48,497 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - [TraceId: 0HMSKN23UARHC:00000002] Response - Status: 200
2023-08-04 12:00:48,497 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - [TraceId: 0HMSKN23UARHC:00000002] Response Body: {
  "openapi": "3.0.1",
  "info": {
    "title": "BookStore",
    "version": "1.0"
  },
  "paths": {
    "/author/list": {
      "get": {
        "tags": [
          "Author"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/author/create": {
      "post": {
        "tags": [
          "Author"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorTemplate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorTemplate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorTemplate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/author/get/{id}": {
      "get": {
        "tags": [
          "Author"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/author/update/{id}": {
      "put": {
        "tags": [
          "Author"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorTemplate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorTemplate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorTemplate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/author/delete/{id}": {
      "delete": {
        "tags": [
          "Author"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/book/list": {
      "get": {
        "tags": [
          "Book"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/book/create": {
      "post": {
        "tags": [
          "Book"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "Title": {
                    "type": "string"
                  },
                  "Description": {
                    "type": "string"
                  },
                  "AuthorId": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "ImagePath": {
                    "type": "string"
                  },
                  "Image": {
                    "type": "string",
                    "format": "binary"
                  },
                  "Genres": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "format": "int64"
                    }
                  }
                }
              },
              "encoding": {
                "Title": {
                  "style": "form"
                },
                "Description": {
                  "style": "form"
                },
                "AuthorId": {
                  "style": "form"
                },
                "ImagePath": {
                  "style": "form"
                },
                "Image": {
                  "style": "form"
                },
                "Genres": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/book/get/{id}": {
      "get": {
        "tags": [
          "Book"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/book/update/{id}": {
      "put": {
        "tags": [
          "Book"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "Title": {
                    "type": "string"
                  },
                  "Description": {
                    "type": "string"
                  },
                  "AuthorId": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "ImagePath": {
                    "type": "string"
                  },
                  "Image": {
                    "type": "string",
                    "format": "binary"
                  },
                  "Genres": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "format": "int64"
                    }
                  }
                }
              },
              "encoding": {
                "Title": {
                  "style": "form"
                },
                "Description": {
                  "style": "form"
                },
                "AuthorId": {
                  "style": "form"
                },
                "ImagePath": {
                  "style": "form"
                },
                "Image": {
                  "style": "form"
                },
                "Genres": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/book/delete/{id}": {
      "delete": {
        "tags": [
          "Book"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/genre/list": {
      "get": {
        "tags": [
          "Genre"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/genre/create": {
      "post": {
        "tags": [
          "Genre"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenreTemplate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GenreTemplate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GenreTemplate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/genre/get/{id}": {
      "get": {
        "tags": [
          "Genre"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/genre/update/{id}": {
      "put": {
        "tags": [
          "Genre"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenreTemplate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GenreTemplate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GenreTemplate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/genre/delete/{id}": {
      "delete": {
        "tags": [
          "Genre"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AuthorTemplate": {
        "type": "object",
        "properties": {
          "firstname": {
            "type": "string",
            "nullable": true
          },
          "lastname": {
            "type": "string",
            "nullable": true
          },
          "age": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GenreTemplate": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "minLength": 2,
            "type": "string"
          }
        },
        "additionalProperties": false
      }
    }
  }
}
2023-08-04 12:00:51,782 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - [TraceId: 0HMSKN23UARHC:00000003] Request - Method: GET, Host: localhost:5049, Path: /author/list
2023-08-04 12:00:51,785 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - [TraceId: 0HMSKN23UARHC:00000003] Request Body: 
2023-08-04 12:00:53,240 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - [TraceId: 0HMSKN23UARHC:00000003] Response - Status: 200
2023-08-04 12:00:53,240 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - [TraceId: 0HMSKN23UARHC:00000003] Response Body: {"success":true,"message":"SUCCESS","data":[{"id":2,"firstname":"Bekzod","lastname":"Toshpulatov","age":0},{"id":3,"firstname":"string","lastname":"string","age":0},{"id":4,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":5,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":6,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":7,"firstname":"string","lastname":"string","age":0},{"id":8,"firstname":"string","lastname":"string","age":0},{"id":9,"firstname":"string","lastname":"string","age":0},{"id":10,"firstname":"ewrew","lastname":"rewrwerwe","age":0},{"id":11,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":12,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":13,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":14,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":15,"firstname":"uheiqwguwehng","lastname":"asfewgew","age":122}]}
2023-08-04 12:04:18,938 [20] INFO  Microsoft.Hosting.Lifetime - Application is shutting down...
2023-08-04 12:04:25,608 [1] INFO  Microsoft.Hosting.Lifetime - Now listening on: http://localhost:5049
2023-08-04 12:04:25,622 [1] INFO  Microsoft.Hosting.Lifetime - Application started. Press Ctrl+C to shut down.
2023-08-04 12:04:25,622 [1] INFO  Microsoft.Hosting.Lifetime - Hosting environment: Development
2023-08-04 12:04:25,623 [1] INFO  Microsoft.Hosting.Lifetime - Content root path: P:\C#\BookStore\BookStore
2023-08-04 12:04:25,834 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - [TraceId: 0HMSKN44RV15L:00000001] Request - Method: GET, Host: localhost:5049, Path: /swagger/index.html RequestBody: 
2023-08-04 12:04:25,950 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - [TraceId: 0HMSKN44RV15L:00000001] Response - Status: 200
2023-08-04 12:04:25,951 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - [TraceId: 0HMSKN44RV15L:00000001] Response Body: <!-- HTML for static distribution bundle build -->
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Swagger UI</title>
    <link rel="stylesheet" type="text/css" href="./swagger-ui.css">
    <link rel="icon" type="image/png" href="./favicon-32x32.png" sizes="32x32" />
    <link rel="icon" type="image/png" href="./favicon-16x16.png" sizes="16x16" />
    <style>

        html {
            box-sizing: border-box;
            overflow: -moz-scrollbars-vertical;
            overflow-y: scroll;
        }

        *,
        *:before,
        *:after {
            box-sizing: inherit;
        }

        body {
            margin: 0;
            background: #fafafa;
        }
    </style>
    
</head>

<body>
    <div id="swagger-ui"></div>

    <!-- Workaround for https://github.com/swagger-api/swagger-editor/issues/1371 -->
    <script>
        if (window.navigator.userAgent.indexOf("Edge") > -1) {
            console.log("Removing native Edge fetch in favor of swagger-ui's polyfill")
            window.fetch = undefined;
        }
    </script>

    <script src="./swagger-ui-bundle.js"></script>
    <script src="./swagger-ui-standalone-preset.js"></script>
    <script>
        /* Source: https://gist.github.com/lamberta/3768814
         * Parse a string function definition and return a function object. Does not use eval.
         * @param {string} str
         * @return {function}
         *
         * Example:
         *  var f = function (x, y) { return x * y; };
         *  var g = parseFunction(f.toString());
         *  g(33, 3); //=> 99
         */
        function parseFunction(str) {
            if (!str) return void (0);

            var fn_body_idx = str.indexOf('{'),
                fn_body = str.substring(fn_body_idx + 1, str.lastIndexOf('}')),
                fn_declare = str.substring(0, fn_body_idx),
                fn_params = fn_declare.substring(fn_declare.indexOf('(') + 1, fn_declare.lastIndexOf(')')),
                args = fn_params.split(',');

            args.push(fn_body);

            function Fn() {
                return Function.apply(this, args);
            }
            Fn.prototype = Function.prototype;

            return new Fn();
        }

        window.onload = function () {
            var configObject = JSON.parse('{"urls":[{"url":"v1/swagger.json","name":"BookStore v1"}],"deepLinking":false,"persistAuthorization":false,"displayOperationId":false,"defaultModelsExpandDepth":1,"defaultModelExpandDepth":1,"defaultModelRendering":"example","displayRequestDuration":false,"docExpansion":"list","showExtensions":false,"showCommonExtensions":false,"supportedSubmitMethods":["get","put","post","delete","options","head","patch","trace"],"tryItOutEnabled":false}');
            var oauthConfigObject = JSON.parse('{"scopeSeparator":" ","scopes":[],"useBasicAuthenticationWithAccessCodeGrant":false,"usePkceWithAuthorizationCodeGrant":false}');

            // Workaround for https://github.com/swagger-api/swagger-ui/issues/5945
            configObject.urls.forEach(function (item) {
                if (item.url.startsWith("http") || item.url.startsWith("/")) return;
                item.url = window.location.href.replace("index.html", item.url).split('#')[0];
            });

            // If validatorUrl is not explicitly provided, disable the feature by setting to null
            if (!configObject.hasOwnProperty("validatorUrl"))
                configObject.validatorUrl = null

            // If oauth2RedirectUrl isn't specified, use the built-in default
            if (!configObject.hasOwnProperty("oauth2RedirectUrl"))
                configObject.oauth2RedirectUrl = (new URL("oauth2-redirect.html", window.location.href)).href;

            // Apply mandatory parameters
            configObject.dom_id = "#swagger-ui";
            configObject.presets = [SwaggerUIBundle.presets.apis, SwaggerUIStandalonePreset];
            configObject.layout = "StandaloneLayout";

            // Parse and add interceptor functions
            var interceptors = JSON.parse('{"RequestInterceptorFunction":null,"ResponseInterceptorFunction":null}');
            if (interceptors.RequestInterceptorFunction)
                configObject.requestInterceptor = parseFunction(interceptors.RequestInterceptorFunction);
            if (interceptors.ResponseInterceptorFunction)
                configObject.responseInterceptor = parseFunction(interceptors.ResponseInterceptorFunction);

            // Begin Swagger UI call region

            const ui = SwaggerUIBundle(configObject);

            ui.initOAuth(oauthConfigObject);

            // End Swagger UI call region

            window.ui = ui
        }
    </script>
</body>
</html>

2023-08-04 12:04:26,075 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - [TraceId: 0HMSKN44RV15L:00000002] Request - Method: GET, Host: localhost:5049, Path: /swagger/v1/swagger.json RequestBody: 
2023-08-04 12:04:26,209 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - [TraceId: 0HMSKN44RV15L:00000002] Response - Status: 200
2023-08-04 12:04:26,210 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - [TraceId: 0HMSKN44RV15L:00000002] Response Body: {
  "openapi": "3.0.1",
  "info": {
    "title": "BookStore",
    "version": "1.0"
  },
  "paths": {
    "/author/list": {
      "get": {
        "tags": [
          "Author"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/author/create": {
      "post": {
        "tags": [
          "Author"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorTemplate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorTemplate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorTemplate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/author/get/{id}": {
      "get": {
        "tags": [
          "Author"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/author/update/{id}": {
      "put": {
        "tags": [
          "Author"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorTemplate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorTemplate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorTemplate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/author/delete/{id}": {
      "delete": {
        "tags": [
          "Author"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/book/list": {
      "get": {
        "tags": [
          "Book"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/book/create": {
      "post": {
        "tags": [
          "Book"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "Title": {
                    "type": "string"
                  },
                  "Description": {
                    "type": "string"
                  },
                  "AuthorId": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "ImagePath": {
                    "type": "string"
                  },
                  "Image": {
                    "type": "string",
                    "format": "binary"
                  },
                  "Genres": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "format": "int64"
                    }
                  }
                }
              },
              "encoding": {
                "Title": {
                  "style": "form"
                },
                "Description": {
                  "style": "form"
                },
                "AuthorId": {
                  "style": "form"
                },
                "ImagePath": {
                  "style": "form"
                },
                "Image": {
                  "style": "form"
                },
                "Genres": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/book/get/{id}": {
      "get": {
        "tags": [
          "Book"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/book/update/{id}": {
      "put": {
        "tags": [
          "Book"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "Title": {
                    "type": "string"
                  },
                  "Description": {
                    "type": "string"
                  },
                  "AuthorId": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "ImagePath": {
                    "type": "string"
                  },
                  "Image": {
                    "type": "string",
                    "format": "binary"
                  },
                  "Genres": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "format": "int64"
                    }
                  }
                }
              },
              "encoding": {
                "Title": {
                  "style": "form"
                },
                "Description": {
                  "style": "form"
                },
                "AuthorId": {
                  "style": "form"
                },
                "ImagePath": {
                  "style": "form"
                },
                "Image": {
                  "style": "form"
                },
                "Genres": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/book/delete/{id}": {
      "delete": {
        "tags": [
          "Book"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/genre/list": {
      "get": {
        "tags": [
          "Genre"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/genre/create": {
      "post": {
        "tags": [
          "Genre"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenreTemplate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GenreTemplate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GenreTemplate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/genre/get/{id}": {
      "get": {
        "tags": [
          "Genre"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/genre/update/{id}": {
      "put": {
        "tags": [
          "Genre"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenreTemplate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GenreTemplate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GenreTemplate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/genre/delete/{id}": {
      "delete": {
        "tags": [
          "Genre"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AuthorTemplate": {
        "type": "object",
        "properties": {
          "firstname": {
            "type": "string",
            "nullable": true
          },
          "lastname": {
            "type": "string",
            "nullable": true
          },
          "age": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GenreTemplate": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "minLength": 2,
            "type": "string"
          }
        },
        "additionalProperties": false
      }
    }
  }
}
2023-08-04 12:04:29,841 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - [TraceId: 0HMSKN44RV15N:00000001] Request - Method: GET, Host: localhost:5049, Path: /author/list RequestBody: 
2023-08-04 12:04:31,445 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - [TraceId: 0HMSKN44RV15N:00000001] Response - Status: 200
2023-08-04 12:04:31,446 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - [TraceId: 0HMSKN44RV15N:00000001] Response Body: {"success":true,"message":"SUCCESS","data":[{"id":2,"firstname":"Bekzod","lastname":"Toshpulatov","age":0},{"id":3,"firstname":"string","lastname":"string","age":0},{"id":4,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":5,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":6,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":7,"firstname":"string","lastname":"string","age":0},{"id":8,"firstname":"string","lastname":"string","age":0},{"id":9,"firstname":"string","lastname":"string","age":0},{"id":10,"firstname":"ewrew","lastname":"rewrwerwe","age":0},{"id":11,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":12,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":13,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":14,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":15,"firstname":"uheiqwguwehng","lastname":"asfewgew","age":122}]}
2023-08-04 12:05:13,529 [15] INFO  Microsoft.Hosting.Lifetime - Application is shutting down...
2023-08-04 12:05:17,610 [1] INFO  Microsoft.Hosting.Lifetime - Now listening on: http://localhost:5049
2023-08-04 12:05:17,621 [1] INFO  Microsoft.Hosting.Lifetime - Application started. Press Ctrl+C to shut down.
2023-08-04 12:05:17,622 [1] INFO  Microsoft.Hosting.Lifetime - Hosting environment: Development
2023-08-04 12:05:17,622 [1] INFO  Microsoft.Hosting.Lifetime - Content root path: P:\C#\BookStore\BookStore
2023-08-04 12:05:18,029 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - [TraceId: 0HMSKN4KD15SM:00000001] Request - Method: GET, Host: localhost:5049, Path: /swagger/index.html RequestBody: 
2023-08-04 12:05:18,161 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - [TraceId: 0HMSKN4KD15SM:00000001] Response - Status: 200
2023-08-04 12:05:18,162 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - [TraceId: 0HMSKN4KD15SM:00000001] Response Body: <!-- HTML for static distribution bundle build -->
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Swagger UI</title>
    <link rel="stylesheet" type="text/css" href="./swagger-ui.css">
    <link rel="icon" type="image/png" href="./favicon-32x32.png" sizes="32x32" />
    <link rel="icon" type="image/png" href="./favicon-16x16.png" sizes="16x16" />
    <style>

        html {
            box-sizing: border-box;
            overflow: -moz-scrollbars-vertical;
            overflow-y: scroll;
        }

        *,
        *:before,
        *:after {
            box-sizing: inherit;
        }

        body {
            margin: 0;
            background: #fafafa;
        }
    </style>
    
</head>

<body>
    <div id="swagger-ui"></div>

    <!-- Workaround for https://github.com/swagger-api/swagger-editor/issues/1371 -->
    <script>
        if (window.navigator.userAgent.indexOf("Edge") > -1) {
            console.log("Removing native Edge fetch in favor of swagger-ui's polyfill")
            window.fetch = undefined;
        }
    </script>

    <script src="./swagger-ui-bundle.js"></script>
    <script src="./swagger-ui-standalone-preset.js"></script>
    <script>
        /* Source: https://gist.github.com/lamberta/3768814
         * Parse a string function definition and return a function object. Does not use eval.
         * @param {string} str
         * @return {function}
         *
         * Example:
         *  var f = function (x, y) { return x * y; };
         *  var g = parseFunction(f.toString());
         *  g(33, 3); //=> 99
         */
        function parseFunction(str) {
            if (!str) return void (0);

            var fn_body_idx = str.indexOf('{'),
                fn_body = str.substring(fn_body_idx + 1, str.lastIndexOf('}')),
                fn_declare = str.substring(0, fn_body_idx),
                fn_params = fn_declare.substring(fn_declare.indexOf('(') + 1, fn_declare.lastIndexOf(')')),
                args = fn_params.split(',');

            args.push(fn_body);

            function Fn() {
                return Function.apply(this, args);
            }
            Fn.prototype = Function.prototype;

            return new Fn();
        }

        window.onload = function () {
            var configObject = JSON.parse('{"urls":[{"url":"v1/swagger.json","name":"BookStore v1"}],"deepLinking":false,"persistAuthorization":false,"displayOperationId":false,"defaultModelsExpandDepth":1,"defaultModelExpandDepth":1,"defaultModelRendering":"example","displayRequestDuration":false,"docExpansion":"list","showExtensions":false,"showCommonExtensions":false,"supportedSubmitMethods":["get","put","post","delete","options","head","patch","trace"],"tryItOutEnabled":false}');
            var oauthConfigObject = JSON.parse('{"scopeSeparator":" ","scopes":[],"useBasicAuthenticationWithAccessCodeGrant":false,"usePkceWithAuthorizationCodeGrant":false}');

            // Workaround for https://github.com/swagger-api/swagger-ui/issues/5945
            configObject.urls.forEach(function (item) {
                if (item.url.startsWith("http") || item.url.startsWith("/")) return;
                item.url = window.location.href.replace("index.html", item.url).split('#')[0];
            });

            // If validatorUrl is not explicitly provided, disable the feature by setting to null
            if (!configObject.hasOwnProperty("validatorUrl"))
                configObject.validatorUrl = null

            // If oauth2RedirectUrl isn't specified, use the built-in default
            if (!configObject.hasOwnProperty("oauth2RedirectUrl"))
                configObject.oauth2RedirectUrl = (new URL("oauth2-redirect.html", window.location.href)).href;

            // Apply mandatory parameters
            configObject.dom_id = "#swagger-ui";
            configObject.presets = [SwaggerUIBundle.presets.apis, SwaggerUIStandalonePreset];
            configObject.layout = "StandaloneLayout";

            // Parse and add interceptor functions
            var interceptors = JSON.parse('{"RequestInterceptorFunction":null,"ResponseInterceptorFunction":null}');
            if (interceptors.RequestInterceptorFunction)
                configObject.requestInterceptor = parseFunction(interceptors.RequestInterceptorFunction);
            if (interceptors.ResponseInterceptorFunction)
                configObject.responseInterceptor = parseFunction(interceptors.ResponseInterceptorFunction);

            // Begin Swagger UI call region

            const ui = SwaggerUIBundle(configObject);

            ui.initOAuth(oauthConfigObject);

            // End Swagger UI call region

            window.ui = ui
        }
    </script>
</body>
</html>

2023-08-04 12:05:18,292 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - [TraceId: 0HMSKN4KD15SO:00000001] Request - Method: GET, Host: localhost:5049, Path: /swagger/v1/swagger.json RequestBody: 
2023-08-04 12:05:18,429 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - [TraceId: 0HMSKN4KD15SO:00000001] Response - Status: 200
2023-08-04 12:05:18,430 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - [TraceId: 0HMSKN4KD15SO:00000001] Response Body: {
  "openapi": "3.0.1",
  "info": {
    "title": "BookStore",
    "version": "1.0"
  },
  "paths": {
    "/author/list": {
      "get": {
        "tags": [
          "Author"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/author/create": {
      "post": {
        "tags": [
          "Author"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorTemplate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorTemplate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorTemplate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/author/get/{id}": {
      "get": {
        "tags": [
          "Author"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/author/update/{id}": {
      "put": {
        "tags": [
          "Author"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorTemplate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorTemplate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorTemplate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/author/delete/{id}": {
      "delete": {
        "tags": [
          "Author"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/book/list": {
      "get": {
        "tags": [
          "Book"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/book/create": {
      "post": {
        "tags": [
          "Book"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "Title": {
                    "type": "string"
                  },
                  "Description": {
                    "type": "string"
                  },
                  "AuthorId": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "ImagePath": {
                    "type": "string"
                  },
                  "Image": {
                    "type": "string",
                    "format": "binary"
                  },
                  "Genres": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "format": "int64"
                    }
                  }
                }
              },
              "encoding": {
                "Title": {
                  "style": "form"
                },
                "Description": {
                  "style": "form"
                },
                "AuthorId": {
                  "style": "form"
                },
                "ImagePath": {
                  "style": "form"
                },
                "Image": {
                  "style": "form"
                },
                "Genres": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/book/get/{id}": {
      "get": {
        "tags": [
          "Book"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/book/update/{id}": {
      "put": {
        "tags": [
          "Book"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "Title": {
                    "type": "string"
                  },
                  "Description": {
                    "type": "string"
                  },
                  "AuthorId": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "ImagePath": {
                    "type": "string"
                  },
                  "Image": {
                    "type": "string",
                    "format": "binary"
                  },
                  "Genres": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "format": "int64"
                    }
                  }
                }
              },
              "encoding": {
                "Title": {
                  "style": "form"
                },
                "Description": {
                  "style": "form"
                },
                "AuthorId": {
                  "style": "form"
                },
                "ImagePath": {
                  "style": "form"
                },
                "Image": {
                  "style": "form"
                },
                "Genres": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/book/delete/{id}": {
      "delete": {
        "tags": [
          "Book"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/genre/list": {
      "get": {
        "tags": [
          "Genre"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/genre/create": {
      "post": {
        "tags": [
          "Genre"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenreTemplate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GenreTemplate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GenreTemplate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/genre/get/{id}": {
      "get": {
        "tags": [
          "Genre"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/genre/update/{id}": {
      "put": {
        "tags": [
          "Genre"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenreTemplate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GenreTemplate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GenreTemplate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/genre/delete/{id}": {
      "delete": {
        "tags": [
          "Genre"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AuthorTemplate": {
        "type": "object",
        "properties": {
          "firstname": {
            "type": "string",
            "nullable": true
          },
          "lastname": {
            "type": "string",
            "nullable": true
          },
          "age": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GenreTemplate": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "minLength": 2,
            "type": "string"
          }
        },
        "additionalProperties": false
      }
    }
  }
}
2023-08-04 12:05:21,342 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - [TraceId: 0HMSKN4KD15SO:00000002] Request - Method: GET, Host: localhost:5049, Path: /author/list RequestBody: 
2023-08-04 12:05:22,863 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - [TraceId: 0HMSKN4KD15SO:00000002] Response - Status: 200
2023-08-04 12:05:22,863 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - [TraceId: 0HMSKN4KD15SO:00000002] Response Body: {"success":true,"message":"SUCCESS","data":[{"id":2,"firstname":"Bekzod","lastname":"Toshpulatov","age":0},{"id":3,"firstname":"string","lastname":"string","age":0},{"id":4,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":5,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":6,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":7,"firstname":"string","lastname":"string","age":0},{"id":8,"firstname":"string","lastname":"string","age":0},{"id":9,"firstname":"string","lastname":"string","age":0},{"id":10,"firstname":"ewrew","lastname":"rewrwerwe","age":0},{"id":11,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":12,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":13,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":14,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":15,"firstname":"uheiqwguwehng","lastname":"asfewgew","age":122}]}
2023-08-04 12:05:33,753 [14] INFO  Microsoft.Hosting.Lifetime - Application is shutting down...
2023-08-04 12:05:41,083 [1] INFO  Microsoft.Hosting.Lifetime - Now listening on: http://localhost:5049
2023-08-04 12:05:41,094 [1] INFO  Microsoft.Hosting.Lifetime - Application started. Press Ctrl+C to shut down.
2023-08-04 12:05:41,094 [1] INFO  Microsoft.Hosting.Lifetime - Hosting environment: Development
2023-08-04 12:05:41,095 [1] INFO  Microsoft.Hosting.Lifetime - Content root path: P:\C#\BookStore\BookStore
2023-08-04 12:05:41,429 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - [TraceId: 0HMSKN4RCNU6U:00000001] Request - Method: GET, Host: localhost:5049, Path: /swagger/index.html RequestBody: 
2023-08-04 12:05:41,539 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - [TraceId: 0HMSKN4RCNU6U:00000001] Response - Status: 200
2023-08-04 12:05:41,541 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - [TraceId: 0HMSKN4RCNU6U:00000001] Response Body: <!-- HTML for static distribution bundle build -->
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Swagger UI</title>
    <link rel="stylesheet" type="text/css" href="./swagger-ui.css">
    <link rel="icon" type="image/png" href="./favicon-32x32.png" sizes="32x32" />
    <link rel="icon" type="image/png" href="./favicon-16x16.png" sizes="16x16" />
    <style>

        html {
            box-sizing: border-box;
            overflow: -moz-scrollbars-vertical;
            overflow-y: scroll;
        }

        *,
        *:before,
        *:after {
            box-sizing: inherit;
        }

        body {
            margin: 0;
            background: #fafafa;
        }
    </style>
    
</head>

<body>
    <div id="swagger-ui"></div>

    <!-- Workaround for https://github.com/swagger-api/swagger-editor/issues/1371 -->
    <script>
        if (window.navigator.userAgent.indexOf("Edge") > -1) {
            console.log("Removing native Edge fetch in favor of swagger-ui's polyfill")
            window.fetch = undefined;
        }
    </script>

    <script src="./swagger-ui-bundle.js"></script>
    <script src="./swagger-ui-standalone-preset.js"></script>
    <script>
        /* Source: https://gist.github.com/lamberta/3768814
         * Parse a string function definition and return a function object. Does not use eval.
         * @param {string} str
         * @return {function}
         *
         * Example:
         *  var f = function (x, y) { return x * y; };
         *  var g = parseFunction(f.toString());
         *  g(33, 3); //=> 99
         */
        function parseFunction(str) {
            if (!str) return void (0);

            var fn_body_idx = str.indexOf('{'),
                fn_body = str.substring(fn_body_idx + 1, str.lastIndexOf('}')),
                fn_declare = str.substring(0, fn_body_idx),
                fn_params = fn_declare.substring(fn_declare.indexOf('(') + 1, fn_declare.lastIndexOf(')')),
                args = fn_params.split(',');

            args.push(fn_body);

            function Fn() {
                return Function.apply(this, args);
            }
            Fn.prototype = Function.prototype;

            return new Fn();
        }

        window.onload = function () {
            var configObject = JSON.parse('{"urls":[{"url":"v1/swagger.json","name":"BookStore v1"}],"deepLinking":false,"persistAuthorization":false,"displayOperationId":false,"defaultModelsExpandDepth":1,"defaultModelExpandDepth":1,"defaultModelRendering":"example","displayRequestDuration":false,"docExpansion":"list","showExtensions":false,"showCommonExtensions":false,"supportedSubmitMethods":["get","put","post","delete","options","head","patch","trace"],"tryItOutEnabled":false}');
            var oauthConfigObject = JSON.parse('{"scopeSeparator":" ","scopes":[],"useBasicAuthenticationWithAccessCodeGrant":false,"usePkceWithAuthorizationCodeGrant":false}');

            // Workaround for https://github.com/swagger-api/swagger-ui/issues/5945
            configObject.urls.forEach(function (item) {
                if (item.url.startsWith("http") || item.url.startsWith("/")) return;
                item.url = window.location.href.replace("index.html", item.url).split('#')[0];
            });

            // If validatorUrl is not explicitly provided, disable the feature by setting to null
            if (!configObject.hasOwnProperty("validatorUrl"))
                configObject.validatorUrl = null

            // If oauth2RedirectUrl isn't specified, use the built-in default
            if (!configObject.hasOwnProperty("oauth2RedirectUrl"))
                configObject.oauth2RedirectUrl = (new URL("oauth2-redirect.html", window.location.href)).href;

            // Apply mandatory parameters
            configObject.dom_id = "#swagger-ui";
            configObject.presets = [SwaggerUIBundle.presets.apis, SwaggerUIStandalonePreset];
            configObject.layout = "StandaloneLayout";

            // Parse and add interceptor functions
            var interceptors = JSON.parse('{"RequestInterceptorFunction":null,"ResponseInterceptorFunction":null}');
            if (interceptors.RequestInterceptorFunction)
                configObject.requestInterceptor = parseFunction(interceptors.RequestInterceptorFunction);
            if (interceptors.ResponseInterceptorFunction)
                configObject.responseInterceptor = parseFunction(interceptors.ResponseInterceptorFunction);

            // Begin Swagger UI call region

            const ui = SwaggerUIBundle(configObject);

            ui.initOAuth(oauthConfigObject);

            // End Swagger UI call region

            window.ui = ui
        }
    </script>
</body>
</html>

2023-08-04 12:05:41,662 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - [TraceId: 0HMSKN4RCNU6U:00000002] Request - Method: GET, Host: localhost:5049, Path: /swagger/v1/swagger.json RequestBody: 
2023-08-04 12:05:41,792 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - [TraceId: 0HMSKN4RCNU6U:00000002] Response - Status: 200
2023-08-04 12:05:41,793 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - [TraceId: 0HMSKN4RCNU6U:00000002] Response Body: {
  "openapi": "3.0.1",
  "info": {
    "title": "BookStore",
    "version": "1.0"
  },
  "paths": {
    "/author/list": {
      "get": {
        "tags": [
          "Author"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/author/create": {
      "post": {
        "tags": [
          "Author"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorTemplate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorTemplate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorTemplate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/author/get/{id}": {
      "get": {
        "tags": [
          "Author"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/author/update/{id}": {
      "put": {
        "tags": [
          "Author"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorTemplate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorTemplate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorTemplate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/author/delete/{id}": {
      "delete": {
        "tags": [
          "Author"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/book/list": {
      "get": {
        "tags": [
          "Book"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/book/create": {
      "post": {
        "tags": [
          "Book"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "Title": {
                    "type": "string"
                  },
                  "Description": {
                    "type": "string"
                  },
                  "AuthorId": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "ImagePath": {
                    "type": "string"
                  },
                  "Image": {
                    "type": "string",
                    "format": "binary"
                  },
                  "Genres": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "format": "int64"
                    }
                  }
                }
              },
              "encoding": {
                "Title": {
                  "style": "form"
                },
                "Description": {
                  "style": "form"
                },
                "AuthorId": {
                  "style": "form"
                },
                "ImagePath": {
                  "style": "form"
                },
                "Image": {
                  "style": "form"
                },
                "Genres": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/book/get/{id}": {
      "get": {
        "tags": [
          "Book"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/book/update/{id}": {
      "put": {
        "tags": [
          "Book"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "Title": {
                    "type": "string"
                  },
                  "Description": {
                    "type": "string"
                  },
                  "AuthorId": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "ImagePath": {
                    "type": "string"
                  },
                  "Image": {
                    "type": "string",
                    "format": "binary"
                  },
                  "Genres": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "format": "int64"
                    }
                  }
                }
              },
              "encoding": {
                "Title": {
                  "style": "form"
                },
                "Description": {
                  "style": "form"
                },
                "AuthorId": {
                  "style": "form"
                },
                "ImagePath": {
                  "style": "form"
                },
                "Image": {
                  "style": "form"
                },
                "Genres": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/book/delete/{id}": {
      "delete": {
        "tags": [
          "Book"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/genre/list": {
      "get": {
        "tags": [
          "Genre"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/genre/create": {
      "post": {
        "tags": [
          "Genre"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenreTemplate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GenreTemplate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GenreTemplate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/genre/get/{id}": {
      "get": {
        "tags": [
          "Genre"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/genre/update/{id}": {
      "put": {
        "tags": [
          "Genre"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenreTemplate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GenreTemplate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GenreTemplate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/genre/delete/{id}": {
      "delete": {
        "tags": [
          "Genre"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AuthorTemplate": {
        "type": "object",
        "properties": {
          "firstname": {
            "type": "string",
            "nullable": true
          },
          "lastname": {
            "type": "string",
            "nullable": true
          },
          "age": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GenreTemplate": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "minLength": 2,
            "type": "string"
          }
        },
        "additionalProperties": false
      }
    }
  }
}
2023-08-04 12:05:45,566 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - [TraceId: 0HMSKN4RCNU6U:00000003] Request - Method: POST, Host: localhost:5049, Path: /author/create RequestBody: {  "firstname": "string",  "lastname": "string",  "age": 0}
2023-08-04 12:05:47,176 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - [TraceId: 0HMSKN4RCNU6U:00000003] Response - Status: 200
2023-08-04 12:05:47,176 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - [TraceId: 0HMSKN4RCNU6U:00000003] Response Body: {"success":true,"message":"AUTHOR SUCCESSFULLY CREATED","data":{"id":16,"firstname":"string","lastname":"string","age":0}}
2023-08-04 12:08:50,090 [15] INFO  Microsoft.Hosting.Lifetime - Application is shutting down...
2023-08-04 12:08:54,628 [1] INFO  Microsoft.Hosting.Lifetime - Now listening on: http://localhost:5049
2023-08-04 12:08:54,640 [1] INFO  Microsoft.Hosting.Lifetime - Application started. Press Ctrl+C to shut down.
2023-08-04 12:08:54,641 [1] INFO  Microsoft.Hosting.Lifetime - Hosting environment: Development
2023-08-04 12:08:54,641 [1] INFO  Microsoft.Hosting.Lifetime - Content root path: P:\C#\BookStore\BookStore
2023-08-04 12:08:54,828 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - [TraceId: 0HMSKN6L1A86J:00000001] Request - Method: GET, Host: localhost:5049, Path: /swagger/index.html RequestBody: 
2023-08-04 12:08:54,952 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - [TraceId: 0HMSKN6L1A86J:00000001] Response - Status: 200
2023-08-04 12:08:54,953 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - [TraceId: 0HMSKN6L1A86J:00000001] Response Body: <!-- HTML for static distribution bundle build -->
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Swagger UI</title>
    <link rel="stylesheet" type="text/css" href="./swagger-ui.css">
    <link rel="icon" type="image/png" href="./favicon-32x32.png" sizes="32x32" />
    <link rel="icon" type="image/png" href="./favicon-16x16.png" sizes="16x16" />
    <style>

        html {
            box-sizing: border-box;
            overflow: -moz-scrollbars-vertical;
            overflow-y: scroll;
        }

        *,
        *:before,
        *:after {
            box-sizing: inherit;
        }

        body {
            margin: 0;
            background: #fafafa;
        }
    </style>
    
</head>

<body>
    <div id="swagger-ui"></div>

    <!-- Workaround for https://github.com/swagger-api/swagger-editor/issues/1371 -->
    <script>
        if (window.navigator.userAgent.indexOf("Edge") > -1) {
            console.log("Removing native Edge fetch in favor of swagger-ui's polyfill")
            window.fetch = undefined;
        }
    </script>

    <script src="./swagger-ui-bundle.js"></script>
    <script src="./swagger-ui-standalone-preset.js"></script>
    <script>
        /* Source: https://gist.github.com/lamberta/3768814
         * Parse a string function definition and return a function object. Does not use eval.
         * @param {string} str
         * @return {function}
         *
         * Example:
         *  var f = function (x, y) { return x * y; };
         *  var g = parseFunction(f.toString());
         *  g(33, 3); //=> 99
         */
        function parseFunction(str) {
            if (!str) return void (0);

            var fn_body_idx = str.indexOf('{'),
                fn_body = str.substring(fn_body_idx + 1, str.lastIndexOf('}')),
                fn_declare = str.substring(0, fn_body_idx),
                fn_params = fn_declare.substring(fn_declare.indexOf('(') + 1, fn_declare.lastIndexOf(')')),
                args = fn_params.split(',');

            args.push(fn_body);

            function Fn() {
                return Function.apply(this, args);
            }
            Fn.prototype = Function.prototype;

            return new Fn();
        }

        window.onload = function () {
            var configObject = JSON.parse('{"urls":[{"url":"v1/swagger.json","name":"BookStore v1"}],"deepLinking":false,"persistAuthorization":false,"displayOperationId":false,"defaultModelsExpandDepth":1,"defaultModelExpandDepth":1,"defaultModelRendering":"example","displayRequestDuration":false,"docExpansion":"list","showExtensions":false,"showCommonExtensions":false,"supportedSubmitMethods":["get","put","post","delete","options","head","patch","trace"],"tryItOutEnabled":false}');
            var oauthConfigObject = JSON.parse('{"scopeSeparator":" ","scopes":[],"useBasicAuthenticationWithAccessCodeGrant":false,"usePkceWithAuthorizationCodeGrant":false}');

            // Workaround for https://github.com/swagger-api/swagger-ui/issues/5945
            configObject.urls.forEach(function (item) {
                if (item.url.startsWith("http") || item.url.startsWith("/")) return;
                item.url = window.location.href.replace("index.html", item.url).split('#')[0];
            });

            // If validatorUrl is not explicitly provided, disable the feature by setting to null
            if (!configObject.hasOwnProperty("validatorUrl"))
                configObject.validatorUrl = null

            // If oauth2RedirectUrl isn't specified, use the built-in default
            if (!configObject.hasOwnProperty("oauth2RedirectUrl"))
                configObject.oauth2RedirectUrl = (new URL("oauth2-redirect.html", window.location.href)).href;

            // Apply mandatory parameters
            configObject.dom_id = "#swagger-ui";
            configObject.presets = [SwaggerUIBundle.presets.apis, SwaggerUIStandalonePreset];
            configObject.layout = "StandaloneLayout";

            // Parse and add interceptor functions
            var interceptors = JSON.parse('{"RequestInterceptorFunction":null,"ResponseInterceptorFunction":null}');
            if (interceptors.RequestInterceptorFunction)
                configObject.requestInterceptor = parseFunction(interceptors.RequestInterceptorFunction);
            if (interceptors.ResponseInterceptorFunction)
                configObject.responseInterceptor = parseFunction(interceptors.ResponseInterceptorFunction);

            // Begin Swagger UI call region

            const ui = SwaggerUIBundle(configObject);

            ui.initOAuth(oauthConfigObject);

            // End Swagger UI call region

            window.ui = ui
        }
    </script>
</body>
</html>

2023-08-04 12:08:55,090 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - [TraceId: 0HMSKN6L1A86J:00000002] Request - Method: GET, Host: localhost:5049, Path: /swagger/v1/swagger.json RequestBody: 
2023-08-04 12:08:55,267 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - [TraceId: 0HMSKN6L1A86J:00000002] Response - Status: 200
2023-08-04 12:08:55,267 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - [TraceId: 0HMSKN6L1A86J:00000002] Response Body: {
  "openapi": "3.0.1",
  "info": {
    "title": "BookStore",
    "version": "1.0"
  },
  "paths": {
    "/author/list": {
      "get": {
        "tags": [
          "Author"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/author/create": {
      "post": {
        "tags": [
          "Author"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorTemplate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorTemplate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorTemplate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/author/get/{id}": {
      "get": {
        "tags": [
          "Author"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/author/update/{id}": {
      "put": {
        "tags": [
          "Author"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorTemplate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorTemplate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorTemplate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/author/delete/{id}": {
      "delete": {
        "tags": [
          "Author"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/book/list": {
      "get": {
        "tags": [
          "Book"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/book/create": {
      "post": {
        "tags": [
          "Book"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "Title": {
                    "type": "string"
                  },
                  "Description": {
                    "type": "string"
                  },
                  "AuthorId": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "ImagePath": {
                    "type": "string"
                  },
                  "Image": {
                    "type": "string",
                    "format": "binary"
                  },
                  "Genres": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "format": "int64"
                    }
                  }
                }
              },
              "encoding": {
                "Title": {
                  "style": "form"
                },
                "Description": {
                  "style": "form"
                },
                "AuthorId": {
                  "style": "form"
                },
                "ImagePath": {
                  "style": "form"
                },
                "Image": {
                  "style": "form"
                },
                "Genres": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/book/get/{id}": {
      "get": {
        "tags": [
          "Book"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/book/update/{id}": {
      "put": {
        "tags": [
          "Book"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "Title": {
                    "type": "string"
                  },
                  "Description": {
                    "type": "string"
                  },
                  "AuthorId": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "ImagePath": {
                    "type": "string"
                  },
                  "Image": {
                    "type": "string",
                    "format": "binary"
                  },
                  "Genres": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "format": "int64"
                    }
                  }
                }
              },
              "encoding": {
                "Title": {
                  "style": "form"
                },
                "Description": {
                  "style": "form"
                },
                "AuthorId": {
                  "style": "form"
                },
                "ImagePath": {
                  "style": "form"
                },
                "Image": {
                  "style": "form"
                },
                "Genres": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/book/delete/{id}": {
      "delete": {
        "tags": [
          "Book"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/genre/list": {
      "get": {
        "tags": [
          "Genre"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/genre/create": {
      "post": {
        "tags": [
          "Genre"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenreTemplate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GenreTemplate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GenreTemplate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/genre/get/{id}": {
      "get": {
        "tags": [
          "Genre"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/genre/update/{id}": {
      "put": {
        "tags": [
          "Genre"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenreTemplate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GenreTemplate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GenreTemplate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/genre/delete/{id}": {
      "delete": {
        "tags": [
          "Genre"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AuthorTemplate": {
        "type": "object",
        "properties": {
          "firstname": {
            "type": "string",
            "nullable": true
          },
          "lastname": {
            "type": "string",
            "nullable": true
          },
          "age": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GenreTemplate": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "minLength": 2,
            "type": "string"
          }
        },
        "additionalProperties": false
      }
    }
  }
}
2023-08-04 12:08:58,034 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - [TraceId: 0HMSKN6L1A86J:00000003] Request - Method: GET, Host: localhost:5049, Path: /author/list RequestBody: 
2023-08-04 12:08:59,640 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - [TraceId: 0HMSKN6L1A86J:00000003] Response - Status: 200
2023-08-04 12:08:59,641 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - [TraceId: 0HMSKN6L1A86J:00000003] Response Body: {"success":true,"message":"SUCCESS","data":[{"id":2,"firstname":"Bekzod","lastname":"Toshpulatov","age":0},{"id":3,"firstname":"string","lastname":"string","age":0},{"id":4,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":5,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":6,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":7,"firstname":"string","lastname":"string","age":0},{"id":8,"firstname":"string","lastname":"string","age":0},{"id":9,"firstname":"string","lastname":"string","age":0},{"id":10,"firstname":"ewrew","lastname":"rewrwerwe","age":0},{"id":11,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":12,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":13,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":14,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":15,"firstname":"uheiqwguwehng","lastname":"asfewgew","age":122},{"id":16,"firstname":"string","lastname":"string","age":0}]}
2023-08-04 12:09:05,671 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - [TraceId: 0HMSKN6L1A86J:00000004] Request - Method: POST, Host: localhost:5049, Path: /author/create RequestBody: { "firstname": "string", "lastname": "string", "age": 0}
2023-08-04 12:09:05,935 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - [TraceId: 0HMSKN6L1A86J:00000004] Response - Status: 200
2023-08-04 12:09:05,936 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - [TraceId: 0HMSKN6L1A86J:00000004] Response Body: {"success":true,"message":"AUTHOR SUCCESSFULLY CREATED","data":{"id":17,"firstname":"string","lastname":"string","age":0}}
2023-08-04 12:09:44,991 [14] INFO  Microsoft.Hosting.Lifetime - Application is shutting down...
2023-08-04 12:09:49,312 [1] INFO  Microsoft.Hosting.Lifetime - Now listening on: http://localhost:5049
2023-08-04 12:09:49,322 [1] INFO  Microsoft.Hosting.Lifetime - Application started. Press Ctrl+C to shut down.
2023-08-04 12:09:49,322 [1] INFO  Microsoft.Hosting.Lifetime - Hosting environment: Development
2023-08-04 12:09:49,323 [1] INFO  Microsoft.Hosting.Lifetime - Content root path: P:\C#\BookStore\BookStore
2023-08-04 12:09:50,023 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - [TraceId: 0HMSKN75FCFMN:00000001] Request - Method: GET, Host: localhost:5049, Path: /swagger/index.html RequestBody: 
2023-08-04 12:09:50,151 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - [TraceId: 0HMSKN75FCFMN:00000001] Response - Status: 200
2023-08-04 12:09:50,153 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - [TraceId: 0HMSKN75FCFMN:00000001] Response Body: <!-- HTML for static distribution bundle build -->
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Swagger UI</title>
    <link rel="stylesheet" type="text/css" href="./swagger-ui.css">
    <link rel="icon" type="image/png" href="./favicon-32x32.png" sizes="32x32" />
    <link rel="icon" type="image/png" href="./favicon-16x16.png" sizes="16x16" />
    <style>

        html {
            box-sizing: border-box;
            overflow: -moz-scrollbars-vertical;
            overflow-y: scroll;
        }

        *,
        *:before,
        *:after {
            box-sizing: inherit;
        }

        body {
            margin: 0;
            background: #fafafa;
        }
    </style>
    
</head>

<body>
    <div id="swagger-ui"></div>

    <!-- Workaround for https://github.com/swagger-api/swagger-editor/issues/1371 -->
    <script>
        if (window.navigator.userAgent.indexOf("Edge") > -1) {
            console.log("Removing native Edge fetch in favor of swagger-ui's polyfill")
            window.fetch = undefined;
        }
    </script>

    <script src="./swagger-ui-bundle.js"></script>
    <script src="./swagger-ui-standalone-preset.js"></script>
    <script>
        /* Source: https://gist.github.com/lamberta/3768814
         * Parse a string function definition and return a function object. Does not use eval.
         * @param {string} str
         * @return {function}
         *
         * Example:
         *  var f = function (x, y) { return x * y; };
         *  var g = parseFunction(f.toString());
         *  g(33, 3); //=> 99
         */
        function parseFunction(str) {
            if (!str) return void (0);

            var fn_body_idx = str.indexOf('{'),
                fn_body = str.substring(fn_body_idx + 1, str.lastIndexOf('}')),
                fn_declare = str.substring(0, fn_body_idx),
                fn_params = fn_declare.substring(fn_declare.indexOf('(') + 1, fn_declare.lastIndexOf(')')),
                args = fn_params.split(',');

            args.push(fn_body);

            function Fn() {
                return Function.apply(this, args);
            }
            Fn.prototype = Function.prototype;

            return new Fn();
        }

        window.onload = function () {
            var configObject = JSON.parse('{"urls":[{"url":"v1/swagger.json","name":"BookStore v1"}],"deepLinking":false,"persistAuthorization":false,"displayOperationId":false,"defaultModelsExpandDepth":1,"defaultModelExpandDepth":1,"defaultModelRendering":"example","displayRequestDuration":false,"docExpansion":"list","showExtensions":false,"showCommonExtensions":false,"supportedSubmitMethods":["get","put","post","delete","options","head","patch","trace"],"tryItOutEnabled":false}');
            var oauthConfigObject = JSON.parse('{"scopeSeparator":" ","scopes":[],"useBasicAuthenticationWithAccessCodeGrant":false,"usePkceWithAuthorizationCodeGrant":false}');

            // Workaround for https://github.com/swagger-api/swagger-ui/issues/5945
            configObject.urls.forEach(function (item) {
                if (item.url.startsWith("http") || item.url.startsWith("/")) return;
                item.url = window.location.href.replace("index.html", item.url).split('#')[0];
            });

            // If validatorUrl is not explicitly provided, disable the feature by setting to null
            if (!configObject.hasOwnProperty("validatorUrl"))
                configObject.validatorUrl = null

            // If oauth2RedirectUrl isn't specified, use the built-in default
            if (!configObject.hasOwnProperty("oauth2RedirectUrl"))
                configObject.oauth2RedirectUrl = (new URL("oauth2-redirect.html", window.location.href)).href;

            // Apply mandatory parameters
            configObject.dom_id = "#swagger-ui";
            configObject.presets = [SwaggerUIBundle.presets.apis, SwaggerUIStandalonePreset];
            configObject.layout = "StandaloneLayout";

            // Parse and add interceptor functions
            var interceptors = JSON.parse('{"RequestInterceptorFunction":null,"ResponseInterceptorFunction":null}');
            if (interceptors.RequestInterceptorFunction)
                configObject.requestInterceptor = parseFunction(interceptors.RequestInterceptorFunction);
            if (interceptors.ResponseInterceptorFunction)
                configObject.responseInterceptor = parseFunction(interceptors.ResponseInterceptorFunction);

            // Begin Swagger UI call region

            const ui = SwaggerUIBundle(configObject);

            ui.initOAuth(oauthConfigObject);

            // End Swagger UI call region

            window.ui = ui
        }
    </script>
</body>
</html>

2023-08-04 12:09:50,290 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - [TraceId: 0HMSKN75FCFMN:00000002] Request - Method: GET, Host: localhost:5049, Path: /swagger/v1/swagger.json RequestBody: 
2023-08-04 12:09:50,445 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - [TraceId: 0HMSKN75FCFMN:00000002] Response - Status: 200
2023-08-04 12:09:50,446 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - [TraceId: 0HMSKN75FCFMN:00000002] Response Body: {
  "openapi": "3.0.1",
  "info": {
    "title": "BookStore",
    "version": "1.0"
  },
  "paths": {
    "/author/list": {
      "get": {
        "tags": [
          "Author"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/author/create": {
      "post": {
        "tags": [
          "Author"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorTemplate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorTemplate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorTemplate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/author/get/{id}": {
      "get": {
        "tags": [
          "Author"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/author/update/{id}": {
      "put": {
        "tags": [
          "Author"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorTemplate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorTemplate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorTemplate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/author/delete/{id}": {
      "delete": {
        "tags": [
          "Author"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/book/list": {
      "get": {
        "tags": [
          "Book"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/book/create": {
      "post": {
        "tags": [
          "Book"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "Title": {
                    "type": "string"
                  },
                  "Description": {
                    "type": "string"
                  },
                  "AuthorId": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "ImagePath": {
                    "type": "string"
                  },
                  "Image": {
                    "type": "string",
                    "format": "binary"
                  },
                  "Genres": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "format": "int64"
                    }
                  }
                }
              },
              "encoding": {
                "Title": {
                  "style": "form"
                },
                "Description": {
                  "style": "form"
                },
                "AuthorId": {
                  "style": "form"
                },
                "ImagePath": {
                  "style": "form"
                },
                "Image": {
                  "style": "form"
                },
                "Genres": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/book/get/{id}": {
      "get": {
        "tags": [
          "Book"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/book/update/{id}": {
      "put": {
        "tags": [
          "Book"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "Title": {
                    "type": "string"
                  },
                  "Description": {
                    "type": "string"
                  },
                  "AuthorId": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "ImagePath": {
                    "type": "string"
                  },
                  "Image": {
                    "type": "string",
                    "format": "binary"
                  },
                  "Genres": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "format": "int64"
                    }
                  }
                }
              },
              "encoding": {
                "Title": {
                  "style": "form"
                },
                "Description": {
                  "style": "form"
                },
                "AuthorId": {
                  "style": "form"
                },
                "ImagePath": {
                  "style": "form"
                },
                "Image": {
                  "style": "form"
                },
                "Genres": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/book/delete/{id}": {
      "delete": {
        "tags": [
          "Book"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/genre/list": {
      "get": {
        "tags": [
          "Genre"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/genre/create": {
      "post": {
        "tags": [
          "Genre"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenreTemplate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GenreTemplate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GenreTemplate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/genre/get/{id}": {
      "get": {
        "tags": [
          "Genre"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/genre/update/{id}": {
      "put": {
        "tags": [
          "Genre"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenreTemplate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GenreTemplate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GenreTemplate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/genre/delete/{id}": {
      "delete": {
        "tags": [
          "Genre"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AuthorTemplate": {
        "type": "object",
        "properties": {
          "firstname": {
            "type": "string",
            "nullable": true
          },
          "lastname": {
            "type": "string",
            "nullable": true
          },
          "age": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GenreTemplate": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "minLength": 2,
            "type": "string"
          }
        },
        "additionalProperties": false
      }
    }
  }
}
2023-08-04 12:09:55,444 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - [TraceId: 0HMSKN75FCFMN:00000003] Request - Method: POST, Host: localhost:5049, Path: /author/create RequestBody: {"firstname": "string","lastname": "string","age": 0}
2023-08-04 12:09:56,997 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - [TraceId: 0HMSKN75FCFMN:00000003] Response - Status: 200
2023-08-04 12:09:56,998 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - [TraceId: 0HMSKN75FCFMN:00000003] Response Body: {"success":true,"message":"AUTHOR SUCCESSFULLY CREATED","data":{"id":18,"firstname":"string","lastname":"string","age":0}}
2023-08-04 12:10:19,922 [16] INFO  Microsoft.Hosting.Lifetime - Application is shutting down...
2023-08-04 12:10:26,581 [1] INFO  Microsoft.Hosting.Lifetime - Now listening on: http://localhost:5049
2023-08-04 12:10:26,592 [1] INFO  Microsoft.Hosting.Lifetime - Application started. Press Ctrl+C to shut down.
2023-08-04 12:10:26,593 [1] INFO  Microsoft.Hosting.Lifetime - Hosting environment: Development
2023-08-04 12:10:26,593 [1] INFO  Microsoft.Hosting.Lifetime - Content root path: P:\C#\BookStore\BookStore
2023-08-04 12:10:26,807 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - [TraceId: 0HMSKN7GEH8U4:00000001] Request - Method: GET, Host: localhost:5049, Path: /swagger/index.html RequestBody: 
2023-08-04 12:10:26,922 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - [TraceId: 0HMSKN7GEH8U4:00000001] Response - Status: 200
2023-08-04 12:10:26,923 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - [TraceId: 0HMSKN7GEH8U4:00000001] Response Body: <!-- HTML for static distribution bundle build -->
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Swagger UI</title>
    <link rel="stylesheet" type="text/css" href="./swagger-ui.css">
    <link rel="icon" type="image/png" href="./favicon-32x32.png" sizes="32x32" />
    <link rel="icon" type="image/png" href="./favicon-16x16.png" sizes="16x16" />
    <style>

        html {
            box-sizing: border-box;
            overflow: -moz-scrollbars-vertical;
            overflow-y: scroll;
        }

        *,
        *:before,
        *:after {
            box-sizing: inherit;
        }

        body {
            margin: 0;
            background: #fafafa;
        }
    </style>
    
</head>

<body>
    <div id="swagger-ui"></div>

    <!-- Workaround for https://github.com/swagger-api/swagger-editor/issues/1371 -->
    <script>
        if (window.navigator.userAgent.indexOf("Edge") > -1) {
            console.log("Removing native Edge fetch in favor of swagger-ui's polyfill")
            window.fetch = undefined;
        }
    </script>

    <script src="./swagger-ui-bundle.js"></script>
    <script src="./swagger-ui-standalone-preset.js"></script>
    <script>
        /* Source: https://gist.github.com/lamberta/3768814
         * Parse a string function definition and return a function object. Does not use eval.
         * @param {string} str
         * @return {function}
         *
         * Example:
         *  var f = function (x, y) { return x * y; };
         *  var g = parseFunction(f.toString());
         *  g(33, 3); //=> 99
         */
        function parseFunction(str) {
            if (!str) return void (0);

            var fn_body_idx = str.indexOf('{'),
                fn_body = str.substring(fn_body_idx + 1, str.lastIndexOf('}')),
                fn_declare = str.substring(0, fn_body_idx),
                fn_params = fn_declare.substring(fn_declare.indexOf('(') + 1, fn_declare.lastIndexOf(')')),
                args = fn_params.split(',');

            args.push(fn_body);

            function Fn() {
                return Function.apply(this, args);
            }
            Fn.prototype = Function.prototype;

            return new Fn();
        }

        window.onload = function () {
            var configObject = JSON.parse('{"urls":[{"url":"v1/swagger.json","name":"BookStore v1"}],"deepLinking":false,"persistAuthorization":false,"displayOperationId":false,"defaultModelsExpandDepth":1,"defaultModelExpandDepth":1,"defaultModelRendering":"example","displayRequestDuration":false,"docExpansion":"list","showExtensions":false,"showCommonExtensions":false,"supportedSubmitMethods":["get","put","post","delete","options","head","patch","trace"],"tryItOutEnabled":false}');
            var oauthConfigObject = JSON.parse('{"scopeSeparator":" ","scopes":[],"useBasicAuthenticationWithAccessCodeGrant":false,"usePkceWithAuthorizationCodeGrant":false}');

            // Workaround for https://github.com/swagger-api/swagger-ui/issues/5945
            configObject.urls.forEach(function (item) {
                if (item.url.startsWith("http") || item.url.startsWith("/")) return;
                item.url = window.location.href.replace("index.html", item.url).split('#')[0];
            });

            // If validatorUrl is not explicitly provided, disable the feature by setting to null
            if (!configObject.hasOwnProperty("validatorUrl"))
                configObject.validatorUrl = null

            // If oauth2RedirectUrl isn't specified, use the built-in default
            if (!configObject.hasOwnProperty("oauth2RedirectUrl"))
                configObject.oauth2RedirectUrl = (new URL("oauth2-redirect.html", window.location.href)).href;

            // Apply mandatory parameters
            configObject.dom_id = "#swagger-ui";
            configObject.presets = [SwaggerUIBundle.presets.apis, SwaggerUIStandalonePreset];
            configObject.layout = "StandaloneLayout";

            // Parse and add interceptor functions
            var interceptors = JSON.parse('{"RequestInterceptorFunction":null,"ResponseInterceptorFunction":null}');
            if (interceptors.RequestInterceptorFunction)
                configObject.requestInterceptor = parseFunction(interceptors.RequestInterceptorFunction);
            if (interceptors.ResponseInterceptorFunction)
                configObject.responseInterceptor = parseFunction(interceptors.ResponseInterceptorFunction);

            // Begin Swagger UI call region

            const ui = SwaggerUIBundle(configObject);

            ui.initOAuth(oauthConfigObject);

            // End Swagger UI call region

            window.ui = ui
        }
    </script>
</body>
</html>

2023-08-04 12:10:27,050 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - [TraceId: 0HMSKN7GEH8U4:00000002] Request - Method: GET, Host: localhost:5049, Path: /swagger/v1/swagger.json RequestBody: 
2023-08-04 12:10:27,201 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - [TraceId: 0HMSKN7GEH8U4:00000002] Response - Status: 200
2023-08-04 12:10:27,202 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - [TraceId: 0HMSKN7GEH8U4:00000002] Response Body: {
  "openapi": "3.0.1",
  "info": {
    "title": "BookStore",
    "version": "1.0"
  },
  "paths": {
    "/author/list": {
      "get": {
        "tags": [
          "Author"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/author/create": {
      "post": {
        "tags": [
          "Author"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorTemplate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorTemplate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorTemplate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/author/get/{id}": {
      "get": {
        "tags": [
          "Author"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/author/update/{id}": {
      "put": {
        "tags": [
          "Author"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorTemplate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorTemplate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorTemplate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/author/delete/{id}": {
      "delete": {
        "tags": [
          "Author"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/book/list": {
      "get": {
        "tags": [
          "Book"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/book/create": {
      "post": {
        "tags": [
          "Book"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "Title": {
                    "type": "string"
                  },
                  "Description": {
                    "type": "string"
                  },
                  "AuthorId": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "ImagePath": {
                    "type": "string"
                  },
                  "Image": {
                    "type": "string",
                    "format": "binary"
                  },
                  "Genres": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "format": "int64"
                    }
                  }
                }
              },
              "encoding": {
                "Title": {
                  "style": "form"
                },
                "Description": {
                  "style": "form"
                },
                "AuthorId": {
                  "style": "form"
                },
                "ImagePath": {
                  "style": "form"
                },
                "Image": {
                  "style": "form"
                },
                "Genres": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/book/get/{id}": {
      "get": {
        "tags": [
          "Book"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/book/update/{id}": {
      "put": {
        "tags": [
          "Book"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "Title": {
                    "type": "string"
                  },
                  "Description": {
                    "type": "string"
                  },
                  "AuthorId": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "ImagePath": {
                    "type": "string"
                  },
                  "Image": {
                    "type": "string",
                    "format": "binary"
                  },
                  "Genres": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "format": "int64"
                    }
                  }
                }
              },
              "encoding": {
                "Title": {
                  "style": "form"
                },
                "Description": {
                  "style": "form"
                },
                "AuthorId": {
                  "style": "form"
                },
                "ImagePath": {
                  "style": "form"
                },
                "Image": {
                  "style": "form"
                },
                "Genres": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/book/delete/{id}": {
      "delete": {
        "tags": [
          "Book"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/genre/list": {
      "get": {
        "tags": [
          "Genre"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/genre/create": {
      "post": {
        "tags": [
          "Genre"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenreTemplate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GenreTemplate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GenreTemplate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/genre/get/{id}": {
      "get": {
        "tags": [
          "Genre"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/genre/update/{id}": {
      "put": {
        "tags": [
          "Genre"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenreTemplate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GenreTemplate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GenreTemplate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/genre/delete/{id}": {
      "delete": {
        "tags": [
          "Genre"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AuthorTemplate": {
        "type": "object",
        "properties": {
          "firstname": {
            "type": "string",
            "nullable": true
          },
          "lastname": {
            "type": "string",
            "nullable": true
          },
          "age": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GenreTemplate": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "minLength": 2,
            "type": "string"
          }
        },
        "additionalProperties": false
      }
    }
  }
}
2023-08-04 14:23:35,833 [3] INFO  Microsoft.Hosting.Lifetime - Application is shutting down...
2023-08-04 14:23:41,689 [1] INFO  Microsoft.Hosting.Lifetime - Now listening on: http://localhost:5049
2023-08-04 14:23:41,700 [1] INFO  Microsoft.Hosting.Lifetime - Application started. Press Ctrl+C to shut down.
2023-08-04 14:23:41,701 [1] INFO  Microsoft.Hosting.Lifetime - Hosting environment: Development
2023-08-04 14:23:41,701 [1] INFO  Microsoft.Hosting.Lifetime - Content root path: P:\C#\BookStore\BookStore
2023-08-04 14:23:42,262 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - [TraceId: 0HMSKPHV7VO9J:00000001] Request - Method: GET, Host: localhost:5049, Path: /swagger/index.html RequestBody: 
2023-08-04 14:23:42,448 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - [TraceId: 0HMSKPHV7VO9J:00000001] Response - Status: 200
2023-08-04 14:23:42,451 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - [TraceId: 0HMSKPHV7VO9J:00000001] Response Body: <!-- HTML for static distribution bundle build -->
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Swagger UI</title>
    <link rel="stylesheet" type="text/css" href="./swagger-ui.css">
    <link rel="icon" type="image/png" href="./favicon-32x32.png" sizes="32x32" />
    <link rel="icon" type="image/png" href="./favicon-16x16.png" sizes="16x16" />
    <style>

        html {
            box-sizing: border-box;
            overflow: -moz-scrollbars-vertical;
            overflow-y: scroll;
        }

        *,
        *:before,
        *:after {
            box-sizing: inherit;
        }

        body {
            margin: 0;
            background: #fafafa;
        }
    </style>
    
</head>

<body>
    <div id="swagger-ui"></div>

    <!-- Workaround for https://github.com/swagger-api/swagger-editor/issues/1371 -->
    <script>
        if (window.navigator.userAgent.indexOf("Edge") > -1) {
            console.log("Removing native Edge fetch in favor of swagger-ui's polyfill")
            window.fetch = undefined;
        }
    </script>

    <script src="./swagger-ui-bundle.js"></script>
    <script src="./swagger-ui-standalone-preset.js"></script>
    <script>
        /* Source: https://gist.github.com/lamberta/3768814
         * Parse a string function definition and return a function object. Does not use eval.
         * @param {string} str
         * @return {function}
         *
         * Example:
         *  var f = function (x, y) { return x * y; };
         *  var g = parseFunction(f.toString());
         *  g(33, 3); //=> 99
         */
        function parseFunction(str) {
            if (!str) return void (0);

            var fn_body_idx = str.indexOf('{'),
                fn_body = str.substring(fn_body_idx + 1, str.lastIndexOf('}')),
                fn_declare = str.substring(0, fn_body_idx),
                fn_params = fn_declare.substring(fn_declare.indexOf('(') + 1, fn_declare.lastIndexOf(')')),
                args = fn_params.split(',');

            args.push(fn_body);

            function Fn() {
                return Function.apply(this, args);
            }
            Fn.prototype = Function.prototype;

            return new Fn();
        }

        window.onload = function () {
            var configObject = JSON.parse('{"urls":[{"url":"v1/swagger.json","name":"BookStore v1"}],"deepLinking":false,"persistAuthorization":false,"displayOperationId":false,"defaultModelsExpandDepth":1,"defaultModelExpandDepth":1,"defaultModelRendering":"example","displayRequestDuration":false,"docExpansion":"list","showExtensions":false,"showCommonExtensions":false,"supportedSubmitMethods":["get","put","post","delete","options","head","patch","trace"],"tryItOutEnabled":false}');
            var oauthConfigObject = JSON.parse('{"scopeSeparator":" ","scopes":[],"useBasicAuthenticationWithAccessCodeGrant":false,"usePkceWithAuthorizationCodeGrant":false}');

            // Workaround for https://github.com/swagger-api/swagger-ui/issues/5945
            configObject.urls.forEach(function (item) {
                if (item.url.startsWith("http") || item.url.startsWith("/")) return;
                item.url = window.location.href.replace("index.html", item.url).split('#')[0];
            });

            // If validatorUrl is not explicitly provided, disable the feature by setting to null
            if (!configObject.hasOwnProperty("validatorUrl"))
                configObject.validatorUrl = null

            // If oauth2RedirectUrl isn't specified, use the built-in default
            if (!configObject.hasOwnProperty("oauth2RedirectUrl"))
                configObject.oauth2RedirectUrl = (new URL("oauth2-redirect.html", window.location.href)).href;

            // Apply mandatory parameters
            configObject.dom_id = "#swagger-ui";
            configObject.presets = [SwaggerUIBundle.presets.apis, SwaggerUIStandalonePreset];
            configObject.layout = "StandaloneLayout";

            // Parse and add interceptor functions
            var interceptors = JSON.parse('{"RequestInterceptorFunction":null,"ResponseInterceptorFunction":null}');
            if (interceptors.RequestInterceptorFunction)
                configObject.requestInterceptor = parseFunction(interceptors.RequestInterceptorFunction);
            if (interceptors.ResponseInterceptorFunction)
                configObject.responseInterceptor = parseFunction(interceptors.ResponseInterceptorFunction);

            // Begin Swagger UI call region

            const ui = SwaggerUIBundle(configObject);

            ui.initOAuth(oauthConfigObject);

            // End Swagger UI call region

            window.ui = ui
        }
    </script>
</body>
</html>

2023-08-04 14:23:42,655 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - [TraceId: 0HMSKPHV7VO9J:00000002] Request - Method: GET, Host: localhost:5049, Path: /swagger/v1/swagger.json RequestBody: 
2023-08-04 14:23:42,851 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - [TraceId: 0HMSKPHV7VO9J:00000002] Response - Status: 200
2023-08-04 14:23:42,852 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - [TraceId: 0HMSKPHV7VO9J:00000002] Response Body: {
  "openapi": "3.0.1",
  "info": {
    "title": "BookStore",
    "version": "1.0"
  },
  "paths": {
    "/author/list": {
      "get": {
        "tags": [
          "Author"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/author/create": {
      "post": {
        "tags": [
          "Author"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorTemplate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorTemplate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorTemplate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/author/get/{id}": {
      "get": {
        "tags": [
          "Author"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/author/update/{id}": {
      "put": {
        "tags": [
          "Author"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorTemplate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorTemplate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorTemplate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/author/delete/{id}": {
      "delete": {
        "tags": [
          "Author"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/book/list": {
      "get": {
        "tags": [
          "Book"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/book/create": {
      "post": {
        "tags": [
          "Book"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "Title": {
                    "type": "string"
                  },
                  "Description": {
                    "type": "string"
                  },
                  "AuthorId": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "ImagePath": {
                    "type": "string"
                  },
                  "Image": {
                    "type": "string",
                    "format": "binary"
                  },
                  "Genres": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "format": "int64"
                    }
                  }
                }
              },
              "encoding": {
                "Title": {
                  "style": "form"
                },
                "Description": {
                  "style": "form"
                },
                "AuthorId": {
                  "style": "form"
                },
                "ImagePath": {
                  "style": "form"
                },
                "Image": {
                  "style": "form"
                },
                "Genres": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/book/get/{id}": {
      "get": {
        "tags": [
          "Book"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/book/update/{id}": {
      "put": {
        "tags": [
          "Book"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "Title": {
                    "type": "string"
                  },
                  "Description": {
                    "type": "string"
                  },
                  "AuthorId": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "ImagePath": {
                    "type": "string"
                  },
                  "Image": {
                    "type": "string",
                    "format": "binary"
                  },
                  "Genres": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "format": "int64"
                    }
                  }
                }
              },
              "encoding": {
                "Title": {
                  "style": "form"
                },
                "Description": {
                  "style": "form"
                },
                "AuthorId": {
                  "style": "form"
                },
                "ImagePath": {
                  "style": "form"
                },
                "Image": {
                  "style": "form"
                },
                "Genres": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/book/delete/{id}": {
      "delete": {
        "tags": [
          "Book"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/genre/list": {
      "get": {
        "tags": [
          "Genre"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/genre/create": {
      "post": {
        "tags": [
          "Genre"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenreTemplate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GenreTemplate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GenreTemplate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/genre/get/{id}": {
      "get": {
        "tags": [
          "Genre"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/genre/update/{id}": {
      "put": {
        "tags": [
          "Genre"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenreTemplate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GenreTemplate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GenreTemplate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/genre/delete/{id}": {
      "delete": {
        "tags": [
          "Genre"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AuthorTemplate": {
        "type": "object",
        "properties": {
          "firstname": {
            "type": "string",
            "nullable": true
          },
          "lastname": {
            "type": "string",
            "nullable": true
          },
          "age": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GenreTemplate": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "minLength": 2,
            "type": "string"
          }
        },
        "additionalProperties": false
      }
    }
  }
}
2023-08-04 14:23:45,564 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - [TraceId: 0HMSKPHV7VO9J:00000003] Request - Method: GET, Host: localhost:5049, Path: /author/list RequestBody: 
2023-08-04 14:23:47,670 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - [TraceId: 0HMSKPHV7VO9J:00000003] Response - Status: 200
2023-08-04 14:23:47,670 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - [TraceId: 0HMSKPHV7VO9J:00000003] Response Body: {"success":true,"message":"SUCCESS","data":[{"id":2,"firstname":"Bekzod","lastname":"Toshpulatov","age":0},{"id":3,"firstname":"string","lastname":"string","age":0},{"id":4,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":5,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":6,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":7,"firstname":"string","lastname":"string","age":0},{"id":8,"firstname":"string","lastname":"string","age":0},{"id":9,"firstname":"string","lastname":"string","age":0},{"id":10,"firstname":"ewrew","lastname":"rewrwerwe","age":0},{"id":11,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":12,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":13,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":14,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":15,"firstname":"uheiqwguwehng","lastname":"asfewgew","age":122},{"id":16,"firstname":"string","lastname":"string","age":0},{"id":17,"firstname":"string","lastname":"string","age":0},{"id":18,"firstname":"string","lastname":"string","age":0}]}
2023-08-04 14:23:52,568 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - [TraceId: 0HMSKPHV7VO9L:00000001] Request - Method: POST, Host: localhost:5049, Path: /author/create RequestBody: {  "firstname": "string",  "lastname": "string",  "age": 0 }
2023-08-04 14:23:52,960 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - [TraceId: 0HMSKPHV7VO9L:00000001] Response - Status: 200
2023-08-04 14:23:52,961 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - [TraceId: 0HMSKPHV7VO9L:00000001] Response Body: {"success":true,"message":"AUTHOR SUCCESSFULLY CREATED","data":{"id":19,"firstname":"string","lastname":"string","age":0}}
2023-08-04 14:24:59,134 [13] INFO  Microsoft.Hosting.Lifetime - Application is shutting down...
2023-08-04 14:25:05,792 [1] INFO  Microsoft.Hosting.Lifetime - Now listening on: http://localhost:5049
2023-08-04 14:25:05,812 [1] INFO  Microsoft.Hosting.Lifetime - Application started. Press Ctrl+C to shut down.
2023-08-04 14:25:05,813 [1] INFO  Microsoft.Hosting.Lifetime - Hosting environment: Development
2023-08-04 14:25:05,813 [1] INFO  Microsoft.Hosting.Lifetime - Content root path: P:\C#\BookStore\BookStore
2023-08-04 14:25:06,441 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - [TraceId: 0HMSKPIO8BAGT:00000001] Request - Method: GET, Host: localhost:5049, Path: /swagger/index.html RequestBody: 
2023-08-04 14:25:06,615 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - [TraceId: 0HMSKPIO8BAGT:00000001] Response - Status: 200
2023-08-04 14:25:06,616 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - [TraceId: 0HMSKPIO8BAGT:00000001] Response Body: <!-- HTML for static distribution bundle build -->
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Swagger UI</title>
    <link rel="stylesheet" type="text/css" href="./swagger-ui.css">
    <link rel="icon" type="image/png" href="./favicon-32x32.png" sizes="32x32" />
    <link rel="icon" type="image/png" href="./favicon-16x16.png" sizes="16x16" />
    <style>

        html {
            box-sizing: border-box;
            overflow: -moz-scrollbars-vertical;
            overflow-y: scroll;
        }

        *,
        *:before,
        *:after {
            box-sizing: inherit;
        }

        body {
            margin: 0;
            background: #fafafa;
        }
    </style>
    
</head>

<body>
    <div id="swagger-ui"></div>

    <!-- Workaround for https://github.com/swagger-api/swagger-editor/issues/1371 -->
    <script>
        if (window.navigator.userAgent.indexOf("Edge") > -1) {
            console.log("Removing native Edge fetch in favor of swagger-ui's polyfill")
            window.fetch = undefined;
        }
    </script>

    <script src="./swagger-ui-bundle.js"></script>
    <script src="./swagger-ui-standalone-preset.js"></script>
    <script>
        /* Source: https://gist.github.com/lamberta/3768814
         * Parse a string function definition and return a function object. Does not use eval.
         * @param {string} str
         * @return {function}
         *
         * Example:
         *  var f = function (x, y) { return x * y; };
         *  var g = parseFunction(f.toString());
         *  g(33, 3); //=> 99
         */
        function parseFunction(str) {
            if (!str) return void (0);

            var fn_body_idx = str.indexOf('{'),
                fn_body = str.substring(fn_body_idx + 1, str.lastIndexOf('}')),
                fn_declare = str.substring(0, fn_body_idx),
                fn_params = fn_declare.substring(fn_declare.indexOf('(') + 1, fn_declare.lastIndexOf(')')),
                args = fn_params.split(',');

            args.push(fn_body);

            function Fn() {
                return Function.apply(this, args);
            }
            Fn.prototype = Function.prototype;

            return new Fn();
        }

        window.onload = function () {
            var configObject = JSON.parse('{"urls":[{"url":"v1/swagger.json","name":"BookStore v1"}],"deepLinking":false,"persistAuthorization":false,"displayOperationId":false,"defaultModelsExpandDepth":1,"defaultModelExpandDepth":1,"defaultModelRendering":"example","displayRequestDuration":false,"docExpansion":"list","showExtensions":false,"showCommonExtensions":false,"supportedSubmitMethods":["get","put","post","delete","options","head","patch","trace"],"tryItOutEnabled":false}');
            var oauthConfigObject = JSON.parse('{"scopeSeparator":" ","scopes":[],"useBasicAuthenticationWithAccessCodeGrant":false,"usePkceWithAuthorizationCodeGrant":false}');

            // Workaround for https://github.com/swagger-api/swagger-ui/issues/5945
            configObject.urls.forEach(function (item) {
                if (item.url.startsWith("http") || item.url.startsWith("/")) return;
                item.url = window.location.href.replace("index.html", item.url).split('#')[0];
            });

            // If validatorUrl is not explicitly provided, disable the feature by setting to null
            if (!configObject.hasOwnProperty("validatorUrl"))
                configObject.validatorUrl = null

            // If oauth2RedirectUrl isn't specified, use the built-in default
            if (!configObject.hasOwnProperty("oauth2RedirectUrl"))
                configObject.oauth2RedirectUrl = (new URL("oauth2-redirect.html", window.location.href)).href;

            // Apply mandatory parameters
            configObject.dom_id = "#swagger-ui";
            configObject.presets = [SwaggerUIBundle.presets.apis, SwaggerUIStandalonePreset];
            configObject.layout = "StandaloneLayout";

            // Parse and add interceptor functions
            var interceptors = JSON.parse('{"RequestInterceptorFunction":null,"ResponseInterceptorFunction":null}');
            if (interceptors.RequestInterceptorFunction)
                configObject.requestInterceptor = parseFunction(interceptors.RequestInterceptorFunction);
            if (interceptors.ResponseInterceptorFunction)
                configObject.responseInterceptor = parseFunction(interceptors.ResponseInterceptorFunction);

            // Begin Swagger UI call region

            const ui = SwaggerUIBundle(configObject);

            ui.initOAuth(oauthConfigObject);

            // End Swagger UI call region

            window.ui = ui
        }
    </script>
</body>
</html>

2023-08-04 14:25:06,758 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - [TraceId: 0HMSKPIO8BAGT:00000002] Request - Method: GET, Host: localhost:5049, Path: /swagger/v1/swagger.json RequestBody: 
2023-08-04 14:25:06,950 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - [TraceId: 0HMSKPIO8BAGT:00000002] Response - Status: 200
2023-08-04 14:25:06,950 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - [TraceId: 0HMSKPIO8BAGT:00000002] Response Body: {
  "openapi": "3.0.1",
  "info": {
    "title": "BookStore",
    "version": "1.0"
  },
  "paths": {
    "/author/list": {
      "get": {
        "tags": [
          "Author"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/author/create": {
      "post": {
        "tags": [
          "Author"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorTemplate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorTemplate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorTemplate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/author/get/{id}": {
      "get": {
        "tags": [
          "Author"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/author/update/{id}": {
      "put": {
        "tags": [
          "Author"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorTemplate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorTemplate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorTemplate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/author/delete/{id}": {
      "delete": {
        "tags": [
          "Author"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/book/list": {
      "get": {
        "tags": [
          "Book"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/book/create": {
      "post": {
        "tags": [
          "Book"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "Title": {
                    "type": "string"
                  },
                  "Description": {
                    "type": "string"
                  },
                  "AuthorId": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "ImagePath": {
                    "type": "string"
                  },
                  "Image": {
                    "type": "string",
                    "format": "binary"
                  },
                  "Genres": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "format": "int64"
                    }
                  }
                }
              },
              "encoding": {
                "Title": {
                  "style": "form"
                },
                "Description": {
                  "style": "form"
                },
                "AuthorId": {
                  "style": "form"
                },
                "ImagePath": {
                  "style": "form"
                },
                "Image": {
                  "style": "form"
                },
                "Genres": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/book/get/{id}": {
      "get": {
        "tags": [
          "Book"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/book/update/{id}": {
      "put": {
        "tags": [
          "Book"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "Title": {
                    "type": "string"
                  },
                  "Description": {
                    "type": "string"
                  },
                  "AuthorId": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "ImagePath": {
                    "type": "string"
                  },
                  "Image": {
                    "type": "string",
                    "format": "binary"
                  },
                  "Genres": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "format": "int64"
                    }
                  }
                }
              },
              "encoding": {
                "Title": {
                  "style": "form"
                },
                "Description": {
                  "style": "form"
                },
                "AuthorId": {
                  "style": "form"
                },
                "ImagePath": {
                  "style": "form"
                },
                "Image": {
                  "style": "form"
                },
                "Genres": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/book/delete/{id}": {
      "delete": {
        "tags": [
          "Book"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/genre/list": {
      "get": {
        "tags": [
          "Genre"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/genre/create": {
      "post": {
        "tags": [
          "Genre"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenreTemplate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GenreTemplate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GenreTemplate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/genre/get/{id}": {
      "get": {
        "tags": [
          "Genre"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/genre/update/{id}": {
      "put": {
        "tags": [
          "Genre"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenreTemplate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GenreTemplate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GenreTemplate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/genre/delete/{id}": {
      "delete": {
        "tags": [
          "Genre"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AuthorTemplate": {
        "type": "object",
        "properties": {
          "firstname": {
            "type": "string",
            "nullable": true
          },
          "lastname": {
            "type": "string",
            "nullable": true
          },
          "age": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GenreTemplate": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "minLength": 2,
            "type": "string"
          }
        },
        "additionalProperties": false
      }
    }
  }
}
2023-08-04 14:25:25,129 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - [TraceId: 0HMSKPIO8BAGV:00000001] Request - Method: POST, Host: localhost:5049, Path: /author/create RequestBody: { "firstname": "string", "lastname": "string", "age": 0}
2023-08-04 14:25:27,614 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - [TraceId: 0HMSKPIO8BAGV:00000001] Response - Status: 200
2023-08-04 14:25:27,614 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - [TraceId: 0HMSKPIO8BAGV:00000001] Response Body: {"success":true,"message":"AUTHOR SUCCESSFULLY CREATED","data":{"id":20,"firstname":"string","lastname":"string","age":0}}
2023-08-04 14:41:34,227 [39] INFO  Microsoft.Hosting.Lifetime - Application is shutting down...
2023-08-04 14:41:44,819 [1] INFO  Microsoft.Hosting.Lifetime - Now listening on: http://localhost:5049
2023-08-04 14:41:44,832 [1] INFO  Microsoft.Hosting.Lifetime - Application started. Press Ctrl+C to shut down.
2023-08-04 14:41:44,833 [1] INFO  Microsoft.Hosting.Lifetime - Hosting environment: Development
2023-08-04 14:41:44,833 [1] INFO  Microsoft.Hosting.Lifetime - Content root path: P:\C#\BookStore\BookStore
2023-08-04 14:41:45,632 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - REQUEST INFO:  [TraceId: 0HMSKPS21TQN4:00000001] - Schema: http - Method: GET, Host: localhost:5049, Path: /swagger/index.html, QueryString: , Client IP: ::1 RequestBody: 
2023-08-04 14:41:45,788 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - RESPONSE INFO: [TraceId: 0HMSKPS21TQN4:00000001] - Status: 200 - Response Body: <!-- HTML for static distribution bundle build -->
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Swagger UI</title>
    <link rel="stylesheet" type="text/css" href="./swagger-ui.css">
    <link rel="icon" type="image/png" href="./favicon-32x32.png" sizes="32x32" />
    <link rel="icon" type="image/png" href="./favicon-16x16.png" sizes="16x16" />
    <style>

        html {
            box-sizing: border-box;
            overflow: -moz-scrollbars-vertical;
            overflow-y: scroll;
        }

        *,
        *:before,
        *:after {
            box-sizing: inherit;
        }

        body {
            margin: 0;
            background: #fafafa;
        }
    </style>
    
</head>

<body>
    <div id="swagger-ui"></div>

    <!-- Workaround for https://github.com/swagger-api/swagger-editor/issues/1371 -->
    <script>
        if (window.navigator.userAgent.indexOf("Edge") > -1) {
            console.log("Removing native Edge fetch in favor of swagger-ui's polyfill")
            window.fetch = undefined;
        }
    </script>

    <script src="./swagger-ui-bundle.js"></script>
    <script src="./swagger-ui-standalone-preset.js"></script>
    <script>
        /* Source: https://gist.github.com/lamberta/3768814
         * Parse a string function definition and return a function object. Does not use eval.
         * @param {string} str
         * @return {function}
         *
         * Example:
         *  var f = function (x, y) { return x * y; };
         *  var g = parseFunction(f.toString());
         *  g(33, 3); //=> 99
         */
        function parseFunction(str) {
            if (!str) return void (0);

            var fn_body_idx = str.indexOf('{'),
                fn_body = str.substring(fn_body_idx + 1, str.lastIndexOf('}')),
                fn_declare = str.substring(0, fn_body_idx),
                fn_params = fn_declare.substring(fn_declare.indexOf('(') + 1, fn_declare.lastIndexOf(')')),
                args = fn_params.split(',');

            args.push(fn_body);

            function Fn() {
                return Function.apply(this, args);
            }
            Fn.prototype = Function.prototype;

            return new Fn();
        }

        window.onload = function () {
            var configObject = JSON.parse('{"urls":[{"url":"v1/swagger.json","name":"BookStore v1"}],"deepLinking":false,"persistAuthorization":false,"displayOperationId":false,"defaultModelsExpandDepth":1,"defaultModelExpandDepth":1,"defaultModelRendering":"example","displayRequestDuration":false,"docExpansion":"list","showExtensions":false,"showCommonExtensions":false,"supportedSubmitMethods":["get","put","post","delete","options","head","patch","trace"],"tryItOutEnabled":false}');
            var oauthConfigObject = JSON.parse('{"scopeSeparator":" ","scopes":[],"useBasicAuthenticationWithAccessCodeGrant":false,"usePkceWithAuthorizationCodeGrant":false}');

            // Workaround for https://github.com/swagger-api/swagger-ui/issues/5945
            configObject.urls.forEach(function (item) {
                if (item.url.startsWith("http") || item.url.startsWith("/")) return;
                item.url = window.location.href.replace("index.html", item.url).split('#')[0];
            });

            // If validatorUrl is not explicitly provided, disable the feature by setting to null
            if (!configObject.hasOwnProperty("validatorUrl"))
                configObject.validatorUrl = null

            // If oauth2RedirectUrl isn't specified, use the built-in default
            if (!configObject.hasOwnProperty("oauth2RedirectUrl"))
                configObject.oauth2RedirectUrl = (new URL("oauth2-redirect.html", window.location.href)).href;

            // Apply mandatory parameters
            configObject.dom_id = "#swagger-ui";
            configObject.presets = [SwaggerUIBundle.presets.apis, SwaggerUIStandalonePreset];
            configObject.layout = "StandaloneLayout";

            // Parse and add interceptor functions
            var interceptors = JSON.parse('{"RequestInterceptorFunction":null,"ResponseInterceptorFunction":null}');
            if (interceptors.RequestInterceptorFunction)
                configObject.requestInterceptor = parseFunction(interceptors.RequestInterceptorFunction);
            if (interceptors.ResponseInterceptorFunction)
                configObject.responseInterceptor = parseFunction(interceptors.ResponseInterceptorFunction);

            // Begin Swagger UI call region

            const ui = SwaggerUIBundle(configObject);

            ui.initOAuth(oauthConfigObject);

            // End Swagger UI call region

            window.ui = ui
        }
    </script>
</body>
</html>

2023-08-04 14:41:45,920 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - REQUEST INFO:  [TraceId: 0HMSKPS21TQN4:00000002] - Schema: http - Method: GET, Host: localhost:5049, Path: /swagger/v1/swagger.json, QueryString: , Client IP: ::1 RequestBody: 
2023-08-04 14:41:46,085 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - RESPONSE INFO: [TraceId: 0HMSKPS21TQN4:00000002] - Status: 200 - Response Body: {
  "openapi": "3.0.1",
  "info": {
    "title": "BookStore",
    "version": "1.0"
  },
  "paths": {
    "/author/list": {
      "get": {
        "tags": [
          "Author"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/author/create": {
      "post": {
        "tags": [
          "Author"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorTemplate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorTemplate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorTemplate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/author/get/{id}": {
      "get": {
        "tags": [
          "Author"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/author/update/{id}": {
      "put": {
        "tags": [
          "Author"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorTemplate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorTemplate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorTemplate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/author/delete/{id}": {
      "delete": {
        "tags": [
          "Author"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/book/list": {
      "get": {
        "tags": [
          "Book"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/book/create": {
      "post": {
        "tags": [
          "Book"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "Title": {
                    "type": "string"
                  },
                  "Description": {
                    "type": "string"
                  },
                  "AuthorId": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "ImagePath": {
                    "type": "string"
                  },
                  "Image": {
                    "type": "string",
                    "format": "binary"
                  },
                  "Genres": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "format": "int64"
                    }
                  }
                }
              },
              "encoding": {
                "Title": {
                  "style": "form"
                },
                "Description": {
                  "style": "form"
                },
                "AuthorId": {
                  "style": "form"
                },
                "ImagePath": {
                  "style": "form"
                },
                "Image": {
                  "style": "form"
                },
                "Genres": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/book/get/{id}": {
      "get": {
        "tags": [
          "Book"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/book/update/{id}": {
      "put": {
        "tags": [
          "Book"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "Title": {
                    "type": "string"
                  },
                  "Description": {
                    "type": "string"
                  },
                  "AuthorId": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "ImagePath": {
                    "type": "string"
                  },
                  "Image": {
                    "type": "string",
                    "format": "binary"
                  },
                  "Genres": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "format": "int64"
                    }
                  }
                }
              },
              "encoding": {
                "Title": {
                  "style": "form"
                },
                "Description": {
                  "style": "form"
                },
                "AuthorId": {
                  "style": "form"
                },
                "ImagePath": {
                  "style": "form"
                },
                "Image": {
                  "style": "form"
                },
                "Genres": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/book/delete/{id}": {
      "delete": {
        "tags": [
          "Book"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/genre/list": {
      "get": {
        "tags": [
          "Genre"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/genre/create": {
      "post": {
        "tags": [
          "Genre"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenreTemplate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GenreTemplate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GenreTemplate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/genre/get/{id}": {
      "get": {
        "tags": [
          "Genre"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/genre/update/{id}": {
      "put": {
        "tags": [
          "Genre"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenreTemplate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GenreTemplate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GenreTemplate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/genre/delete/{id}": {
      "delete": {
        "tags": [
          "Genre"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AuthorTemplate": {
        "type": "object",
        "properties": {
          "firstname": {
            "type": "string",
            "nullable": true
          },
          "lastname": {
            "type": "string",
            "nullable": true
          },
          "age": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GenreTemplate": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "minLength": 2,
            "type": "string"
          }
        },
        "additionalProperties": false
      }
    }
  }
}
2023-08-04 14:42:18,192 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - REQUEST INFO:  [TraceId: 0HMSKPS21TQN5:00000001] - Schema: http - Method: POST, Host: localhost:5049, Path: /genre/create, QueryString: , Client IP: ::1 RequestBody: { "name": "asdasds"}
2023-08-04 14:42:18,523 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - RESPONSE INFO: [TraceId: 0HMSKPS21TQN5:00000001] - Status: 400 - Response Body: {"type":"https://tools.ietf.org/html/rfc7231#section-6.5.1","title":"One or more validation errors occurred.","status":400,"traceId":"0HMSKPS21TQN5:00000001","errors":{"template":["The template field is required."],"$.name":["'0x0A' is invalid within a JSON string. The string should be correctly escaped. Path: $.name | LineNumber: 1 | BytePositionInLine: 18."]}}
2023-08-04 14:42:42,357 [22] INFO  Microsoft.Hosting.Lifetime - Application is shutting down...
2023-08-04 14:42:52,695 [1] INFO  Microsoft.Hosting.Lifetime - Now listening on: http://localhost:5049
2023-08-04 14:42:52,712 [1] INFO  Microsoft.Hosting.Lifetime - Application started. Press Ctrl+C to shut down.
2023-08-04 14:42:52,713 [1] INFO  Microsoft.Hosting.Lifetime - Hosting environment: Development
2023-08-04 14:42:52,713 [1] INFO  Microsoft.Hosting.Lifetime - Content root path: P:\C#\BookStore\BookStore
2023-08-04 14:42:53,472 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - RESPONSE INFO: [TraceId: 0HMSKPSM9OKLV:00000001] - Status: 200 - Response Body: <!-- HTML for static distribution bundle build -->
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Swagger UI</title>
    <link rel="stylesheet" type="text/css" href="./swagger-ui.css">
    <link rel="icon" type="image/png" href="./favicon-32x32.png" sizes="32x32" />
    <link rel="icon" type="image/png" href="./favicon-16x16.png" sizes="16x16" />
    <style>

        html {
            box-sizing: border-box;
            overflow: -moz-scrollbars-vertical;
            overflow-y: scroll;
        }

        *,
        *:before,
        *:after {
            box-sizing: inherit;
        }

        body {
            margin: 0;
            background: #fafafa;
        }
    </style>
    
</head>

<body>
    <div id="swagger-ui"></div>

    <!-- Workaround for https://github.com/swagger-api/swagger-editor/issues/1371 -->
    <script>
        if (window.navigator.userAgent.indexOf("Edge") > -1) {
            console.log("Removing native Edge fetch in favor of swagger-ui's polyfill")
            window.fetch = undefined;
        }
    </script>

    <script src="./swagger-ui-bundle.js"></script>
    <script src="./swagger-ui-standalone-preset.js"></script>
    <script>
        /* Source: https://gist.github.com/lamberta/3768814
         * Parse a string function definition and return a function object. Does not use eval.
         * @param {string} str
         * @return {function}
         *
         * Example:
         *  var f = function (x, y) { return x * y; };
         *  var g = parseFunction(f.toString());
         *  g(33, 3); //=> 99
         */
        function parseFunction(str) {
            if (!str) return void (0);

            var fn_body_idx = str.indexOf('{'),
                fn_body = str.substring(fn_body_idx + 1, str.lastIndexOf('}')),
                fn_declare = str.substring(0, fn_body_idx),
                fn_params = fn_declare.substring(fn_declare.indexOf('(') + 1, fn_declare.lastIndexOf(')')),
                args = fn_params.split(',');

            args.push(fn_body);

            function Fn() {
                return Function.apply(this, args);
            }
            Fn.prototype = Function.prototype;

            return new Fn();
        }

        window.onload = function () {
            var configObject = JSON.parse('{"urls":[{"url":"v1/swagger.json","name":"BookStore v1"}],"deepLinking":false,"persistAuthorization":false,"displayOperationId":false,"defaultModelsExpandDepth":1,"defaultModelExpandDepth":1,"defaultModelRendering":"example","displayRequestDuration":false,"docExpansion":"list","showExtensions":false,"showCommonExtensions":false,"supportedSubmitMethods":["get","put","post","delete","options","head","patch","trace"],"tryItOutEnabled":false}');
            var oauthConfigObject = JSON.parse('{"scopeSeparator":" ","scopes":[],"useBasicAuthenticationWithAccessCodeGrant":false,"usePkceWithAuthorizationCodeGrant":false}');

            // Workaround for https://github.com/swagger-api/swagger-ui/issues/5945
            configObject.urls.forEach(function (item) {
                if (item.url.startsWith("http") || item.url.startsWith("/")) return;
                item.url = window.location.href.replace("index.html", item.url).split('#')[0];
            });

            // If validatorUrl is not explicitly provided, disable the feature by setting to null
            if (!configObject.hasOwnProperty("validatorUrl"))
                configObject.validatorUrl = null

            // If oauth2RedirectUrl isn't specified, use the built-in default
            if (!configObject.hasOwnProperty("oauth2RedirectUrl"))
                configObject.oauth2RedirectUrl = (new URL("oauth2-redirect.html", window.location.href)).href;

            // Apply mandatory parameters
            configObject.dom_id = "#swagger-ui";
            configObject.presets = [SwaggerUIBundle.presets.apis, SwaggerUIStandalonePreset];
            configObject.layout = "StandaloneLayout";

            // Parse and add interceptor functions
            var interceptors = JSON.parse('{"RequestInterceptorFunction":null,"ResponseInterceptorFunction":null}');
            if (interceptors.RequestInterceptorFunction)
                configObject.requestInterceptor = parseFunction(interceptors.RequestInterceptorFunction);
            if (interceptors.ResponseInterceptorFunction)
                configObject.responseInterceptor = parseFunction(interceptors.ResponseInterceptorFunction);

            // Begin Swagger UI call region

            const ui = SwaggerUIBundle(configObject);

            ui.initOAuth(oauthConfigObject);

            // End Swagger UI call region

            window.ui = ui
        }
    </script>
</body>
</html>

2023-08-04 14:42:53,775 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - RESPONSE INFO: [TraceId: 0HMSKPSM9OKLV:00000002] - Status: 200 - Response Body: {
  "openapi": "3.0.1",
  "info": {
    "title": "BookStore",
    "version": "1.0"
  },
  "paths": {
    "/author/list": {
      "get": {
        "tags": [
          "Author"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/author/create": {
      "post": {
        "tags": [
          "Author"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorTemplate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorTemplate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorTemplate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/author/get/{id}": {
      "get": {
        "tags": [
          "Author"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/author/update/{id}": {
      "put": {
        "tags": [
          "Author"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorTemplate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorTemplate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorTemplate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/author/delete/{id}": {
      "delete": {
        "tags": [
          "Author"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/book/list": {
      "get": {
        "tags": [
          "Book"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/book/create": {
      "post": {
        "tags": [
          "Book"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "Title": {
                    "type": "string"
                  },
                  "Description": {
                    "type": "string"
                  },
                  "AuthorId": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "ImagePath": {
                    "type": "string"
                  },
                  "Image": {
                    "type": "string",
                    "format": "binary"
                  },
                  "Genres": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "format": "int64"
                    }
                  }
                }
              },
              "encoding": {
                "Title": {
                  "style": "form"
                },
                "Description": {
                  "style": "form"
                },
                "AuthorId": {
                  "style": "form"
                },
                "ImagePath": {
                  "style": "form"
                },
                "Image": {
                  "style": "form"
                },
                "Genres": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/book/get/{id}": {
      "get": {
        "tags": [
          "Book"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/book/update/{id}": {
      "put": {
        "tags": [
          "Book"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "Title": {
                    "type": "string"
                  },
                  "Description": {
                    "type": "string"
                  },
                  "AuthorId": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "ImagePath": {
                    "type": "string"
                  },
                  "Image": {
                    "type": "string",
                    "format": "binary"
                  },
                  "Genres": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "format": "int64"
                    }
                  }
                }
              },
              "encoding": {
                "Title": {
                  "style": "form"
                },
                "Description": {
                  "style": "form"
                },
                "AuthorId": {
                  "style": "form"
                },
                "ImagePath": {
                  "style": "form"
                },
                "Image": {
                  "style": "form"
                },
                "Genres": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/book/delete/{id}": {
      "delete": {
        "tags": [
          "Book"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/genre/list": {
      "get": {
        "tags": [
          "Genre"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/genre/create": {
      "post": {
        "tags": [
          "Genre"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenreTemplate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GenreTemplate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GenreTemplate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/genre/get/{id}": {
      "get": {
        "tags": [
          "Genre"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/genre/update/{id}": {
      "put": {
        "tags": [
          "Genre"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenreTemplate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GenreTemplate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GenreTemplate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/genre/delete/{id}": {
      "delete": {
        "tags": [
          "Genre"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AuthorTemplate": {
        "type": "object",
        "properties": {
          "firstname": {
            "type": "string",
            "nullable": true
          },
          "lastname": {
            "type": "string",
            "nullable": true
          },
          "age": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GenreTemplate": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "minLength": 2,
            "type": "string"
          }
        },
        "additionalProperties": false
      }
    }
  }
}
2023-08-04 14:42:58,548 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - RESPONSE INFO: [TraceId: 0HMSKPSM9OKLV:00000003] - Status: 400 - Response Body: {"type":"https://tools.ietf.org/html/rfc7231#section-6.5.1","title":"One or more validation errors occurred.","status":400,"traceId":"0HMSKPSM9OKLV:00000003","errors":{"template":["The template field is required."],"$.name":["'0x0A' is invalid within a JSON string. The string should be correctly escaped. Path: $.name | LineNumber: 1 | BytePositionInLine: 18."]}}
2023-08-04 14:44:10,608 [16] INFO  Microsoft.Hosting.Lifetime - Application is shutting down...
2023-08-04 14:44:17,835 [1] INFO  Microsoft.Hosting.Lifetime - Now listening on: http://localhost:5049
2023-08-04 14:44:17,849 [1] INFO  Microsoft.Hosting.Lifetime - Application started. Press Ctrl+C to shut down.
2023-08-04 14:44:17,850 [1] INFO  Microsoft.Hosting.Lifetime - Hosting environment: Development
2023-08-04 14:44:17,850 [1] INFO  Microsoft.Hosting.Lifetime - Content root path: P:\C#\BookStore\BookStore
2023-08-04 14:44:18,181 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - REQUEST INFO:  [TraceId: 0HMSKPTFIOTV2:00000001] - Schema: http - Method: GET, Host: localhost:5049, Path: /swagger/index.html, Client IP: ::1 RequestBody: 
2023-08-04 14:44:18,328 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - RESPONSE INFO: [TraceId: 0HMSKPTFIOTV2:00000001] - Status: 200 - Response Body: <!-- HTML for static distribution bundle build -->
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Swagger UI</title>
    <link rel="stylesheet" type="text/css" href="./swagger-ui.css">
    <link rel="icon" type="image/png" href="./favicon-32x32.png" sizes="32x32" />
    <link rel="icon" type="image/png" href="./favicon-16x16.png" sizes="16x16" />
    <style>

        html {
            box-sizing: border-box;
            overflow: -moz-scrollbars-vertical;
            overflow-y: scroll;
        }

        *,
        *:before,
        *:after {
            box-sizing: inherit;
        }

        body {
            margin: 0;
            background: #fafafa;
        }
    </style>
    
</head>

<body>
    <div id="swagger-ui"></div>

    <!-- Workaround for https://github.com/swagger-api/swagger-editor/issues/1371 -->
    <script>
        if (window.navigator.userAgent.indexOf("Edge") > -1) {
            console.log("Removing native Edge fetch in favor of swagger-ui's polyfill")
            window.fetch = undefined;
        }
    </script>

    <script src="./swagger-ui-bundle.js"></script>
    <script src="./swagger-ui-standalone-preset.js"></script>
    <script>
        /* Source: https://gist.github.com/lamberta/3768814
         * Parse a string function definition and return a function object. Does not use eval.
         * @param {string} str
         * @return {function}
         *
         * Example:
         *  var f = function (x, y) { return x * y; };
         *  var g = parseFunction(f.toString());
         *  g(33, 3); //=> 99
         */
        function parseFunction(str) {
            if (!str) return void (0);

            var fn_body_idx = str.indexOf('{'),
                fn_body = str.substring(fn_body_idx + 1, str.lastIndexOf('}')),
                fn_declare = str.substring(0, fn_body_idx),
                fn_params = fn_declare.substring(fn_declare.indexOf('(') + 1, fn_declare.lastIndexOf(')')),
                args = fn_params.split(',');

            args.push(fn_body);

            function Fn() {
                return Function.apply(this, args);
            }
            Fn.prototype = Function.prototype;

            return new Fn();
        }

        window.onload = function () {
            var configObject = JSON.parse('{"urls":[{"url":"v1/swagger.json","name":"BookStore v1"}],"deepLinking":false,"persistAuthorization":false,"displayOperationId":false,"defaultModelsExpandDepth":1,"defaultModelExpandDepth":1,"defaultModelRendering":"example","displayRequestDuration":false,"docExpansion":"list","showExtensions":false,"showCommonExtensions":false,"supportedSubmitMethods":["get","put","post","delete","options","head","patch","trace"],"tryItOutEnabled":false}');
            var oauthConfigObject = JSON.parse('{"scopeSeparator":" ","scopes":[],"useBasicAuthenticationWithAccessCodeGrant":false,"usePkceWithAuthorizationCodeGrant":false}');

            // Workaround for https://github.com/swagger-api/swagger-ui/issues/5945
            configObject.urls.forEach(function (item) {
                if (item.url.startsWith("http") || item.url.startsWith("/")) return;
                item.url = window.location.href.replace("index.html", item.url).split('#')[0];
            });

            // If validatorUrl is not explicitly provided, disable the feature by setting to null
            if (!configObject.hasOwnProperty("validatorUrl"))
                configObject.validatorUrl = null

            // If oauth2RedirectUrl isn't specified, use the built-in default
            if (!configObject.hasOwnProperty("oauth2RedirectUrl"))
                configObject.oauth2RedirectUrl = (new URL("oauth2-redirect.html", window.location.href)).href;

            // Apply mandatory parameters
            configObject.dom_id = "#swagger-ui";
            configObject.presets = [SwaggerUIBundle.presets.apis, SwaggerUIStandalonePreset];
            configObject.layout = "StandaloneLayout";

            // Parse and add interceptor functions
            var interceptors = JSON.parse('{"RequestInterceptorFunction":null,"ResponseInterceptorFunction":null}');
            if (interceptors.RequestInterceptorFunction)
                configObject.requestInterceptor = parseFunction(interceptors.RequestInterceptorFunction);
            if (interceptors.ResponseInterceptorFunction)
                configObject.responseInterceptor = parseFunction(interceptors.ResponseInterceptorFunction);

            // Begin Swagger UI call region

            const ui = SwaggerUIBundle(configObject);

            ui.initOAuth(oauthConfigObject);

            // End Swagger UI call region

            window.ui = ui
        }
    </script>
</body>
</html>

2023-08-04 14:44:18,467 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - REQUEST INFO:  [TraceId: 0HMSKPTFIOTV2:00000002] - Schema: http - Method: GET, Host: localhost:5049, Path: /swagger/v1/swagger.json, Client IP: ::1 RequestBody: 
2023-08-04 14:44:18,618 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - RESPONSE INFO: [TraceId: 0HMSKPTFIOTV2:00000002] - Status: 200 - Response Body: {
  "openapi": "3.0.1",
  "info": {
    "title": "BookStore",
    "version": "1.0"
  },
  "paths": {
    "/author/list": {
      "get": {
        "tags": [
          "Author"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/author/create": {
      "post": {
        "tags": [
          "Author"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorTemplate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorTemplate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorTemplate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/author/get/{id}": {
      "get": {
        "tags": [
          "Author"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/author/update/{id}": {
      "put": {
        "tags": [
          "Author"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorTemplate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorTemplate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorTemplate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/author/delete/{id}": {
      "delete": {
        "tags": [
          "Author"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/book/list": {
      "get": {
        "tags": [
          "Book"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/book/create": {
      "post": {
        "tags": [
          "Book"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "Title": {
                    "type": "string"
                  },
                  "Description": {
                    "type": "string"
                  },
                  "AuthorId": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "ImagePath": {
                    "type": "string"
                  },
                  "Image": {
                    "type": "string",
                    "format": "binary"
                  },
                  "Genres": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "format": "int64"
                    }
                  }
                }
              },
              "encoding": {
                "Title": {
                  "style": "form"
                },
                "Description": {
                  "style": "form"
                },
                "AuthorId": {
                  "style": "form"
                },
                "ImagePath": {
                  "style": "form"
                },
                "Image": {
                  "style": "form"
                },
                "Genres": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/book/get/{id}": {
      "get": {
        "tags": [
          "Book"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/book/update/{id}": {
      "put": {
        "tags": [
          "Book"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "Title": {
                    "type": "string"
                  },
                  "Description": {
                    "type": "string"
                  },
                  "AuthorId": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "ImagePath": {
                    "type": "string"
                  },
                  "Image": {
                    "type": "string",
                    "format": "binary"
                  },
                  "Genres": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "format": "int64"
                    }
                  }
                }
              },
              "encoding": {
                "Title": {
                  "style": "form"
                },
                "Description": {
                  "style": "form"
                },
                "AuthorId": {
                  "style": "form"
                },
                "ImagePath": {
                  "style": "form"
                },
                "Image": {
                  "style": "form"
                },
                "Genres": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/book/delete/{id}": {
      "delete": {
        "tags": [
          "Book"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/genre/list": {
      "get": {
        "tags": [
          "Genre"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/genre/create": {
      "post": {
        "tags": [
          "Genre"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenreTemplate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GenreTemplate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GenreTemplate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/genre/get/{id}": {
      "get": {
        "tags": [
          "Genre"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/genre/update/{id}": {
      "put": {
        "tags": [
          "Genre"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenreTemplate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GenreTemplate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GenreTemplate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/genre/delete/{id}": {
      "delete": {
        "tags": [
          "Genre"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AuthorTemplate": {
        "type": "object",
        "properties": {
          "firstname": {
            "type": "string",
            "nullable": true
          },
          "lastname": {
            "type": "string",
            "nullable": true
          },
          "age": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GenreTemplate": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "minLength": 2,
            "type": "string"
          }
        },
        "additionalProperties": false
      }
    }
  }
}
2023-08-04 14:44:22,274 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - REQUEST INFO:  [TraceId: 0HMSKPTFIOTV4:00000001] - Schema: http - Method: POST, Host: localhost:5049, Path: /genre/create, Client IP: ::1 RequestBody: { "name": "asdasds"}
2023-08-04 14:44:22,575 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - RESPONSE INFO: [TraceId: 0HMSKPTFIOTV4:00000001] - Status: 400 - Response Body: {"type":"https://tools.ietf.org/html/rfc7231#section-6.5.1","title":"One or more validation errors occurred.","status":400,"traceId":"0HMSKPTFIOTV4:00000001","errors":{"template":["The template field is required."],"$.name":["'0x0A' is invalid within a JSON string. The string should be correctly escaped. Path: $.name | LineNumber: 1 | BytePositionInLine: 18."]}}
2023-08-04 14:44:33,073 [14] INFO  Microsoft.Hosting.Lifetime - Application is shutting down...
2023-08-04 14:44:41,857 [1] INFO  Microsoft.Hosting.Lifetime - Now listening on: http://localhost:5049
2023-08-04 14:44:41,871 [1] INFO  Microsoft.Hosting.Lifetime - Application started. Press Ctrl+C to shut down.
2023-08-04 14:44:41,871 [1] INFO  Microsoft.Hosting.Lifetime - Hosting environment: Development
2023-08-04 14:44:41,872 [1] INFO  Microsoft.Hosting.Lifetime - Content root path: P:\C#\BookStore\BookStore
2023-08-04 14:44:42,712 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - REQUEST INFO:  [TraceId: 0HMSKPTMR2NGC:00000001] - Schema: http - Method: GET, Host: localhost:5049, Path: /swagger/index.html, Client IP: ::1 RequestBody: 
2023-08-04 14:44:42,950 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - RESPONSE INFO: [TraceId: 0HMSKPTMR2NGC:00000001] - Status: 200 - Response Body: <!-- HTML for static distribution bundle build -->
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Swagger UI</title>
    <link rel="stylesheet" type="text/css" href="./swagger-ui.css">
    <link rel="icon" type="image/png" href="./favicon-32x32.png" sizes="32x32" />
    <link rel="icon" type="image/png" href="./favicon-16x16.png" sizes="16x16" />
    <style>

        html {
            box-sizing: border-box;
            overflow: -moz-scrollbars-vertical;
            overflow-y: scroll;
        }

        *,
        *:before,
        *:after {
            box-sizing: inherit;
        }

        body {
            margin: 0;
            background: #fafafa;
        }
    </style>
    
</head>

<body>
    <div id="swagger-ui"></div>

    <!-- Workaround for https://github.com/swagger-api/swagger-editor/issues/1371 -->
    <script>
        if (window.navigator.userAgent.indexOf("Edge") > -1) {
            console.log("Removing native Edge fetch in favor of swagger-ui's polyfill")
            window.fetch = undefined;
        }
    </script>

    <script src="./swagger-ui-bundle.js"></script>
    <script src="./swagger-ui-standalone-preset.js"></script>
    <script>
        /* Source: https://gist.github.com/lamberta/3768814
         * Parse a string function definition and return a function object. Does not use eval.
         * @param {string} str
         * @return {function}
         *
         * Example:
         *  var f = function (x, y) { return x * y; };
         *  var g = parseFunction(f.toString());
         *  g(33, 3); //=> 99
         */
        function parseFunction(str) {
            if (!str) return void (0);

            var fn_body_idx = str.indexOf('{'),
                fn_body = str.substring(fn_body_idx + 1, str.lastIndexOf('}')),
                fn_declare = str.substring(0, fn_body_idx),
                fn_params = fn_declare.substring(fn_declare.indexOf('(') + 1, fn_declare.lastIndexOf(')')),
                args = fn_params.split(',');

            args.push(fn_body);

            function Fn() {
                return Function.apply(this, args);
            }
            Fn.prototype = Function.prototype;

            return new Fn();
        }

        window.onload = function () {
            var configObject = JSON.parse('{"urls":[{"url":"v1/swagger.json","name":"BookStore v1"}],"deepLinking":false,"persistAuthorization":false,"displayOperationId":false,"defaultModelsExpandDepth":1,"defaultModelExpandDepth":1,"defaultModelRendering":"example","displayRequestDuration":false,"docExpansion":"list","showExtensions":false,"showCommonExtensions":false,"supportedSubmitMethods":["get","put","post","delete","options","head","patch","trace"],"tryItOutEnabled":false}');
            var oauthConfigObject = JSON.parse('{"scopeSeparator":" ","scopes":[],"useBasicAuthenticationWithAccessCodeGrant":false,"usePkceWithAuthorizationCodeGrant":false}');

            // Workaround for https://github.com/swagger-api/swagger-ui/issues/5945
            configObject.urls.forEach(function (item) {
                if (item.url.startsWith("http") || item.url.startsWith("/")) return;
                item.url = window.location.href.replace("index.html", item.url).split('#')[0];
            });

            // If validatorUrl is not explicitly provided, disable the feature by setting to null
            if (!configObject.hasOwnProperty("validatorUrl"))
                configObject.validatorUrl = null

            // If oauth2RedirectUrl isn't specified, use the built-in default
            if (!configObject.hasOwnProperty("oauth2RedirectUrl"))
                configObject.oauth2RedirectUrl = (new URL("oauth2-redirect.html", window.location.href)).href;

            // Apply mandatory parameters
            configObject.dom_id = "#swagger-ui";
            configObject.presets = [SwaggerUIBundle.presets.apis, SwaggerUIStandalonePreset];
            configObject.layout = "StandaloneLayout";

            // Parse and add interceptor functions
            var interceptors = JSON.parse('{"RequestInterceptorFunction":null,"ResponseInterceptorFunction":null}');
            if (interceptors.RequestInterceptorFunction)
                configObject.requestInterceptor = parseFunction(interceptors.RequestInterceptorFunction);
            if (interceptors.ResponseInterceptorFunction)
                configObject.responseInterceptor = parseFunction(interceptors.ResponseInterceptorFunction);

            // Begin Swagger UI call region

            const ui = SwaggerUIBundle(configObject);

            ui.initOAuth(oauthConfigObject);

            // End Swagger UI call region

            window.ui = ui
        }
    </script>
</body>
</html>

2023-08-04 14:44:43,234 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - REQUEST INFO:  [TraceId: 0HMSKPTMR2NGC:00000002] - Schema: http - Method: GET, Host: localhost:5049, Path: /swagger/v1/swagger.json, Client IP: ::1 RequestBody: 
2023-08-04 14:44:43,531 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - RESPONSE INFO: [TraceId: 0HMSKPTMR2NGC:00000002] - Status: 200 - Response Body: {
  "openapi": "3.0.1",
  "info": {
    "title": "BookStore",
    "version": "1.0"
  },
  "paths": {
    "/author/list": {
      "get": {
        "tags": [
          "Author"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/author/create": {
      "post": {
        "tags": [
          "Author"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorTemplate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorTemplate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorTemplate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/author/get/{id}": {
      "get": {
        "tags": [
          "Author"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/author/update/{id}": {
      "put": {
        "tags": [
          "Author"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorTemplate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorTemplate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorTemplate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/author/delete/{id}": {
      "delete": {
        "tags": [
          "Author"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/book/list": {
      "get": {
        "tags": [
          "Book"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/book/create": {
      "post": {
        "tags": [
          "Book"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "Title": {
                    "type": "string"
                  },
                  "Description": {
                    "type": "string"
                  },
                  "AuthorId": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "ImagePath": {
                    "type": "string"
                  },
                  "Image": {
                    "type": "string",
                    "format": "binary"
                  },
                  "Genres": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "format": "int64"
                    }
                  }
                }
              },
              "encoding": {
                "Title": {
                  "style": "form"
                },
                "Description": {
                  "style": "form"
                },
                "AuthorId": {
                  "style": "form"
                },
                "ImagePath": {
                  "style": "form"
                },
                "Image": {
                  "style": "form"
                },
                "Genres": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/book/get/{id}": {
      "get": {
        "tags": [
          "Book"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/book/update/{id}": {
      "put": {
        "tags": [
          "Book"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "Title": {
                    "type": "string"
                  },
                  "Description": {
                    "type": "string"
                  },
                  "AuthorId": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "ImagePath": {
                    "type": "string"
                  },
                  "Image": {
                    "type": "string",
                    "format": "binary"
                  },
                  "Genres": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "format": "int64"
                    }
                  }
                }
              },
              "encoding": {
                "Title": {
                  "style": "form"
                },
                "Description": {
                  "style": "form"
                },
                "AuthorId": {
                  "style": "form"
                },
                "ImagePath": {
                  "style": "form"
                },
                "Image": {
                  "style": "form"
                },
                "Genres": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/book/delete/{id}": {
      "delete": {
        "tags": [
          "Book"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/genre/list": {
      "get": {
        "tags": [
          "Genre"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/genre/create": {
      "post": {
        "tags": [
          "Genre"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenreTemplate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GenreTemplate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GenreTemplate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/genre/get/{id}": {
      "get": {
        "tags": [
          "Genre"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/genre/update/{id}": {
      "put": {
        "tags": [
          "Genre"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenreTemplate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GenreTemplate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GenreTemplate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/genre/delete/{id}": {
      "delete": {
        "tags": [
          "Genre"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AuthorTemplate": {
        "type": "object",
        "properties": {
          "firstname": {
            "type": "string",
            "nullable": true
          },
          "lastname": {
            "type": "string",
            "nullable": true
          },
          "age": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GenreTemplate": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "minLength": 2,
            "type": "string"
          }
        },
        "additionalProperties": false
      }
    }
  }
}
2023-08-04 14:44:46,702 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - REQUEST INFO:  [TraceId: 0HMSKPTMR2NGC:00000003] - Schema: http - Method: POST, Host: localhost:5049, Path: /genre/create, Client IP: ::1 RequestBody: { "name": "asdasds"}
2023-08-04 14:44:46,976 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - RESPONSE INFO: [TraceId: 0HMSKPTMR2NGC:00000003] - Status: 400 - Response Body: {"type":"https://tools.ietf.org/html/rfc7231#section-6.5.1","title":"One or more validation errors occurred.","status":400,"traceId":"0HMSKPTMR2NGC:00000003","errors":{"template":["The template field is required."],"$.name":["'0x0A' is invalid within a JSON string. The string should be correctly escaped. Path: $.name | LineNumber: 1 | BytePositionInLine: 18."]}}
2023-08-04 14:45:28,023 [18] INFO  Microsoft.Hosting.Lifetime - Application is shutting down...
2023-08-04 14:45:37,628 [1] INFO  Microsoft.Hosting.Lifetime - Now listening on: http://localhost:5049
2023-08-04 14:45:37,647 [1] INFO  Microsoft.Hosting.Lifetime - Application started. Press Ctrl+C to shut down.
2023-08-04 14:45:37,647 [1] INFO  Microsoft.Hosting.Lifetime - Hosting environment: Development
2023-08-04 14:45:37,648 [1] INFO  Microsoft.Hosting.Lifetime - Content root path: P:\C#\BookStore\BookStore
2023-08-04 14:45:38,182 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - REQUEST INFO:  [TraceId: 0HMSKPU7DDAUH:00000001] - Schema: http - Method: GET, Host: localhost:5049, Path: /swagger/index.html, Client IP: ::1 RequestBody: 
2023-08-04 14:45:38,312 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - RESPONSE INFO: [TraceId: 0HMSKPU7DDAUH:00000001] - Status: 200 - Response Body: <!-- HTML for static distribution bundle build -->
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Swagger UI</title>
    <link rel="stylesheet" type="text/css" href="./swagger-ui.css">
    <link rel="icon" type="image/png" href="./favicon-32x32.png" sizes="32x32" />
    <link rel="icon" type="image/png" href="./favicon-16x16.png" sizes="16x16" />
    <style>

        html {
            box-sizing: border-box;
            overflow: -moz-scrollbars-vertical;
            overflow-y: scroll;
        }

        *,
        *:before,
        *:after {
            box-sizing: inherit;
        }

        body {
            margin: 0;
            background: #fafafa;
        }
    </style>
    
</head>

<body>
    <div id="swagger-ui"></div>

    <!-- Workaround for https://github.com/swagger-api/swagger-editor/issues/1371 -->
    <script>
        if (window.navigator.userAgent.indexOf("Edge") > -1) {
            console.log("Removing native Edge fetch in favor of swagger-ui's polyfill")
            window.fetch = undefined;
        }
    </script>

    <script src="./swagger-ui-bundle.js"></script>
    <script src="./swagger-ui-standalone-preset.js"></script>
    <script>
        /* Source: https://gist.github.com/lamberta/3768814
         * Parse a string function definition and return a function object. Does not use eval.
         * @param {string} str
         * @return {function}
         *
         * Example:
         *  var f = function (x, y) { return x * y; };
         *  var g = parseFunction(f.toString());
         *  g(33, 3); //=> 99
         */
        function parseFunction(str) {
            if (!str) return void (0);

            var fn_body_idx = str.indexOf('{'),
                fn_body = str.substring(fn_body_idx + 1, str.lastIndexOf('}')),
                fn_declare = str.substring(0, fn_body_idx),
                fn_params = fn_declare.substring(fn_declare.indexOf('(') + 1, fn_declare.lastIndexOf(')')),
                args = fn_params.split(',');

            args.push(fn_body);

            function Fn() {
                return Function.apply(this, args);
            }
            Fn.prototype = Function.prototype;

            return new Fn();
        }

        window.onload = function () {
            var configObject = JSON.parse('{"urls":[{"url":"v1/swagger.json","name":"BookStore v1"}],"deepLinking":false,"persistAuthorization":false,"displayOperationId":false,"defaultModelsExpandDepth":1,"defaultModelExpandDepth":1,"defaultModelRendering":"example","displayRequestDuration":false,"docExpansion":"list","showExtensions":false,"showCommonExtensions":false,"supportedSubmitMethods":["get","put","post","delete","options","head","patch","trace"],"tryItOutEnabled":false}');
            var oauthConfigObject = JSON.parse('{"scopeSeparator":" ","scopes":[],"useBasicAuthenticationWithAccessCodeGrant":false,"usePkceWithAuthorizationCodeGrant":false}');

            // Workaround for https://github.com/swagger-api/swagger-ui/issues/5945
            configObject.urls.forEach(function (item) {
                if (item.url.startsWith("http") || item.url.startsWith("/")) return;
                item.url = window.location.href.replace("index.html", item.url).split('#')[0];
            });

            // If validatorUrl is not explicitly provided, disable the feature by setting to null
            if (!configObject.hasOwnProperty("validatorUrl"))
                configObject.validatorUrl = null

            // If oauth2RedirectUrl isn't specified, use the built-in default
            if (!configObject.hasOwnProperty("oauth2RedirectUrl"))
                configObject.oauth2RedirectUrl = (new URL("oauth2-redirect.html", window.location.href)).href;

            // Apply mandatory parameters
            configObject.dom_id = "#swagger-ui";
            configObject.presets = [SwaggerUIBundle.presets.apis, SwaggerUIStandalonePreset];
            configObject.layout = "StandaloneLayout";

            // Parse and add interceptor functions
            var interceptors = JSON.parse('{"RequestInterceptorFunction":null,"ResponseInterceptorFunction":null}');
            if (interceptors.RequestInterceptorFunction)
                configObject.requestInterceptor = parseFunction(interceptors.RequestInterceptorFunction);
            if (interceptors.ResponseInterceptorFunction)
                configObject.responseInterceptor = parseFunction(interceptors.ResponseInterceptorFunction);

            // Begin Swagger UI call region

            const ui = SwaggerUIBundle(configObject);

            ui.initOAuth(oauthConfigObject);

            // End Swagger UI call region

            window.ui = ui
        }
    </script>
</body>
</html>

2023-08-04 14:45:38,441 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - REQUEST INFO:  [TraceId: 0HMSKPU7DDAUH:00000002] - Schema: http - Method: GET, Host: localhost:5049, Path: /swagger/v1/swagger.json, Client IP: ::1 RequestBody: 
2023-08-04 14:45:38,577 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - RESPONSE INFO: [TraceId: 0HMSKPU7DDAUH:00000002] - Status: 200 - Response Body: {
  "openapi": "3.0.1",
  "info": {
    "title": "BookStore",
    "version": "1.0"
  },
  "paths": {
    "/author/list": {
      "get": {
        "tags": [
          "Author"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/author/create": {
      "post": {
        "tags": [
          "Author"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorTemplate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorTemplate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorTemplate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/author/get/{id}": {
      "get": {
        "tags": [
          "Author"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/author/update/{id}": {
      "put": {
        "tags": [
          "Author"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorTemplate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorTemplate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorTemplate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/author/delete/{id}": {
      "delete": {
        "tags": [
          "Author"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/book/list": {
      "get": {
        "tags": [
          "Book"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/book/create": {
      "post": {
        "tags": [
          "Book"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "Title": {
                    "type": "string"
                  },
                  "Description": {
                    "type": "string"
                  },
                  "AuthorId": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "ImagePath": {
                    "type": "string"
                  },
                  "Image": {
                    "type": "string",
                    "format": "binary"
                  },
                  "Genres": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "format": "int64"
                    }
                  }
                }
              },
              "encoding": {
                "Title": {
                  "style": "form"
                },
                "Description": {
                  "style": "form"
                },
                "AuthorId": {
                  "style": "form"
                },
                "ImagePath": {
                  "style": "form"
                },
                "Image": {
                  "style": "form"
                },
                "Genres": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/book/get/{id}": {
      "get": {
        "tags": [
          "Book"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/book/update/{id}": {
      "put": {
        "tags": [
          "Book"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "Title": {
                    "type": "string"
                  },
                  "Description": {
                    "type": "string"
                  },
                  "AuthorId": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "ImagePath": {
                    "type": "string"
                  },
                  "Image": {
                    "type": "string",
                    "format": "binary"
                  },
                  "Genres": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "format": "int64"
                    }
                  }
                }
              },
              "encoding": {
                "Title": {
                  "style": "form"
                },
                "Description": {
                  "style": "form"
                },
                "AuthorId": {
                  "style": "form"
                },
                "ImagePath": {
                  "style": "form"
                },
                "Image": {
                  "style": "form"
                },
                "Genres": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/book/delete/{id}": {
      "delete": {
        "tags": [
          "Book"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/genre/list": {
      "get": {
        "tags": [
          "Genre"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/genre/create": {
      "post": {
        "tags": [
          "Genre"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenreTemplate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GenreTemplate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GenreTemplate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/genre/get/{id}": {
      "get": {
        "tags": [
          "Genre"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/genre/update/{id}": {
      "put": {
        "tags": [
          "Genre"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenreTemplate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GenreTemplate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GenreTemplate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/genre/delete/{id}": {
      "delete": {
        "tags": [
          "Genre"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AuthorTemplate": {
        "type": "object",
        "properties": {
          "firstname": {
            "type": "string",
            "nullable": true
          },
          "lastname": {
            "type": "string",
            "nullable": true
          },
          "age": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GenreTemplate": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "minLength": 2,
            "type": "string"
          }
        },
        "additionalProperties": false
      }
    }
  }
}
2023-08-04 14:45:41,727 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - REQUEST INFO:  [TraceId: 0HMSKPU7DDAUJ:00000001] - Schema: http - Method: POST, Host: localhost:5049, Path: /genre/create, Client IP: ::1 RequestBody: { "name": "asdasds"}
2023-08-04 14:45:42,012 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - RESPONSE INFO: [TraceId: 0HMSKPU7DDAUJ:00000001] - Status: 400 - Response Body: {"type":"https://tools.ietf.org/html/rfc7231#section-6.5.1","title":"One or more validation errors occurred.","status":400,"traceId":"0HMSKPU7DDAUJ:00000001","errors":{"template":["The template field is required."],"$.name":["'0x0A' is invalid within a JSON string. The string should be correctly escaped. Path: $.name | LineNumber: 1 | BytePositionInLine: 18."]}}
2023-08-04 14:46:17,493 [7] INFO  Microsoft.Hosting.Lifetime - Application is shutting down...
2023-08-04 14:46:23,477 [1] INFO  Microsoft.Hosting.Lifetime - Now listening on: http://localhost:5049
2023-08-04 14:46:23,503 [1] INFO  Microsoft.Hosting.Lifetime - Application started. Press Ctrl+C to shut down.
2023-08-04 14:46:23,504 [1] INFO  Microsoft.Hosting.Lifetime - Hosting environment: Development
2023-08-04 14:46:23,504 [1] INFO  Microsoft.Hosting.Lifetime - Content root path: P:\C#\BookStore\BookStore
2023-08-04 14:46:24,041 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - REQUEST INFO:  [TraceId: 0HMSKPUL2S7CF:00000001] - Schema: http - Method: GET, Host: localhost:5049, Path: /swagger/index.html, RequestBody: 
2023-08-04 14:46:24,229 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - RESPONSE INFO: [TraceId: 0HMSKPUL2S7CF:00000001] - Status: 200 - Response Body: <!-- HTML for static distribution bundle build -->
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Swagger UI</title>
    <link rel="stylesheet" type="text/css" href="./swagger-ui.css">
    <link rel="icon" type="image/png" href="./favicon-32x32.png" sizes="32x32" />
    <link rel="icon" type="image/png" href="./favicon-16x16.png" sizes="16x16" />
    <style>

        html {
            box-sizing: border-box;
            overflow: -moz-scrollbars-vertical;
            overflow-y: scroll;
        }

        *,
        *:before,
        *:after {
            box-sizing: inherit;
        }

        body {
            margin: 0;
            background: #fafafa;
        }
    </style>
    
</head>

<body>
    <div id="swagger-ui"></div>

    <!-- Workaround for https://github.com/swagger-api/swagger-editor/issues/1371 -->
    <script>
        if (window.navigator.userAgent.indexOf("Edge") > -1) {
            console.log("Removing native Edge fetch in favor of swagger-ui's polyfill")
            window.fetch = undefined;
        }
    </script>

    <script src="./swagger-ui-bundle.js"></script>
    <script src="./swagger-ui-standalone-preset.js"></script>
    <script>
        /* Source: https://gist.github.com/lamberta/3768814
         * Parse a string function definition and return a function object. Does not use eval.
         * @param {string} str
         * @return {function}
         *
         * Example:
         *  var f = function (x, y) { return x * y; };
         *  var g = parseFunction(f.toString());
         *  g(33, 3); //=> 99
         */
        function parseFunction(str) {
            if (!str) return void (0);

            var fn_body_idx = str.indexOf('{'),
                fn_body = str.substring(fn_body_idx + 1, str.lastIndexOf('}')),
                fn_declare = str.substring(0, fn_body_idx),
                fn_params = fn_declare.substring(fn_declare.indexOf('(') + 1, fn_declare.lastIndexOf(')')),
                args = fn_params.split(',');

            args.push(fn_body);

            function Fn() {
                return Function.apply(this, args);
            }
            Fn.prototype = Function.prototype;

            return new Fn();
        }

        window.onload = function () {
            var configObject = JSON.parse('{"urls":[{"url":"v1/swagger.json","name":"BookStore v1"}],"deepLinking":false,"persistAuthorization":false,"displayOperationId":false,"defaultModelsExpandDepth":1,"defaultModelExpandDepth":1,"defaultModelRendering":"example","displayRequestDuration":false,"docExpansion":"list","showExtensions":false,"showCommonExtensions":false,"supportedSubmitMethods":["get","put","post","delete","options","head","patch","trace"],"tryItOutEnabled":false}');
            var oauthConfigObject = JSON.parse('{"scopeSeparator":" ","scopes":[],"useBasicAuthenticationWithAccessCodeGrant":false,"usePkceWithAuthorizationCodeGrant":false}');

            // Workaround for https://github.com/swagger-api/swagger-ui/issues/5945
            configObject.urls.forEach(function (item) {
                if (item.url.startsWith("http") || item.url.startsWith("/")) return;
                item.url = window.location.href.replace("index.html", item.url).split('#')[0];
            });

            // If validatorUrl is not explicitly provided, disable the feature by setting to null
            if (!configObject.hasOwnProperty("validatorUrl"))
                configObject.validatorUrl = null

            // If oauth2RedirectUrl isn't specified, use the built-in default
            if (!configObject.hasOwnProperty("oauth2RedirectUrl"))
                configObject.oauth2RedirectUrl = (new URL("oauth2-redirect.html", window.location.href)).href;

            // Apply mandatory parameters
            configObject.dom_id = "#swagger-ui";
            configObject.presets = [SwaggerUIBundle.presets.apis, SwaggerUIStandalonePreset];
            configObject.layout = "StandaloneLayout";

            // Parse and add interceptor functions
            var interceptors = JSON.parse('{"RequestInterceptorFunction":null,"ResponseInterceptorFunction":null}');
            if (interceptors.RequestInterceptorFunction)
                configObject.requestInterceptor = parseFunction(interceptors.RequestInterceptorFunction);
            if (interceptors.ResponseInterceptorFunction)
                configObject.responseInterceptor = parseFunction(interceptors.ResponseInterceptorFunction);

            // Begin Swagger UI call region

            const ui = SwaggerUIBundle(configObject);

            ui.initOAuth(oauthConfigObject);

            // End Swagger UI call region

            window.ui = ui
        }
    </script>
</body>
</html>

2023-08-04 14:46:24,374 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - REQUEST INFO:  [TraceId: 0HMSKPUL2S7CF:00000002] - Schema: http - Method: GET, Host: localhost:5049, Path: /swagger/v1/swagger.json, RequestBody: 
2023-08-04 14:46:24,543 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - RESPONSE INFO: [TraceId: 0HMSKPUL2S7CF:00000002] - Status: 200 - Response Body: {
  "openapi": "3.0.1",
  "info": {
    "title": "BookStore",
    "version": "1.0"
  },
  "paths": {
    "/author/list": {
      "get": {
        "tags": [
          "Author"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/author/create": {
      "post": {
        "tags": [
          "Author"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorTemplate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorTemplate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorTemplate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/author/get/{id}": {
      "get": {
        "tags": [
          "Author"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/author/update/{id}": {
      "put": {
        "tags": [
          "Author"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorTemplate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorTemplate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorTemplate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/author/delete/{id}": {
      "delete": {
        "tags": [
          "Author"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/book/list": {
      "get": {
        "tags": [
          "Book"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/book/create": {
      "post": {
        "tags": [
          "Book"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "Title": {
                    "type": "string"
                  },
                  "Description": {
                    "type": "string"
                  },
                  "AuthorId": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "ImagePath": {
                    "type": "string"
                  },
                  "Image": {
                    "type": "string",
                    "format": "binary"
                  },
                  "Genres": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "format": "int64"
                    }
                  }
                }
              },
              "encoding": {
                "Title": {
                  "style": "form"
                },
                "Description": {
                  "style": "form"
                },
                "AuthorId": {
                  "style": "form"
                },
                "ImagePath": {
                  "style": "form"
                },
                "Image": {
                  "style": "form"
                },
                "Genres": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/book/get/{id}": {
      "get": {
        "tags": [
          "Book"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/book/update/{id}": {
      "put": {
        "tags": [
          "Book"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "Title": {
                    "type": "string"
                  },
                  "Description": {
                    "type": "string"
                  },
                  "AuthorId": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "ImagePath": {
                    "type": "string"
                  },
                  "Image": {
                    "type": "string",
                    "format": "binary"
                  },
                  "Genres": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "format": "int64"
                    }
                  }
                }
              },
              "encoding": {
                "Title": {
                  "style": "form"
                },
                "Description": {
                  "style": "form"
                },
                "AuthorId": {
                  "style": "form"
                },
                "ImagePath": {
                  "style": "form"
                },
                "Image": {
                  "style": "form"
                },
                "Genres": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/book/delete/{id}": {
      "delete": {
        "tags": [
          "Book"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/genre/list": {
      "get": {
        "tags": [
          "Genre"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/genre/create": {
      "post": {
        "tags": [
          "Genre"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenreTemplate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GenreTemplate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GenreTemplate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/genre/get/{id}": {
      "get": {
        "tags": [
          "Genre"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/genre/update/{id}": {
      "put": {
        "tags": [
          "Genre"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenreTemplate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GenreTemplate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GenreTemplate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/genre/delete/{id}": {
      "delete": {
        "tags": [
          "Genre"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AuthorTemplate": {
        "type": "object",
        "properties": {
          "firstname": {
            "type": "string",
            "nullable": true
          },
          "lastname": {
            "type": "string",
            "nullable": true
          },
          "age": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GenreTemplate": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "minLength": 2,
            "type": "string"
          }
        },
        "additionalProperties": false
      }
    }
  }
}
2023-08-04 14:46:28,988 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - REQUEST INFO:  [TraceId: 0HMSKPUL2S7CF:00000003] - Schema: http - Method: GET, Host: localhost:5049, Path: /author/list, RequestBody: 
2023-08-04 14:46:32,377 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - RESPONSE INFO: [TraceId: 0HMSKPUL2S7CF:00000003] - Status: 200 - Response Body: {"success":true,"message":"SUCCESS","data":[{"id":2,"firstname":"Bekzod","lastname":"Toshpulatov","age":0},{"id":3,"firstname":"string","lastname":"string","age":0},{"id":4,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":5,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":6,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":7,"firstname":"string","lastname":"string","age":0},{"id":8,"firstname":"string","lastname":"string","age":0},{"id":9,"firstname":"string","lastname":"string","age":0},{"id":10,"firstname":"ewrew","lastname":"rewrwerwe","age":0},{"id":11,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":12,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":13,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":14,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":15,"firstname":"uheiqwguwehng","lastname":"asfewgew","age":122},{"id":16,"firstname":"string","lastname":"string","age":0},{"id":17,"firstname":"string","lastname":"string","age":0},{"id":18,"firstname":"string","lastname":"string","age":0},{"id":19,"firstname":"string","lastname":"string","age":0},{"id":20,"firstname":"string","lastname":"string","age":0}]}
2023-08-04 14:46:39,668 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - REQUEST INFO:  [TraceId: 0HMSKPUL2S7CF:00000004] - Schema: http - Method: POST, Host: localhost:5049, Path: /genre/create, RequestBody: { "name": "asdasds"}
2023-08-04 14:46:39,790 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - RESPONSE INFO: [TraceId: 0HMSKPUL2S7CF:00000004] - Status: 400 - Response Body: {"type":"https://tools.ietf.org/html/rfc7231#section-6.5.1","title":"One or more validation errors occurred.","status":400,"traceId":"0HMSKPUL2S7CF:00000004","errors":{"template":["The template field is required."],"$.name":["'0x0A' is invalid within a JSON string. The string should be correctly escaped. Path: $.name | LineNumber: 1 | BytePositionInLine: 18."]}}
2023-08-04 14:47:10,259 [15] INFO  Microsoft.Hosting.Lifetime - Application is shutting down...
2023-08-04 14:47:17,297 [1] INFO  Microsoft.Hosting.Lifetime - Now listening on: http://localhost:5049
2023-08-04 14:47:17,314 [1] INFO  Microsoft.Hosting.Lifetime - Application started. Press Ctrl+C to shut down.
2023-08-04 14:47:17,316 [1] INFO  Microsoft.Hosting.Lifetime - Hosting environment: Development
2023-08-04 14:47:17,316 [1] INFO  Microsoft.Hosting.Lifetime - Content root path: P:\C#\BookStore\BookStore
2023-08-04 14:47:17,963 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - REQUEST INFO:  [TraceId: 0HMSKPV53LGR5:00000001] - Schema: http - Method: GET, Host: localhost:5049, Path: /swagger/index.html, QueryString: , Client IP: ::1 RequestBody: 
2023-08-04 14:47:18,115 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - RESPONSE INFO: [TraceId: 0HMSKPV53LGR5:00000001] - Status: 200 - Response Body: <!-- HTML for static distribution bundle build -->
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Swagger UI</title>
    <link rel="stylesheet" type="text/css" href="./swagger-ui.css">
    <link rel="icon" type="image/png" href="./favicon-32x32.png" sizes="32x32" />
    <link rel="icon" type="image/png" href="./favicon-16x16.png" sizes="16x16" />
    <style>

        html {
            box-sizing: border-box;
            overflow: -moz-scrollbars-vertical;
            overflow-y: scroll;
        }

        *,
        *:before,
        *:after {
            box-sizing: inherit;
        }

        body {
            margin: 0;
            background: #fafafa;
        }
    </style>
    
</head>

<body>
    <div id="swagger-ui"></div>

    <!-- Workaround for https://github.com/swagger-api/swagger-editor/issues/1371 -->
    <script>
        if (window.navigator.userAgent.indexOf("Edge") > -1) {
            console.log("Removing native Edge fetch in favor of swagger-ui's polyfill")
            window.fetch = undefined;
        }
    </script>

    <script src="./swagger-ui-bundle.js"></script>
    <script src="./swagger-ui-standalone-preset.js"></script>
    <script>
        /* Source: https://gist.github.com/lamberta/3768814
         * Parse a string function definition and return a function object. Does not use eval.
         * @param {string} str
         * @return {function}
         *
         * Example:
         *  var f = function (x, y) { return x * y; };
         *  var g = parseFunction(f.toString());
         *  g(33, 3); //=> 99
         */
        function parseFunction(str) {
            if (!str) return void (0);

            var fn_body_idx = str.indexOf('{'),
                fn_body = str.substring(fn_body_idx + 1, str.lastIndexOf('}')),
                fn_declare = str.substring(0, fn_body_idx),
                fn_params = fn_declare.substring(fn_declare.indexOf('(') + 1, fn_declare.lastIndexOf(')')),
                args = fn_params.split(',');

            args.push(fn_body);

            function Fn() {
                return Function.apply(this, args);
            }
            Fn.prototype = Function.prototype;

            return new Fn();
        }

        window.onload = function () {
            var configObject = JSON.parse('{"urls":[{"url":"v1/swagger.json","name":"BookStore v1"}],"deepLinking":false,"persistAuthorization":false,"displayOperationId":false,"defaultModelsExpandDepth":1,"defaultModelExpandDepth":1,"defaultModelRendering":"example","displayRequestDuration":false,"docExpansion":"list","showExtensions":false,"showCommonExtensions":false,"supportedSubmitMethods":["get","put","post","delete","options","head","patch","trace"],"tryItOutEnabled":false}');
            var oauthConfigObject = JSON.parse('{"scopeSeparator":" ","scopes":[],"useBasicAuthenticationWithAccessCodeGrant":false,"usePkceWithAuthorizationCodeGrant":false}');

            // Workaround for https://github.com/swagger-api/swagger-ui/issues/5945
            configObject.urls.forEach(function (item) {
                if (item.url.startsWith("http") || item.url.startsWith("/")) return;
                item.url = window.location.href.replace("index.html", item.url).split('#')[0];
            });

            // If validatorUrl is not explicitly provided, disable the feature by setting to null
            if (!configObject.hasOwnProperty("validatorUrl"))
                configObject.validatorUrl = null

            // If oauth2RedirectUrl isn't specified, use the built-in default
            if (!configObject.hasOwnProperty("oauth2RedirectUrl"))
                configObject.oauth2RedirectUrl = (new URL("oauth2-redirect.html", window.location.href)).href;

            // Apply mandatory parameters
            configObject.dom_id = "#swagger-ui";
            configObject.presets = [SwaggerUIBundle.presets.apis, SwaggerUIStandalonePreset];
            configObject.layout = "StandaloneLayout";

            // Parse and add interceptor functions
            var interceptors = JSON.parse('{"RequestInterceptorFunction":null,"ResponseInterceptorFunction":null}');
            if (interceptors.RequestInterceptorFunction)
                configObject.requestInterceptor = parseFunction(interceptors.RequestInterceptorFunction);
            if (interceptors.ResponseInterceptorFunction)
                configObject.responseInterceptor = parseFunction(interceptors.ResponseInterceptorFunction);

            // Begin Swagger UI call region

            const ui = SwaggerUIBundle(configObject);

            ui.initOAuth(oauthConfigObject);

            // End Swagger UI call region

            window.ui = ui
        }
    </script>
</body>
</html>

2023-08-04 14:47:18,249 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - REQUEST INFO:  [TraceId: 0HMSKPV53LGR5:00000002] - Schema: http - Method: GET, Host: localhost:5049, Path: /swagger/v1/swagger.json, QueryString: , Client IP: ::1 RequestBody: 
2023-08-04 14:47:18,423 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - RESPONSE INFO: [TraceId: 0HMSKPV53LGR5:00000002] - Status: 200 - Response Body: {
  "openapi": "3.0.1",
  "info": {
    "title": "BookStore",
    "version": "1.0"
  },
  "paths": {
    "/author/list": {
      "get": {
        "tags": [
          "Author"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/author/create": {
      "post": {
        "tags": [
          "Author"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorTemplate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorTemplate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorTemplate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/author/get/{id}": {
      "get": {
        "tags": [
          "Author"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/author/update/{id}": {
      "put": {
        "tags": [
          "Author"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorTemplate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorTemplate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorTemplate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/author/delete/{id}": {
      "delete": {
        "tags": [
          "Author"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/book/list": {
      "get": {
        "tags": [
          "Book"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/book/create": {
      "post": {
        "tags": [
          "Book"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "Title": {
                    "type": "string"
                  },
                  "Description": {
                    "type": "string"
                  },
                  "AuthorId": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "ImagePath": {
                    "type": "string"
                  },
                  "Image": {
                    "type": "string",
                    "format": "binary"
                  },
                  "Genres": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "format": "int64"
                    }
                  }
                }
              },
              "encoding": {
                "Title": {
                  "style": "form"
                },
                "Description": {
                  "style": "form"
                },
                "AuthorId": {
                  "style": "form"
                },
                "ImagePath": {
                  "style": "form"
                },
                "Image": {
                  "style": "form"
                },
                "Genres": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/book/get/{id}": {
      "get": {
        "tags": [
          "Book"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/book/update/{id}": {
      "put": {
        "tags": [
          "Book"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "Title": {
                    "type": "string"
                  },
                  "Description": {
                    "type": "string"
                  },
                  "AuthorId": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "ImagePath": {
                    "type": "string"
                  },
                  "Image": {
                    "type": "string",
                    "format": "binary"
                  },
                  "Genres": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "format": "int64"
                    }
                  }
                }
              },
              "encoding": {
                "Title": {
                  "style": "form"
                },
                "Description": {
                  "style": "form"
                },
                "AuthorId": {
                  "style": "form"
                },
                "ImagePath": {
                  "style": "form"
                },
                "Image": {
                  "style": "form"
                },
                "Genres": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/book/delete/{id}": {
      "delete": {
        "tags": [
          "Book"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/genre/list": {
      "get": {
        "tags": [
          "Genre"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/genre/create": {
      "post": {
        "tags": [
          "Genre"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenreTemplate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GenreTemplate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GenreTemplate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/genre/get/{id}": {
      "get": {
        "tags": [
          "Genre"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/genre/update/{id}": {
      "put": {
        "tags": [
          "Genre"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenreTemplate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GenreTemplate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GenreTemplate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/genre/delete/{id}": {
      "delete": {
        "tags": [
          "Genre"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AuthorTemplate": {
        "type": "object",
        "properties": {
          "firstname": {
            "type": "string",
            "nullable": true
          },
          "lastname": {
            "type": "string",
            "nullable": true
          },
          "age": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GenreTemplate": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "minLength": 2,
            "type": "string"
          }
        },
        "additionalProperties": false
      }
    }
  }
}
2023-08-04 14:47:24,686 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - REQUEST INFO:  [TraceId: 0HMSKPV53LGR7:00000001] - Schema: http - Method: POST, Host: localhost:5049, Path: /genre/create, QueryString: , Client IP: ::1 RequestBody: { "name": "asdasds""}
2023-08-04 14:47:24,943 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - RESPONSE INFO: [TraceId: 0HMSKPV53LGR7:00000001] - Status: 400 - Response Body: {"type":"https://tools.ietf.org/html/rfc7231#section-6.5.1","title":"One or more validation errors occurred.","status":400,"traceId":"0HMSKPV53LGR7:00000001","errors":{"$":["'\"' is invalid after a value. Expected either ',', '}', or ']'. Path: $ | LineNumber: 2 | BytePositionInLine: 0."],"template":["The template field is required."]}}
2023-08-04 14:47:46,707 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - REQUEST INFO:  [TraceId: 0HMSKPV53LGR8:00000001] - Schema: http - Method: POST, Host: localhost:5049, Path: /genre/create, QueryString: , Client IP: ::1 RequestBody: { "name": "asdasds"}
2023-08-04 14:47:49,073 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - RESPONSE INFO: [TraceId: 0HMSKPV53LGR8:00000001] - Status: 200 - Response Body: {"success":true,"message":"GENRE CREATED SUCCESSFULLY","data":{"id":7,"name":"asdasds"}}
2023-08-04 14:55:58,508 [18] INFO  Microsoft.Hosting.Lifetime - Application is shutting down...
2023-08-04 14:56:06,903 [1] INFO  Microsoft.Hosting.Lifetime - Now listening on: http://localhost:5049
2023-08-04 14:56:06,920 [1] INFO  Microsoft.Hosting.Lifetime - Application started. Press Ctrl+C to shut down.
2023-08-04 14:56:06,921 [1] INFO  Microsoft.Hosting.Lifetime - Hosting environment: Development
2023-08-04 14:56:06,921 [1] INFO  Microsoft.Hosting.Lifetime - Content root path: P:\C#\BookStore\BookStore
2023-08-04 14:56:07,712 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - REQUEST INFO:  [TraceId: 0HMSKQ42UR0QD:00000001] - Schema: http - Method: GET - Host: localhost:5049 - Path: /swagger/index.html - QueryString:  - Client IP: ::1 - RequestBody: 
2023-08-04 14:56:07,923 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - RESPONSE INFO: [TraceId: 0HMSKQ42UR0QD:00000001] - Status: 200 - SpentTime: 00:00:00.2183985 - Response Body: <!-- HTML for static distribution bundle build -->
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Swagger UI</title>
    <link rel="stylesheet" type="text/css" href="./swagger-ui.css">
    <link rel="icon" type="image/png" href="./favicon-32x32.png" sizes="32x32" />
    <link rel="icon" type="image/png" href="./favicon-16x16.png" sizes="16x16" />
    <style>

        html {
            box-sizing: border-box;
            overflow: -moz-scrollbars-vertical;
            overflow-y: scroll;
        }

        *,
        *:before,
        *:after {
            box-sizing: inherit;
        }

        body {
            margin: 0;
            background: #fafafa;
        }
    </style>
    
</head>

<body>
    <div id="swagger-ui"></div>

    <!-- Workaround for https://github.com/swagger-api/swagger-editor/issues/1371 -->
    <script>
        if (window.navigator.userAgent.indexOf("Edge") > -1) {
            console.log("Removing native Edge fetch in favor of swagger-ui's polyfill")
            window.fetch = undefined;
        }
    </script>

    <script src="./swagger-ui-bundle.js"></script>
    <script src="./swagger-ui-standalone-preset.js"></script>
    <script>
        /* Source: https://gist.github.com/lamberta/3768814
         * Parse a string function definition and return a function object. Does not use eval.
         * @param {string} str
         * @return {function}
         *
         * Example:
         *  var f = function (x, y) { return x * y; };
         *  var g = parseFunction(f.toString());
         *  g(33, 3); //=> 99
         */
        function parseFunction(str) {
            if (!str) return void (0);

            var fn_body_idx = str.indexOf('{'),
                fn_body = str.substring(fn_body_idx + 1, str.lastIndexOf('}')),
                fn_declare = str.substring(0, fn_body_idx),
                fn_params = fn_declare.substring(fn_declare.indexOf('(') + 1, fn_declare.lastIndexOf(')')),
                args = fn_params.split(',');

            args.push(fn_body);

            function Fn() {
                return Function.apply(this, args);
            }
            Fn.prototype = Function.prototype;

            return new Fn();
        }

        window.onload = function () {
            var configObject = JSON.parse('{"urls":[{"url":"v1/swagger.json","name":"BookStore v1"}],"deepLinking":false,"persistAuthorization":false,"displayOperationId":false,"defaultModelsExpandDepth":1,"defaultModelExpandDepth":1,"defaultModelRendering":"example","displayRequestDuration":false,"docExpansion":"list","showExtensions":false,"showCommonExtensions":false,"supportedSubmitMethods":["get","put","post","delete","options","head","patch","trace"],"tryItOutEnabled":false}');
            var oauthConfigObject = JSON.parse('{"scopeSeparator":" ","scopes":[],"useBasicAuthenticationWithAccessCodeGrant":false,"usePkceWithAuthorizationCodeGrant":false}');

            // Workaround for https://github.com/swagger-api/swagger-ui/issues/5945
            configObject.urls.forEach(function (item) {
                if (item.url.startsWith("http") || item.url.startsWith("/")) return;
                item.url = window.location.href.replace("index.html", item.url).split('#')[0];
            });

            // If validatorUrl is not explicitly provided, disable the feature by setting to null
            if (!configObject.hasOwnProperty("validatorUrl"))
                configObject.validatorUrl = null

            // If oauth2RedirectUrl isn't specified, use the built-in default
            if (!configObject.hasOwnProperty("oauth2RedirectUrl"))
                configObject.oauth2RedirectUrl = (new URL("oauth2-redirect.html", window.location.href)).href;

            // Apply mandatory parameters
            configObject.dom_id = "#swagger-ui";
            configObject.presets = [SwaggerUIBundle.presets.apis, SwaggerUIStandalonePreset];
            configObject.layout = "StandaloneLayout";

            // Parse and add interceptor functions
            var interceptors = JSON.parse('{"RequestInterceptorFunction":null,"ResponseInterceptorFunction":null}');
            if (interceptors.RequestInterceptorFunction)
                configObject.requestInterceptor = parseFunction(interceptors.RequestInterceptorFunction);
            if (interceptors.ResponseInterceptorFunction)
                configObject.responseInterceptor = parseFunction(interceptors.ResponseInterceptorFunction);

            // Begin Swagger UI call region

            const ui = SwaggerUIBundle(configObject);

            ui.initOAuth(oauthConfigObject);

            // End Swagger UI call region

            window.ui = ui
        }
    </script>
</body>
</html>

2023-08-04 14:56:08,078 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - REQUEST INFO:  [TraceId: 0HMSKQ42UR0QD:00000002] - Schema: http - Method: GET - Host: localhost:5049 - Path: /swagger/v1/swagger.json - QueryString:  - Client IP: ::1 - RequestBody: 
2023-08-04 14:56:08,243 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - RESPONSE INFO: [TraceId: 0HMSKQ42UR0QD:00000002] - Status: 200 - SpentTime: 00:00:00.1646594 - Response Body: {
  "openapi": "3.0.1",
  "info": {
    "title": "BookStore",
    "version": "1.0"
  },
  "paths": {
    "/author/list": {
      "get": {
        "tags": [
          "Author"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/author/create": {
      "post": {
        "tags": [
          "Author"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorTemplate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorTemplate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorTemplate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/author/get/{id}": {
      "get": {
        "tags": [
          "Author"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/author/update/{id}": {
      "put": {
        "tags": [
          "Author"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorTemplate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorTemplate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorTemplate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/author/delete/{id}": {
      "delete": {
        "tags": [
          "Author"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/book/list": {
      "get": {
        "tags": [
          "Book"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/book/create": {
      "post": {
        "tags": [
          "Book"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "Title": {
                    "type": "string"
                  },
                  "Description": {
                    "type": "string"
                  },
                  "AuthorId": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "ImagePath": {
                    "type": "string"
                  },
                  "Image": {
                    "type": "string",
                    "format": "binary"
                  },
                  "Genres": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "format": "int64"
                    }
                  }
                }
              },
              "encoding": {
                "Title": {
                  "style": "form"
                },
                "Description": {
                  "style": "form"
                },
                "AuthorId": {
                  "style": "form"
                },
                "ImagePath": {
                  "style": "form"
                },
                "Image": {
                  "style": "form"
                },
                "Genres": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/book/get/{id}": {
      "get": {
        "tags": [
          "Book"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/book/update/{id}": {
      "put": {
        "tags": [
          "Book"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "Title": {
                    "type": "string"
                  },
                  "Description": {
                    "type": "string"
                  },
                  "AuthorId": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "ImagePath": {
                    "type": "string"
                  },
                  "Image": {
                    "type": "string",
                    "format": "binary"
                  },
                  "Genres": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "format": "int64"
                    }
                  }
                }
              },
              "encoding": {
                "Title": {
                  "style": "form"
                },
                "Description": {
                  "style": "form"
                },
                "AuthorId": {
                  "style": "form"
                },
                "ImagePath": {
                  "style": "form"
                },
                "Image": {
                  "style": "form"
                },
                "Genres": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/book/delete/{id}": {
      "delete": {
        "tags": [
          "Book"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/genre/list": {
      "get": {
        "tags": [
          "Genre"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/genre/create": {
      "post": {
        "tags": [
          "Genre"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenreTemplate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GenreTemplate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GenreTemplate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/genre/get/{id}": {
      "get": {
        "tags": [
          "Genre"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/genre/update/{id}": {
      "put": {
        "tags": [
          "Genre"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenreTemplate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GenreTemplate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GenreTemplate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/genre/delete/{id}": {
      "delete": {
        "tags": [
          "Genre"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AuthorTemplate": {
        "type": "object",
        "properties": {
          "firstname": {
            "type": "string",
            "nullable": true
          },
          "lastname": {
            "type": "string",
            "nullable": true
          },
          "age": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GenreTemplate": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "minLength": 2,
            "type": "string"
          }
        },
        "additionalProperties": false
      }
    }
  }
}
2023-08-04 14:56:14,190 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - REQUEST INFO:  [TraceId: 0HMSKQ42UR0QF:00000001] - Schema: http - Method: POST - Host: localhost:5049 - Path: /author/create - QueryString:  - Client IP: ::1 - RequestBody: { "firstname": "string", "lastname": "string", "age": 0}
2023-08-04 14:56:17,567 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - RESPONSE INFO: [TraceId: 0HMSKQ42UR0QF:00000001] - Status: 200 - SpentTime: 00:00:03.3830912 - Response Body: {"success":true,"message":"AUTHOR SUCCESSFULLY CREATED","data":{"id":21,"firstname":"string","lastname":"string","age":0}}
2023-08-04 14:56:43,167 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - REQUEST INFO:  [TraceId: 0HMSKQ42UR0QG:00000001] - Schema: http - Method: POST - Host: localhost:5049 - Path: /author/create - QueryString:  - Client IP: ::1 - RequestBody: { "firstname": "string", "lastname": "string", "age": 0}
2023-08-04 14:56:43,298 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - RESPONSE INFO: [TraceId: 0HMSKQ42UR0QG:00000001] - Status: 200 - SpentTime: 00:00:00.1314028 - Response Body: {"success":true,"message":"AUTHOR SUCCESSFULLY CREATED","data":{"id":22,"firstname":"string","lastname":"string","age":0}}
2023-08-04 14:57:38,044 [9] INFO  Microsoft.Hosting.Lifetime - Application is shutting down...
2023-08-04 14:57:45,581 [1] INFO  Microsoft.Hosting.Lifetime - Now listening on: http://localhost:5049
2023-08-04 14:57:45,599 [1] INFO  Microsoft.Hosting.Lifetime - Application started. Press Ctrl+C to shut down.
2023-08-04 14:57:45,600 [1] INFO  Microsoft.Hosting.Lifetime - Hosting environment: Development
2023-08-04 14:57:45,600 [1] INFO  Microsoft.Hosting.Lifetime - Content root path: P:\C#\BookStore\BookStore
2023-08-04 14:57:45,718 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - REQUEST INFO:  [TraceId: 0HMSKQ509TAKC:00000001] - Schema: http - Method: POST - Host: localhost:5049 - Path: /author/create - QueryString:  - Client IP: ::1 - RequestBody: { "firstname": "string", "lastname": "string", "age": 0}
2023-08-04 14:57:46,264 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - REQUEST INFO:  [TraceId: 0HMSKQ509TAKD:00000001] - Schema: http - Method: GET - Host: localhost:5049 - Path: /swagger/index.html - QueryString:  - Client IP: 127.0.0.1 - RequestBody: 
2023-08-04 14:57:46,542 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - RESPONSE INFO: [TraceId: 0HMSKQ509TAKD:00000001] - Status: 200 - SpentTime: 277 - Response Body: <!-- HTML for static distribution bundle build -->
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Swagger UI</title>
    <link rel="stylesheet" type="text/css" href="./swagger-ui.css">
    <link rel="icon" type="image/png" href="./favicon-32x32.png" sizes="32x32" />
    <link rel="icon" type="image/png" href="./favicon-16x16.png" sizes="16x16" />
    <style>

        html {
            box-sizing: border-box;
            overflow: -moz-scrollbars-vertical;
            overflow-y: scroll;
        }

        *,
        *:before,
        *:after {
            box-sizing: inherit;
        }

        body {
            margin: 0;
            background: #fafafa;
        }
    </style>
    
</head>

<body>
    <div id="swagger-ui"></div>

    <!-- Workaround for https://github.com/swagger-api/swagger-editor/issues/1371 -->
    <script>
        if (window.navigator.userAgent.indexOf("Edge") > -1) {
            console.log("Removing native Edge fetch in favor of swagger-ui's polyfill")
            window.fetch = undefined;
        }
    </script>

    <script src="./swagger-ui-bundle.js"></script>
    <script src="./swagger-ui-standalone-preset.js"></script>
    <script>
        /* Source: https://gist.github.com/lamberta/3768814
         * Parse a string function definition and return a function object. Does not use eval.
         * @param {string} str
         * @return {function}
         *
         * Example:
         *  var f = function (x, y) { return x * y; };
         *  var g = parseFunction(f.toString());
         *  g(33, 3); //=> 99
         */
        function parseFunction(str) {
            if (!str) return void (0);

            var fn_body_idx = str.indexOf('{'),
                fn_body = str.substring(fn_body_idx + 1, str.lastIndexOf('}')),
                fn_declare = str.substring(0, fn_body_idx),
                fn_params = fn_declare.substring(fn_declare.indexOf('(') + 1, fn_declare.lastIndexOf(')')),
                args = fn_params.split(',');

            args.push(fn_body);

            function Fn() {
                return Function.apply(this, args);
            }
            Fn.prototype = Function.prototype;

            return new Fn();
        }

        window.onload = function () {
            var configObject = JSON.parse('{"urls":[{"url":"v1/swagger.json","name":"BookStore v1"}],"deepLinking":false,"persistAuthorization":false,"displayOperationId":false,"defaultModelsExpandDepth":1,"defaultModelExpandDepth":1,"defaultModelRendering":"example","displayRequestDuration":false,"docExpansion":"list","showExtensions":false,"showCommonExtensions":false,"supportedSubmitMethods":["get","put","post","delete","options","head","patch","trace"],"tryItOutEnabled":false}');
            var oauthConfigObject = JSON.parse('{"scopeSeparator":" ","scopes":[],"useBasicAuthenticationWithAccessCodeGrant":false,"usePkceWithAuthorizationCodeGrant":false}');

            // Workaround for https://github.com/swagger-api/swagger-ui/issues/5945
            configObject.urls.forEach(function (item) {
                if (item.url.startsWith("http") || item.url.startsWith("/")) return;
                item.url = window.location.href.replace("index.html", item.url).split('#')[0];
            });

            // If validatorUrl is not explicitly provided, disable the feature by setting to null
            if (!configObject.hasOwnProperty("validatorUrl"))
                configObject.validatorUrl = null

            // If oauth2RedirectUrl isn't specified, use the built-in default
            if (!configObject.hasOwnProperty("oauth2RedirectUrl"))
                configObject.oauth2RedirectUrl = (new URL("oauth2-redirect.html", window.location.href)).href;

            // Apply mandatory parameters
            configObject.dom_id = "#swagger-ui";
            configObject.presets = [SwaggerUIBundle.presets.apis, SwaggerUIStandalonePreset];
            configObject.layout = "StandaloneLayout";

            // Parse and add interceptor functions
            var interceptors = JSON.parse('{"RequestInterceptorFunction":null,"ResponseInterceptorFunction":null}');
            if (interceptors.RequestInterceptorFunction)
                configObject.requestInterceptor = parseFunction(interceptors.RequestInterceptorFunction);
            if (interceptors.ResponseInterceptorFunction)
                configObject.responseInterceptor = parseFunction(interceptors.ResponseInterceptorFunction);

            // Begin Swagger UI call region

            const ui = SwaggerUIBundle(configObject);

            ui.initOAuth(oauthConfigObject);

            // End Swagger UI call region

            window.ui = ui
        }
    </script>
</body>
</html>

2023-08-04 14:57:46,767 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - REQUEST INFO:  [TraceId: 0HMSKQ509TAKD:00000002] - Schema: http - Method: GET - Host: localhost:5049 - Path: /swagger/v1/swagger.json - QueryString:  - Client IP: 127.0.0.1 - RequestBody: 
2023-08-04 14:57:46,990 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - RESPONSE INFO: [TraceId: 0HMSKQ509TAKD:00000002] - Status: 200 - SpentTime: 223 - Response Body: {
  "openapi": "3.0.1",
  "info": {
    "title": "BookStore",
    "version": "1.0"
  },
  "paths": {
    "/author/list": {
      "get": {
        "tags": [
          "Author"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/author/create": {
      "post": {
        "tags": [
          "Author"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorTemplate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorTemplate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorTemplate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/author/get/{id}": {
      "get": {
        "tags": [
          "Author"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/author/update/{id}": {
      "put": {
        "tags": [
          "Author"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorTemplate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorTemplate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorTemplate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/author/delete/{id}": {
      "delete": {
        "tags": [
          "Author"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/book/list": {
      "get": {
        "tags": [
          "Book"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/book/create": {
      "post": {
        "tags": [
          "Book"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "Title": {
                    "type": "string"
                  },
                  "Description": {
                    "type": "string"
                  },
                  "AuthorId": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "ImagePath": {
                    "type": "string"
                  },
                  "Image": {
                    "type": "string",
                    "format": "binary"
                  },
                  "Genres": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "format": "int64"
                    }
                  }
                }
              },
              "encoding": {
                "Title": {
                  "style": "form"
                },
                "Description": {
                  "style": "form"
                },
                "AuthorId": {
                  "style": "form"
                },
                "ImagePath": {
                  "style": "form"
                },
                "Image": {
                  "style": "form"
                },
                "Genres": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/book/get/{id}": {
      "get": {
        "tags": [
          "Book"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/book/update/{id}": {
      "put": {
        "tags": [
          "Book"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "Title": {
                    "type": "string"
                  },
                  "Description": {
                    "type": "string"
                  },
                  "AuthorId": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "ImagePath": {
                    "type": "string"
                  },
                  "Image": {
                    "type": "string",
                    "format": "binary"
                  },
                  "Genres": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "format": "int64"
                    }
                  }
                }
              },
              "encoding": {
                "Title": {
                  "style": "form"
                },
                "Description": {
                  "style": "form"
                },
                "AuthorId": {
                  "style": "form"
                },
                "ImagePath": {
                  "style": "form"
                },
                "Image": {
                  "style": "form"
                },
                "Genres": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/book/delete/{id}": {
      "delete": {
        "tags": [
          "Book"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/genre/list": {
      "get": {
        "tags": [
          "Genre"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/genre/create": {
      "post": {
        "tags": [
          "Genre"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenreTemplate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GenreTemplate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GenreTemplate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/genre/get/{id}": {
      "get": {
        "tags": [
          "Genre"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/genre/update/{id}": {
      "put": {
        "tags": [
          "Genre"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenreTemplate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GenreTemplate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GenreTemplate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/genre/delete/{id}": {
      "delete": {
        "tags": [
          "Genre"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AuthorTemplate": {
        "type": "object",
        "properties": {
          "firstname": {
            "type": "string",
            "nullable": true
          },
          "lastname": {
            "type": "string",
            "nullable": true
          },
          "age": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GenreTemplate": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "minLength": 2,
            "type": "string"
          }
        },
        "additionalProperties": false
      }
    }
  }
}
2023-08-04 14:57:49,260 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - RESPONSE INFO: [TraceId: 0HMSKQ509TAKC:00000001] - Status: 200 - SpentTime: 3555 - Response Body: {"success":true,"message":"AUTHOR SUCCESSFULLY CREATED","data":{"id":23,"firstname":"string","lastname":"string","age":0}}
2023-08-04 14:57:55,062 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - REQUEST INFO:  [TraceId: 0HMSKQ509TAKF:00000001] - Schema: http - Method: POST - Host: localhost:5049 - Path: /author/create - QueryString:  - Client IP: ::1 - RequestBody: { "firstname": "string", "lastname": "string", "age": 0}
2023-08-04 14:57:55,188 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - RESPONSE INFO: [TraceId: 0HMSKQ509TAKF:00000001] - Status: 200 - SpentTime: 126 - Response Body: {"success":true,"message":"AUTHOR SUCCESSFULLY CREATED","data":{"id":24,"firstname":"string","lastname":"string","age":0}}
2023-08-04 14:58:30,341 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - REQUEST INFO:  [TraceId: 0HMSKQ509TAKG:00000001] - Schema: http - Method: POST - Host: localhost:5049 - Path: /author/create - QueryString:  - Client IP: ::1 - RequestBody: { "firstname": "string", "lastname": "string", "age": 0}
2023-08-04 14:58:30,420 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - RESPONSE INFO: [TraceId: 0HMSKQ509TAKG:00000001] - Status: 200 - SpentTime: 79 - Response Body: {"success":true,"message":"AUTHOR SUCCESSFULLY CREATED","data":{"id":25,"firstname":"string","lastname":"string","age":0}}
2023-08-04 14:58:37,467 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - REQUEST INFO:  [TraceId: 0HMSKQ509TAKH:00000001] - Schema: http - Method: GET - Host: localhost:5049 - Path: /author/list - QueryString:  - Client IP: ::1 - RequestBody: 
2023-08-04 14:58:37,773 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - RESPONSE INFO: [TraceId: 0HMSKQ509TAKH:00000001] - Status: 200 - SpentTime: 306 - Response Body: {"success":true,"message":"SUCCESS","data":[{"id":2,"firstname":"Bekzod","lastname":"Toshpulatov","age":0},{"id":3,"firstname":"string","lastname":"string","age":0},{"id":4,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":5,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":6,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":7,"firstname":"string","lastname":"string","age":0},{"id":8,"firstname":"string","lastname":"string","age":0},{"id":9,"firstname":"string","lastname":"string","age":0},{"id":10,"firstname":"ewrew","lastname":"rewrwerwe","age":0},{"id":11,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":12,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":13,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":14,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":15,"firstname":"uheiqwguwehng","lastname":"asfewgew","age":122},{"id":16,"firstname":"string","lastname":"string","age":0},{"id":17,"firstname":"string","lastname":"string","age":0},{"id":18,"firstname":"string","lastname":"string","age":0},{"id":19,"firstname":"string","lastname":"string","age":0},{"id":20,"firstname":"string","lastname":"string","age":0},{"id":21,"firstname":"string","lastname":"string","age":0},{"id":22,"firstname":"string","lastname":"string","age":0},{"id":23,"firstname":"string","lastname":"string","age":0},{"id":24,"firstname":"string","lastname":"string","age":0},{"id":25,"firstname":"string","lastname":"string","age":0}]}
2023-08-04 14:58:41,795 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - REQUEST INFO:  [TraceId: 0HMSKQ509TAKI:00000001] - Schema: http - Method: GET - Host: localhost:5049 - Path: /author/list - QueryString:  - Client IP: ::1 - RequestBody: 
2023-08-04 14:58:41,801 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - RESPONSE INFO: [TraceId: 0HMSKQ509TAKI:00000001] - Status: 200 - SpentTime: 6 - Response Body: {"success":true,"message":"SUCCESS","data":[{"id":2,"firstname":"Bekzod","lastname":"Toshpulatov","age":0},{"id":3,"firstname":"string","lastname":"string","age":0},{"id":4,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":5,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":6,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":7,"firstname":"string","lastname":"string","age":0},{"id":8,"firstname":"string","lastname":"string","age":0},{"id":9,"firstname":"string","lastname":"string","age":0},{"id":10,"firstname":"ewrew","lastname":"rewrwerwe","age":0},{"id":11,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":12,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":13,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":14,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":15,"firstname":"uheiqwguwehng","lastname":"asfewgew","age":122},{"id":16,"firstname":"string","lastname":"string","age":0},{"id":17,"firstname":"string","lastname":"string","age":0},{"id":18,"firstname":"string","lastname":"string","age":0},{"id":19,"firstname":"string","lastname":"string","age":0},{"id":20,"firstname":"string","lastname":"string","age":0},{"id":21,"firstname":"string","lastname":"string","age":0},{"id":22,"firstname":"string","lastname":"string","age":0},{"id":23,"firstname":"string","lastname":"string","age":0},{"id":24,"firstname":"string","lastname":"string","age":0},{"id":25,"firstname":"string","lastname":"string","age":0}]}
2023-08-04 14:58:46,081 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - REQUEST INFO:  [TraceId: 0HMSKQ509TAKI:00000002] - Schema: http - Method: GET - Host: localhost:5049 - Path: /author/list - QueryString:  - Client IP: ::1 - RequestBody: 
2023-08-04 14:58:46,087 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - RESPONSE INFO: [TraceId: 0HMSKQ509TAKI:00000002] - Status: 200 - SpentTime: 5 - Response Body: {"success":true,"message":"SUCCESS","data":[{"id":2,"firstname":"Bekzod","lastname":"Toshpulatov","age":0},{"id":3,"firstname":"string","lastname":"string","age":0},{"id":4,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":5,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":6,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":7,"firstname":"string","lastname":"string","age":0},{"id":8,"firstname":"string","lastname":"string","age":0},{"id":9,"firstname":"string","lastname":"string","age":0},{"id":10,"firstname":"ewrew","lastname":"rewrwerwe","age":0},{"id":11,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":12,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":13,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":14,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":15,"firstname":"uheiqwguwehng","lastname":"asfewgew","age":122},{"id":16,"firstname":"string","lastname":"string","age":0},{"id":17,"firstname":"string","lastname":"string","age":0},{"id":18,"firstname":"string","lastname":"string","age":0},{"id":19,"firstname":"string","lastname":"string","age":0},{"id":20,"firstname":"string","lastname":"string","age":0},{"id":21,"firstname":"string","lastname":"string","age":0},{"id":22,"firstname":"string","lastname":"string","age":0},{"id":23,"firstname":"string","lastname":"string","age":0},{"id":24,"firstname":"string","lastname":"string","age":0},{"id":25,"firstname":"string","lastname":"string","age":0}]}
2023-08-04 14:58:48,626 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - REQUEST INFO:  [TraceId: 0HMSKQ509TAKJ:00000001] - Schema: http - Method: GET - Host: localhost:5049 - Path: /author/list - QueryString:  - Client IP: ::1 - RequestBody: 
2023-08-04 14:58:48,632 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - RESPONSE INFO: [TraceId: 0HMSKQ509TAKJ:00000001] - Status: 200 - SpentTime: 6 - Response Body: {"success":true,"message":"SUCCESS","data":[{"id":2,"firstname":"Bekzod","lastname":"Toshpulatov","age":0},{"id":3,"firstname":"string","lastname":"string","age":0},{"id":4,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":5,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":6,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":7,"firstname":"string","lastname":"string","age":0},{"id":8,"firstname":"string","lastname":"string","age":0},{"id":9,"firstname":"string","lastname":"string","age":0},{"id":10,"firstname":"ewrew","lastname":"rewrwerwe","age":0},{"id":11,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":12,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":13,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":14,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":15,"firstname":"uheiqwguwehng","lastname":"asfewgew","age":122},{"id":16,"firstname":"string","lastname":"string","age":0},{"id":17,"firstname":"string","lastname":"string","age":0},{"id":18,"firstname":"string","lastname":"string","age":0},{"id":19,"firstname":"string","lastname":"string","age":0},{"id":20,"firstname":"string","lastname":"string","age":0},{"id":21,"firstname":"string","lastname":"string","age":0},{"id":22,"firstname":"string","lastname":"string","age":0},{"id":23,"firstname":"string","lastname":"string","age":0},{"id":24,"firstname":"string","lastname":"string","age":0},{"id":25,"firstname":"string","lastname":"string","age":0}]}
2023-08-04 14:59:07,510 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - REQUEST INFO:  [TraceId: 0HMSKQ509TAKK:00000001] - Schema: http - Method: GET - Host: localhost:5049 - Path: /swagger/v1/swagger.json - QueryString:  - Client IP: ::1 - RequestBody: 
2023-08-04 14:59:07,518 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - RESPONSE INFO: [TraceId: 0HMSKQ509TAKK:00000001] - Status: 200 - SpentTime: 8 - Response Body: {
  "openapi": "3.0.1",
  "info": {
    "title": "BookStore",
    "version": "1.0"
  },
  "paths": {
    "/author/list": {
      "get": {
        "tags": [
          "Author"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/author/create": {
      "post": {
        "tags": [
          "Author"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorTemplate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorTemplate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorTemplate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/author/get/{id}": {
      "get": {
        "tags": [
          "Author"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/author/update/{id}": {
      "put": {
        "tags": [
          "Author"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorTemplate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorTemplate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorTemplate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/author/delete/{id}": {
      "delete": {
        "tags": [
          "Author"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/book/list": {
      "get": {
        "tags": [
          "Book"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/book/create": {
      "post": {
        "tags": [
          "Book"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "Title": {
                    "type": "string"
                  },
                  "Description": {
                    "type": "string"
                  },
                  "AuthorId": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "ImagePath": {
                    "type": "string"
                  },
                  "Image": {
                    "type": "string",
                    "format": "binary"
                  },
                  "Genres": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "format": "int64"
                    }
                  }
                }
              },
              "encoding": {
                "Title": {
                  "style": "form"
                },
                "Description": {
                  "style": "form"
                },
                "AuthorId": {
                  "style": "form"
                },
                "ImagePath": {
                  "style": "form"
                },
                "Image": {
                  "style": "form"
                },
                "Genres": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/book/get/{id}": {
      "get": {
        "tags": [
          "Book"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/book/update/{id}": {
      "put": {
        "tags": [
          "Book"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "Title": {
                    "type": "string"
                  },
                  "Description": {
                    "type": "string"
                  },
                  "AuthorId": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "ImagePath": {
                    "type": "string"
                  },
                  "Image": {
                    "type": "string",
                    "format": "binary"
                  },
                  "Genres": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "format": "int64"
                    }
                  }
                }
              },
              "encoding": {
                "Title": {
                  "style": "form"
                },
                "Description": {
                  "style": "form"
                },
                "AuthorId": {
                  "style": "form"
                },
                "ImagePath": {
                  "style": "form"
                },
                "Image": {
                  "style": "form"
                },
                "Genres": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/book/delete/{id}": {
      "delete": {
        "tags": [
          "Book"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/genre/list": {
      "get": {
        "tags": [
          "Genre"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/genre/create": {
      "post": {
        "tags": [
          "Genre"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenreTemplate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GenreTemplate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GenreTemplate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/genre/get/{id}": {
      "get": {
        "tags": [
          "Genre"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/genre/update/{id}": {
      "put": {
        "tags": [
          "Genre"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenreTemplate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GenreTemplate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GenreTemplate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/genre/delete/{id}": {
      "delete": {
        "tags": [
          "Genre"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AuthorTemplate": {
        "type": "object",
        "properties": {
          "firstname": {
            "type": "string",
            "nullable": true
          },
          "lastname": {
            "type": "string",
            "nullable": true
          },
          "age": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GenreTemplate": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "minLength": 2,
            "type": "string"
          }
        },
        "additionalProperties": false
      }
    }
  }
}
2023-08-04 14:59:08,484 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - REQUEST INFO:  [TraceId: 0HMSKQ509TAKK:00000002] - Schema: http - Method: GET - Host: localhost:5049 - Path: /swagger/v1/swagger.json - QueryString:  - Client IP: ::1 - RequestBody: 
2023-08-04 14:59:08,491 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - RESPONSE INFO: [TraceId: 0HMSKQ509TAKK:00000002] - Status: 200 - SpentTime: 7 - Response Body: {
  "openapi": "3.0.1",
  "info": {
    "title": "BookStore",
    "version": "1.0"
  },
  "paths": {
    "/author/list": {
      "get": {
        "tags": [
          "Author"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/author/create": {
      "post": {
        "tags": [
          "Author"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorTemplate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorTemplate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorTemplate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/author/get/{id}": {
      "get": {
        "tags": [
          "Author"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/author/update/{id}": {
      "put": {
        "tags": [
          "Author"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorTemplate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorTemplate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorTemplate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/author/delete/{id}": {
      "delete": {
        "tags": [
          "Author"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/book/list": {
      "get": {
        "tags": [
          "Book"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/book/create": {
      "post": {
        "tags": [
          "Book"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "Title": {
                    "type": "string"
                  },
                  "Description": {
                    "type": "string"
                  },
                  "AuthorId": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "ImagePath": {
                    "type": "string"
                  },
                  "Image": {
                    "type": "string",
                    "format": "binary"
                  },
                  "Genres": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "format": "int64"
                    }
                  }
                }
              },
              "encoding": {
                "Title": {
                  "style": "form"
                },
                "Description": {
                  "style": "form"
                },
                "AuthorId": {
                  "style": "form"
                },
                "ImagePath": {
                  "style": "form"
                },
                "Image": {
                  "style": "form"
                },
                "Genres": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/book/get/{id}": {
      "get": {
        "tags": [
          "Book"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/book/update/{id}": {
      "put": {
        "tags": [
          "Book"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "Title": {
                    "type": "string"
                  },
                  "Description": {
                    "type": "string"
                  },
                  "AuthorId": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "ImagePath": {
                    "type": "string"
                  },
                  "Image": {
                    "type": "string",
                    "format": "binary"
                  },
                  "Genres": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "format": "int64"
                    }
                  }
                }
              },
              "encoding": {
                "Title": {
                  "style": "form"
                },
                "Description": {
                  "style": "form"
                },
                "AuthorId": {
                  "style": "form"
                },
                "ImagePath": {
                  "style": "form"
                },
                "Image": {
                  "style": "form"
                },
                "Genres": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/book/delete/{id}": {
      "delete": {
        "tags": [
          "Book"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/genre/list": {
      "get": {
        "tags": [
          "Genre"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/genre/create": {
      "post": {
        "tags": [
          "Genre"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenreTemplate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GenreTemplate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GenreTemplate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/genre/get/{id}": {
      "get": {
        "tags": [
          "Genre"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/genre/update/{id}": {
      "put": {
        "tags": [
          "Genre"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenreTemplate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GenreTemplate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GenreTemplate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/genre/delete/{id}": {
      "delete": {
        "tags": [
          "Genre"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AuthorTemplate": {
        "type": "object",
        "properties": {
          "firstname": {
            "type": "string",
            "nullable": true
          },
          "lastname": {
            "type": "string",
            "nullable": true
          },
          "age": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GenreTemplate": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "minLength": 2,
            "type": "string"
          }
        },
        "additionalProperties": false
      }
    }
  }
}
2023-08-04 14:59:12,001 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - REQUEST INFO:  [TraceId: 0HMSKQ509TAKM:00000001] - Schema: http - Method: GET - Host: localhost:5049 - Path: /swagger/v1/swagger.json - QueryString:  - Client IP: ::1 - RequestBody: 
2023-08-04 14:59:12,007 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - RESPONSE INFO: [TraceId: 0HMSKQ509TAKM:00000001] - Status: 200 - SpentTime: 6 - Response Body: {
  "openapi": "3.0.1",
  "info": {
    "title": "BookStore",
    "version": "1.0"
  },
  "paths": {
    "/author/list": {
      "get": {
        "tags": [
          "Author"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/author/create": {
      "post": {
        "tags": [
          "Author"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorTemplate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorTemplate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorTemplate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/author/get/{id}": {
      "get": {
        "tags": [
          "Author"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/author/update/{id}": {
      "put": {
        "tags": [
          "Author"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorTemplate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorTemplate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorTemplate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/author/delete/{id}": {
      "delete": {
        "tags": [
          "Author"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/book/list": {
      "get": {
        "tags": [
          "Book"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/book/create": {
      "post": {
        "tags": [
          "Book"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "Title": {
                    "type": "string"
                  },
                  "Description": {
                    "type": "string"
                  },
                  "AuthorId": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "ImagePath": {
                    "type": "string"
                  },
                  "Image": {
                    "type": "string",
                    "format": "binary"
                  },
                  "Genres": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "format": "int64"
                    }
                  }
                }
              },
              "encoding": {
                "Title": {
                  "style": "form"
                },
                "Description": {
                  "style": "form"
                },
                "AuthorId": {
                  "style": "form"
                },
                "ImagePath": {
                  "style": "form"
                },
                "Image": {
                  "style": "form"
                },
                "Genres": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/book/get/{id}": {
      "get": {
        "tags": [
          "Book"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/book/update/{id}": {
      "put": {
        "tags": [
          "Book"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "Title": {
                    "type": "string"
                  },
                  "Description": {
                    "type": "string"
                  },
                  "AuthorId": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "ImagePath": {
                    "type": "string"
                  },
                  "Image": {
                    "type": "string",
                    "format": "binary"
                  },
                  "Genres": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "format": "int64"
                    }
                  }
                }
              },
              "encoding": {
                "Title": {
                  "style": "form"
                },
                "Description": {
                  "style": "form"
                },
                "AuthorId": {
                  "style": "form"
                },
                "ImagePath": {
                  "style": "form"
                },
                "Image": {
                  "style": "form"
                },
                "Genres": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/book/delete/{id}": {
      "delete": {
        "tags": [
          "Book"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/genre/list": {
      "get": {
        "tags": [
          "Genre"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/genre/create": {
      "post": {
        "tags": [
          "Genre"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenreTemplate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GenreTemplate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GenreTemplate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/genre/get/{id}": {
      "get": {
        "tags": [
          "Genre"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/genre/update/{id}": {
      "put": {
        "tags": [
          "Genre"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenreTemplate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GenreTemplate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GenreTemplate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/genre/delete/{id}": {
      "delete": {
        "tags": [
          "Genre"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AuthorTemplate": {
        "type": "object",
        "properties": {
          "firstname": {
            "type": "string",
            "nullable": true
          },
          "lastname": {
            "type": "string",
            "nullable": true
          },
          "age": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GenreTemplate": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "minLength": 2,
            "type": "string"
          }
        },
        "additionalProperties": false
      }
    }
  }
}
2023-08-04 14:59:14,118 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - REQUEST INFO:  [TraceId: 0HMSKQ509TAKM:00000002] - Schema: http - Method: GET - Host: localhost:5049 - Path: /swagger/v1/swagger.json - QueryString:  - Client IP: ::1 - RequestBody: 
2023-08-04 14:59:14,123 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - RESPONSE INFO: [TraceId: 0HMSKQ509TAKM:00000002] - Status: 200 - SpentTime: 4 - Response Body: {
  "openapi": "3.0.1",
  "info": {
    "title": "BookStore",
    "version": "1.0"
  },
  "paths": {
    "/author/list": {
      "get": {
        "tags": [
          "Author"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/author/create": {
      "post": {
        "tags": [
          "Author"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorTemplate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorTemplate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorTemplate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/author/get/{id}": {
      "get": {
        "tags": [
          "Author"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/author/update/{id}": {
      "put": {
        "tags": [
          "Author"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorTemplate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorTemplate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorTemplate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/author/delete/{id}": {
      "delete": {
        "tags": [
          "Author"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/book/list": {
      "get": {
        "tags": [
          "Book"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/book/create": {
      "post": {
        "tags": [
          "Book"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "Title": {
                    "type": "string"
                  },
                  "Description": {
                    "type": "string"
                  },
                  "AuthorId": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "ImagePath": {
                    "type": "string"
                  },
                  "Image": {
                    "type": "string",
                    "format": "binary"
                  },
                  "Genres": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "format": "int64"
                    }
                  }
                }
              },
              "encoding": {
                "Title": {
                  "style": "form"
                },
                "Description": {
                  "style": "form"
                },
                "AuthorId": {
                  "style": "form"
                },
                "ImagePath": {
                  "style": "form"
                },
                "Image": {
                  "style": "form"
                },
                "Genres": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/book/get/{id}": {
      "get": {
        "tags": [
          "Book"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/book/update/{id}": {
      "put": {
        "tags": [
          "Book"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "Title": {
                    "type": "string"
                  },
                  "Description": {
                    "type": "string"
                  },
                  "AuthorId": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "ImagePath": {
                    "type": "string"
                  },
                  "Image": {
                    "type": "string",
                    "format": "binary"
                  },
                  "Genres": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "format": "int64"
                    }
                  }
                }
              },
              "encoding": {
                "Title": {
                  "style": "form"
                },
                "Description": {
                  "style": "form"
                },
                "AuthorId": {
                  "style": "form"
                },
                "ImagePath": {
                  "style": "form"
                },
                "Image": {
                  "style": "form"
                },
                "Genres": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/book/delete/{id}": {
      "delete": {
        "tags": [
          "Book"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/genre/list": {
      "get": {
        "tags": [
          "Genre"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/genre/create": {
      "post": {
        "tags": [
          "Genre"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenreTemplate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GenreTemplate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GenreTemplate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/genre/get/{id}": {
      "get": {
        "tags": [
          "Genre"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/genre/update/{id}": {
      "put": {
        "tags": [
          "Genre"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenreTemplate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GenreTemplate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GenreTemplate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/genre/delete/{id}": {
      "delete": {
        "tags": [
          "Genre"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AuthorTemplate": {
        "type": "object",
        "properties": {
          "firstname": {
            "type": "string",
            "nullable": true
          },
          "lastname": {
            "type": "string",
            "nullable": true
          },
          "age": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GenreTemplate": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "minLength": 2,
            "type": "string"
          }
        },
        "additionalProperties": false
      }
    }
  }
}
2023-08-04 15:00:16,678 [16] INFO  Microsoft.Hosting.Lifetime - Application is shutting down...
2023-08-04 15:06:27,066 [1] INFO  Microsoft.Hosting.Lifetime - Now listening on: http://localhost:5049
2023-08-04 15:06:27,092 [1] INFO  Microsoft.Hosting.Lifetime - Application started. Press Ctrl+C to shut down.
2023-08-04 15:06:27,092 [1] INFO  Microsoft.Hosting.Lifetime - Hosting environment: Development
2023-08-04 15:06:27,093 [1] INFO  Microsoft.Hosting.Lifetime - Content root path: P:\C#\BookStore\BookStore
2023-08-04 15:06:38,505 [3] INFO  Microsoft.Hosting.Lifetime - Application is shutting down...
2023-08-04 15:06:42,690 [1] INFO  Microsoft.Hosting.Lifetime - Now listening on: http://localhost:5049
2023-08-04 15:06:42,721 [1] INFO  Microsoft.Hosting.Lifetime - Application started. Press Ctrl+C to shut down.
2023-08-04 15:06:42,722 [1] INFO  Microsoft.Hosting.Lifetime - Hosting environment: Development
2023-08-04 15:06:42,723 [1] INFO  Microsoft.Hosting.Lifetime - Content root path: P:\C#\BookStore\BookStore
2023-08-04 15:06:49,104 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - REQUEST INFO:  [TraceId: 0HMSKQA0BVCNL:00000003] - Schema: http - Method: GET - Host: localhost:5049 - Path: /author/list - QueryString:  - Client IP: ::1 - RequestBody: 
2023-08-04 15:06:51,459 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - RESPONSE INFO: [TraceId: 0HMSKQA0BVCNL:00000003] - Status: 200 - SpentTime: 2359 - Response Body: {"success":true,"message":"SUCCESS","data":[{"id":2,"firstname":"Bekzod","lastname":"Toshpulatov","age":0},{"id":3,"firstname":"string","lastname":"string","age":0},{"id":4,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":5,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":6,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":7,"firstname":"string","lastname":"string","age":0},{"id":8,"firstname":"string","lastname":"string","age":0},{"id":9,"firstname":"string","lastname":"string","age":0},{"id":10,"firstname":"ewrew","lastname":"rewrwerwe","age":0},{"id":11,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":12,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":13,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":14,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":15,"firstname":"uheiqwguwehng","lastname":"asfewgew","age":122},{"id":16,"firstname":"string","lastname":"string","age":0},{"id":17,"firstname":"string","lastname":"string","age":0},{"id":18,"firstname":"string","lastname":"string","age":0},{"id":19,"firstname":"string","lastname":"string","age":0},{"id":20,"firstname":"string","lastname":"string","age":0},{"id":21,"firstname":"string","lastname":"string","age":0},{"id":22,"firstname":"string","lastname":"string","age":0},{"id":23,"firstname":"string","lastname":"string","age":0},{"id":24,"firstname":"string","lastname":"string","age":0},{"id":25,"firstname":"string","lastname":"string","age":0}]}
2023-08-04 15:12:43,862 [3] INFO  Microsoft.Hosting.Lifetime - Application is shutting down...
2023-08-04 15:51:49,614 [1] INFO  Microsoft.Hosting.Lifetime - Now listening on: http://localhost:5049
2023-08-04 15:51:49,629 [1] INFO  Microsoft.Hosting.Lifetime - Application started. Press Ctrl+C to shut down.
2023-08-04 15:51:49,630 [1] INFO  Microsoft.Hosting.Lifetime - Hosting environment: Development
2023-08-04 15:51:49,630 [1] INFO  Microsoft.Hosting.Lifetime - Content root path: P:\C#\BookStore\BookStore
2023-08-04 15:54:25,395 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - REQUEST INFO:  [TraceId: 0HMSKR3736EL8:00000001] - Schema: http - Method: GET - Host: localhost:5049 - Path: /author/list - QueryString:  - Client IP: ::1 - RequestBody: 
2023-08-04 15:54:27,315 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - RESPONSE INFO: [TraceId: 0HMSKR3736EL8:00000001] - Status: 200 - SpentTime: 1927 - Response Body: {"success":true,"message":"SUCCESS","data":[{"id":2,"firstname":"Bekzod","lastname":"Toshpulatov","age":0},{"id":3,"firstname":"string","lastname":"string","age":0},{"id":4,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":5,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":6,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":7,"firstname":"string","lastname":"string","age":0},{"id":8,"firstname":"string","lastname":"string","age":0},{"id":9,"firstname":"string","lastname":"string","age":0},{"id":10,"firstname":"ewrew","lastname":"rewrwerwe","age":0},{"id":11,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":12,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":13,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":14,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":15,"firstname":"uheiqwguwehng","lastname":"asfewgew","age":122},{"id":16,"firstname":"string","lastname":"string","age":0},{"id":17,"firstname":"string","lastname":"string","age":0},{"id":18,"firstname":"string","lastname":"string","age":0},{"id":19,"firstname":"string","lastname":"string","age":0},{"id":20,"firstname":"string","lastname":"string","age":0},{"id":21,"firstname":"string","lastname":"string","age":0},{"id":22,"firstname":"string","lastname":"string","age":0},{"id":23,"firstname":"string","lastname":"string","age":0},{"id":24,"firstname":"string","lastname":"string","age":0},{"id":25,"firstname":"string","lastname":"string","age":0}]}
2023-08-04 15:54:34,128 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - REQUEST INFO:  [TraceId: 0HMSKR3736EL9:00000001] - Schema: http - Method: GET - Host: localhost:5049 - Path: /book/list - QueryString:  - Client IP: ::1 - RequestBody: 
2023-08-04 15:54:34,478 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - RESPONSE INFO: [TraceId: 0HMSKR3736EL9:00000001] - Status: 200 - SpentTime: 350 - Response Body: {"success":true,"message":"SUCCESS","data":[{"id":13,"title":"safdsfaffqwe","description":"qwegwegqwe","createdAt":"2023-08-02T04:37:41.115083Z","imagePath":"2177e58b-c547-4669-88e1-76bf91344167.jpg","authorId":3,"genres":[{"id":1,"name":"Comedy"},{"id":2,"name":"UJAS"},{"id":3,"name":"Romantic"}]},{"id":14,"title":"Kino","description":"Bookq fernfunreubfreubgreghbre hgjrbhgeb rhbgreb gr","createdAt":"2023-07-26T12:02:04.479141Z","imagePath":null,"authorId":3,"genres":[]},{"id":15,"title":"neoline","description":"neoline","createdAt":"2023-07-26T12:04:38.284355Z","imagePath":null,"authorId":2,"genres":[]},{"id":17,"title":"Book With Image","description":"Hello I Implemented Image Upload","createdAt":"2023-08-01T13:43:44.005005Z","imagePath":null,"authorId":2,"genres":[{"id":2,"name":"UJAS"},{"id":4,"name":"New"}]},{"id":18,"title":"Book With Image 2","description":"Hello I Implemented Image Upload 2","createdAt":"2023-08-01T13:45:09.156436Z","imagePath":null,"authorId":2,"genres":[{"id":2,"name":"UJAS"},{"id":4,"name":"New"}]},{"id":19,"title":"Book With Image 3","description":"Hello I Implemented Image Upload 3","createdAt":"2023-08-01T13:46:44.524278Z","imagePath":null,"authorId":2,"genres":[{"id":2,"name":"UJAS"},{"id":4,"name":"New"}]},{"id":20,"title":"Book With Image 4","description":"Hello I Implemented Image Upload 4","createdAt":"2023-08-01T13:49:00.951604Z","imagePath":null,"authorId":2,"genres":[{"id":2,"name":"UJAS"},{"id":4,"name":"New"}]},{"id":21,"title":"Book With Image 4","description":"Hello I Implemented Image Upload 4","createdAt":"2023-08-01T13:51:12.089066Z","imagePath":"67dbee6b-1b22-4ee8-9ff5-a482250e8cf9.jpg","authorId":2,"genres":[{"id":2,"name":"UJAS"},{"id":4,"name":"New"}]},{"id":53,"title":"bekki","description":"asfy ihfugweufygwyeh iwegbufjweigfewjfigweoifh uejopivfuwe","createdAt":"2023-08-03T05:51:59.689751Z","imagePath":"17045a91-d619-4917-95f4-92bedf2456cc.jpg","authorId":2,"genres":[{"id":3,"name":"Romantic"},{"id":4,"name":"New"}]}]}
2023-08-04 15:54:49,377 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - REQUEST INFO:  [TraceId: 0HMSKR3736ELA:00000001] - Schema: http - Method: GET - Host: localhost:5049 - Path: /genre/list - QueryString:  - Client IP: ::1 - RequestBody: 
2023-08-04 15:54:49,455 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - RESPONSE INFO: [TraceId: 0HMSKR3736ELA:00000001] - Status: 200 - SpentTime: 78 - Response Body: {"success":true,"message":"SUCCESS","data":[{"id":1,"name":"Comedy"},{"id":3,"name":"Romantic"},{"id":2,"name":"UJAS"},{"id":4,"name":"New"},{"id":6,"name":"nma gap"},{"id":7,"name":"asdasds"}]}
2023-08-04 15:54:59,133 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - REQUEST INFO:  [TraceId: 0HMSKR3736ELB:00000001] - Schema: http - Method: POST - Host: localhost:5049 - Path: /genre/create - QueryString:  - Client IP: ::1 - RequestBody: { "name": "string"}
2023-08-04 15:54:59,389 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - RESPONSE INFO: [TraceId: 0HMSKR3736ELB:00000001] - Status: 200 - SpentTime: 286 - Response Body: {"success":true,"message":"GENRE CREATED SUCCESSFULLY","data":{"id":8,"name":"string"}}
2023-08-04 15:55:03,904 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - REQUEST INFO:  [TraceId: 0HMSKR3736ELB:00000002] - Schema: http - Method: GET - Host: localhost:5049 - Path: /genre/list - QueryString:  - Client IP: ::1 - RequestBody: 
2023-08-04 15:55:03,909 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - RESPONSE INFO: [TraceId: 0HMSKR3736ELB:00000002] - Status: 200 - SpentTime: 4 - Response Body: {"success":true,"message":"SUCCESS","data":[{"id":1,"name":"Comedy"},{"id":3,"name":"Romantic"},{"id":2,"name":"UJAS"},{"id":4,"name":"New"},{"id":6,"name":"nma gap"},{"id":7,"name":"asdasds"},{"id":8,"name":"string"}]}
2023-08-04 15:55:30,125 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - REQUEST INFO:  [TraceId: 0HMSKR3736ELC:00000001] - Schema: http - Method: DELETE - Host: localhost:5049 - Path: /author/delete/13 - QueryString:  - Client IP: ::1 - RequestBody: 
2023-08-04 15:55:30,212 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - RESPONSE INFO: [TraceId: 0HMSKR3736ELC:00000001] - Status: 200 - SpentTime: 87 - Response Body: {"success":true,"message":"AUTHOR DELETED SUCCESSFULLY","data":null}
2023-08-04 15:55:38,726 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - REQUEST INFO:  [TraceId: 0HMSKR3736ELD:00000001] - Schema: http - Method: GET - Host: localhost:5049 - Path: /author/list - QueryString:  - Client IP: ::1 - RequestBody: 
2023-08-04 15:55:38,732 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - RESPONSE INFO: [TraceId: 0HMSKR3736ELD:00000001] - Status: 200 - SpentTime: 5 - Response Body: {"success":true,"message":"SUCCESS","data":[{"id":2,"firstname":"Bekzod","lastname":"Toshpulatov","age":0},{"id":3,"firstname":"string","lastname":"string","age":0},{"id":4,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":5,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":6,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":7,"firstname":"string","lastname":"string","age":0},{"id":8,"firstname":"string","lastname":"string","age":0},{"id":9,"firstname":"string","lastname":"string","age":0},{"id":10,"firstname":"ewrew","lastname":"rewrwerwe","age":0},{"id":11,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":12,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":14,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":15,"firstname":"uheiqwguwehng","lastname":"asfewgew","age":122},{"id":16,"firstname":"string","lastname":"string","age":0},{"id":17,"firstname":"string","lastname":"string","age":0},{"id":18,"firstname":"string","lastname":"string","age":0},{"id":19,"firstname":"string","lastname":"string","age":0},{"id":20,"firstname":"string","lastname":"string","age":0},{"id":21,"firstname":"string","lastname":"string","age":0},{"id":22,"firstname":"string","lastname":"string","age":0},{"id":23,"firstname":"string","lastname":"string","age":0},{"id":24,"firstname":"string","lastname":"string","age":0},{"id":25,"firstname":"string","lastname":"string","age":0}]}
2023-08-04 15:56:32,348 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - REQUEST INFO:  [TraceId: 0HMSKR3736ELG:00000001] - Schema: http - Method: GET - Host: localhost:5049 - Path: /genre/list - QueryString:  - Client IP: ::1 - RequestBody: 
2023-08-04 15:56:32,352 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - RESPONSE INFO: [TraceId: 0HMSKR3736ELG:00000001] - Status: 200 - SpentTime: 3 - Response Body: {"success":true,"message":"SUCCESS","data":[{"id":1,"name":"Comedy"},{"id":3,"name":"Romantic"},{"id":2,"name":"UJAS"},{"id":4,"name":"New"},{"id":6,"name":"nma gap"},{"id":7,"name":"asdasds"},{"id":8,"name":"string"}]}
2023-08-04 15:56:54,428 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - REQUEST INFO:  [TraceId: 0HMSKR3736ELH:00000001] - Schema: http - Method: GET - Host: localhost:5049 - Path: /genre/get/7 - QueryString:  - Client IP: ::1 - RequestBody: 
2023-08-04 15:56:54,446 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - RESPONSE INFO: [TraceId: 0HMSKR3736ELH:00000001] - Status: 200 - SpentTime: 18 - Response Body: {"success":true,"message":"SUCCESS","data":{"id":7,"name":"asdasds"}}
2023-08-04 15:58:04,403 [21] INFO  Microsoft.Hosting.Lifetime - Application is shutting down...
2023-08-04 15:58:10,307 [1] INFO  Microsoft.Hosting.Lifetime - Now listening on: http://localhost:5049
2023-08-04 15:58:10,320 [1] INFO  Microsoft.Hosting.Lifetime - Application started. Press Ctrl+C to shut down.
2023-08-04 15:58:10,320 [1] INFO  Microsoft.Hosting.Lifetime - Hosting environment: Development
2023-08-04 15:58:10,320 [1] INFO  Microsoft.Hosting.Lifetime - Content root path: P:\C#\BookStore\BookStore
2023-08-04 15:58:14,350 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - REQUEST INFO:  [TraceId: 0HMSKR6OL01EC:00000001] - Schema: http - Method: GET - Host: localhost:5049 - Path: /author/list - QueryString:  - Client IP: ::1 - RequestBody: 
2023-08-04 15:58:16,013 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - RESPONSE INFO: [TraceId: 0HMSKR6OL01EC:00000001] - Status: 200 - SpentTime: 1673ms - Response Body: {"success":true,"message":"SUCCESS","data":[{"id":2,"firstname":"Bekzod","lastname":"Toshpulatov","age":0},{"id":3,"firstname":"string","lastname":"string","age":0},{"id":4,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":5,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":6,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":7,"firstname":"string","lastname":"string","age":0},{"id":8,"firstname":"string","lastname":"string","age":0},{"id":9,"firstname":"string","lastname":"string","age":0},{"id":10,"firstname":"ewrew","lastname":"rewrwerwe","age":0},{"id":11,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":12,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":14,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":15,"firstname":"uheiqwguwehng","lastname":"asfewgew","age":122},{"id":16,"firstname":"string","lastname":"string","age":0},{"id":17,"firstname":"string","lastname":"string","age":0},{"id":18,"firstname":"string","lastname":"string","age":0},{"id":19,"firstname":"string","lastname":"string","age":0},{"id":20,"firstname":"string","lastname":"string","age":0},{"id":21,"firstname":"string","lastname":"string","age":0},{"id":22,"firstname":"string","lastname":"string","age":0},{"id":23,"firstname":"string","lastname":"string","age":0},{"id":24,"firstname":"string","lastname":"string","age":0},{"id":25,"firstname":"string","lastname":"string","age":0}]}
2023-08-04 15:58:43,511 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - REQUEST INFO:  [TraceId: 0HMSKR6OL01ED:00000001] - Schema: http - Method: GET - Host: localhost:5049 - Path: /author/list - QueryString:  - Client IP: ::1 - RequestBody: 
2023-08-04 15:58:43,540 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - RESPONSE INFO: [TraceId: 0HMSKR6OL01ED:00000001] - Status: 200 - SpentTime: 29ms - Response Body: {"success":true,"message":"SUCCESS","data":[{"id":2,"firstname":"Bekzod","lastname":"Toshpulatov","age":0},{"id":3,"firstname":"string","lastname":"string","age":0},{"id":4,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":5,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":6,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":7,"firstname":"string","lastname":"string","age":0},{"id":8,"firstname":"string","lastname":"string","age":0},{"id":9,"firstname":"string","lastname":"string","age":0},{"id":10,"firstname":"ewrew","lastname":"rewrwerwe","age":0},{"id":11,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":12,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":14,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":15,"firstname":"uheiqwguwehng","lastname":"asfewgew","age":122},{"id":16,"firstname":"string","lastname":"string","age":0},{"id":17,"firstname":"string","lastname":"string","age":0},{"id":18,"firstname":"string","lastname":"string","age":0},{"id":19,"firstname":"string","lastname":"string","age":0},{"id":20,"firstname":"string","lastname":"string","age":0},{"id":21,"firstname":"string","lastname":"string","age":0},{"id":22,"firstname":"string","lastname":"string","age":0},{"id":23,"firstname":"string","lastname":"string","age":0},{"id":24,"firstname":"string","lastname":"string","age":0},{"id":25,"firstname":"string","lastname":"string","age":0}]}
2023-08-04 16:00:05,461 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - REQUEST INFO:  [TraceId: 0HMSKR6OL01EE:00000001] - Schema: http - Method: POST - Host: localhost:5049 - Path: /author/create - QueryString:  - Client IP: ::1 - RequestBody: { "firstname": "string", "lastname": "string", "age": 0}
2023-08-04 16:00:05,890 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - RESPONSE INFO: [TraceId: 0HMSKR6OL01EE:00000001] - Status: 200 - SpentTime: 432ms - Response Body: {"success":true,"message":"AUTHOR SUCCESSFULLY CREATED","data":{"id":26,"firstname":"string","lastname":"string","age":0}}
2023-08-04 16:00:44,132 [17] INFO  Microsoft.Hosting.Lifetime - Application is shutting down...
2023-08-04 16:00:55,585 [1] INFO  Microsoft.Hosting.Lifetime - Now listening on: http://localhost:5049
2023-08-04 16:00:55,641 [1] INFO  Microsoft.Hosting.Lifetime - Application started. Press Ctrl+C to shut down.
2023-08-04 16:00:55,642 [1] INFO  Microsoft.Hosting.Lifetime - Hosting environment: Development
2023-08-04 16:00:55,642 [1] INFO  Microsoft.Hosting.Lifetime - Content root path: P:\C#\BookStore\BookStore
2023-08-04 16:03:19,438 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - REQUEST INFO:  [TraceId: 0HMSKR89Q373P:00000001] - Schema: http - Method: POST - Host: localhost:5049 - Path: /author/create - QueryString:  - Client IP: ::1 - RequestBody: { "firstname": "string", "lastname": "string", "age": 0}
2023-08-04 16:03:23,964 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - RESPONSE INFO: [TraceId: 0HMSKR89Q373P:00000001] - Status: 200 - SpentTime: 98148ms - Response Body: {"success":true,"message":"AUTHOR SUCCESSFULLY CREATED","data":{"id":27,"firstname":"string","lastname":"string","age":0}}
2023-08-04 16:04:58,495 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - REQUEST INFO:  [TraceId: 0HMSKR89Q3743:00000001] - Schema: http - Method: GET - Host: 127.0.0.1:5049 - Path: /author/list - QueryString:  - Client IP: 127.0.0.1 - RequestBody: 
2023-08-04 16:04:59,548 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - RESPONSE INFO: [TraceId: 0HMSKR89Q3743:00000001] - Status: 200 - SpentTime: 1054ms - Response Body: {"success":true,"message":"SUCCESS","data":[{"id":2,"firstname":"Bekzod","lastname":"Toshpulatov","age":0},{"id":3,"firstname":"string","lastname":"string","age":0},{"id":4,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":5,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":6,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":7,"firstname":"string","lastname":"string","age":0},{"id":8,"firstname":"string","lastname":"string","age":0},{"id":9,"firstname":"string","lastname":"string","age":0},{"id":10,"firstname":"ewrew","lastname":"rewrwerwe","age":0},{"id":11,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":12,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":14,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":15,"firstname":"uheiqwguwehng","lastname":"asfewgew","age":122},{"id":16,"firstname":"string","lastname":"string","age":0},{"id":17,"firstname":"string","lastname":"string","age":0},{"id":18,"firstname":"string","lastname":"string","age":0},{"id":19,"firstname":"string","lastname":"string","age":0},{"id":20,"firstname":"string","lastname":"string","age":0},{"id":21,"firstname":"string","lastname":"string","age":0},{"id":22,"firstname":"string","lastname":"string","age":0},{"id":23,"firstname":"string","lastname":"string","age":0},{"id":24,"firstname":"string","lastname":"string","age":0},{"id":25,"firstname":"string","lastname":"string","age":0},{"id":26,"firstname":"string","lastname":"string","age":0},{"id":27,"firstname":"string","lastname":"string","age":0}]}
2023-08-04 16:05:51,191 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - REQUEST INFO:  [TraceId: 0HMSKR89Q3744:00000001] - Schema: http - Method: GET - Host: 127.0.0.1:5049 - Path: /author/list - QueryString:  - Client IP: 127.0.0.1 - RequestBody: 
2023-08-04 16:05:51,220 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - RESPONSE INFO: [TraceId: 0HMSKR89Q3744:00000001] - Status: 200 - SpentTime: 28ms - Response Body: {"success":true,"message":"SUCCESS","data":[{"id":2,"firstname":"Bekzod","lastname":"Toshpulatov","age":0},{"id":3,"firstname":"string","lastname":"string","age":0},{"id":4,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":5,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":6,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":7,"firstname":"string","lastname":"string","age":0},{"id":8,"firstname":"string","lastname":"string","age":0},{"id":9,"firstname":"string","lastname":"string","age":0},{"id":10,"firstname":"ewrew","lastname":"rewrwerwe","age":0},{"id":11,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":12,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":14,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":15,"firstname":"uheiqwguwehng","lastname":"asfewgew","age":122},{"id":16,"firstname":"string","lastname":"string","age":0},{"id":17,"firstname":"string","lastname":"string","age":0},{"id":18,"firstname":"string","lastname":"string","age":0},{"id":19,"firstname":"string","lastname":"string","age":0},{"id":20,"firstname":"string","lastname":"string","age":0},{"id":21,"firstname":"string","lastname":"string","age":0},{"id":22,"firstname":"string","lastname":"string","age":0},{"id":23,"firstname":"string","lastname":"string","age":0},{"id":24,"firstname":"string","lastname":"string","age":0},{"id":25,"firstname":"string","lastname":"string","age":0},{"id":26,"firstname":"string","lastname":"string","age":0},{"id":27,"firstname":"string","lastname":"string","age":0}]}
2023-08-04 16:06:22,656 [1] INFO  Microsoft.Hosting.Lifetime - Now listening on: http://localhost:5049
2023-08-04 16:06:22,690 [1] INFO  Microsoft.Hosting.Lifetime - Application started. Press Ctrl+C to shut down.
2023-08-04 16:06:22,691 [1] INFO  Microsoft.Hosting.Lifetime - Hosting environment: Development
2023-08-04 16:06:22,691 [1] INFO  Microsoft.Hosting.Lifetime - Content root path: P:\C#\BookStore\BookStore
2023-08-04 16:06:25,988 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - REQUEST INFO:  [TraceId: 0HMSKRBBBJIGL:00000001] - Schema: http - Method: GET - Host: 127.0.0.1:5049 - Path: /author/list - QueryString:  - Client IP: 127.0.0.1 - RequestBody: 
2023-08-04 16:06:28,747 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - RESPONSE INFO: [TraceId: 0HMSKRBBBJIGL:00000001] - Status: 200 - SpentTime: 2776ms - Response Body: {"success":true,"message":"SUCCESS","data":[{"id":2,"firstname":"Bekzod","lastname":"Toshpulatov","age":0},{"id":3,"firstname":"string","lastname":"string","age":0},{"id":4,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":5,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":6,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":7,"firstname":"string","lastname":"string","age":0},{"id":8,"firstname":"string","lastname":"string","age":0},{"id":9,"firstname":"string","lastname":"string","age":0},{"id":10,"firstname":"ewrew","lastname":"rewrwerwe","age":0},{"id":11,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":12,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":14,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":15,"firstname":"uheiqwguwehng","lastname":"asfewgew","age":122},{"id":16,"firstname":"string","lastname":"string","age":0},{"id":17,"firstname":"string","lastname":"string","age":0},{"id":18,"firstname":"string","lastname":"string","age":0},{"id":19,"firstname":"string","lastname":"string","age":0},{"id":20,"firstname":"string","lastname":"string","age":0},{"id":21,"firstname":"string","lastname":"string","age":0},{"id":22,"firstname":"string","lastname":"string","age":0},{"id":23,"firstname":"string","lastname":"string","age":0},{"id":24,"firstname":"string","lastname":"string","age":0},{"id":25,"firstname":"string","lastname":"string","age":0},{"id":26,"firstname":"string","lastname":"string","age":0},{"id":27,"firstname":"string","lastname":"string","age":0}]}
2023-08-04 16:06:36,880 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - REQUEST INFO:  [TraceId: 0HMSKRBBBJIGM:00000001] - Schema: http - Method: GET - Host: 127.0.0.1:5049 - Path: /author/list - QueryString:  - Client IP: 127.0.0.1 - RequestBody: 
2023-08-04 16:06:36,923 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - RESPONSE INFO: [TraceId: 0HMSKRBBBJIGM:00000001] - Status: 200 - SpentTime: 44ms - Response Body: {"success":true,"message":"SUCCESS","data":[{"id":2,"firstname":"Bekzod","lastname":"Toshpulatov","age":0},{"id":3,"firstname":"string","lastname":"string","age":0},{"id":4,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":5,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":6,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":7,"firstname":"string","lastname":"string","age":0},{"id":8,"firstname":"string","lastname":"string","age":0},{"id":9,"firstname":"string","lastname":"string","age":0},{"id":10,"firstname":"ewrew","lastname":"rewrwerwe","age":0},{"id":11,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":12,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":14,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":15,"firstname":"uheiqwguwehng","lastname":"asfewgew","age":122},{"id":16,"firstname":"string","lastname":"string","age":0},{"id":17,"firstname":"string","lastname":"string","age":0},{"id":18,"firstname":"string","lastname":"string","age":0},{"id":19,"firstname":"string","lastname":"string","age":0},{"id":20,"firstname":"string","lastname":"string","age":0},{"id":21,"firstname":"string","lastname":"string","age":0},{"id":22,"firstname":"string","lastname":"string","age":0},{"id":23,"firstname":"string","lastname":"string","age":0},{"id":24,"firstname":"string","lastname":"string","age":0},{"id":25,"firstname":"string","lastname":"string","age":0},{"id":26,"firstname":"string","lastname":"string","age":0},{"id":27,"firstname":"string","lastname":"string","age":0}]}
2023-08-04 16:06:57,892 [1] INFO  Microsoft.Hosting.Lifetime - Now listening on: http://localhost:5049
2023-08-04 16:06:57,906 [1] INFO  Microsoft.Hosting.Lifetime - Application started. Press Ctrl+C to shut down.
2023-08-04 16:06:57,906 [1] INFO  Microsoft.Hosting.Lifetime - Hosting environment: Development
2023-08-04 16:06:57,906 [1] INFO  Microsoft.Hosting.Lifetime - Content root path: P:\C#\BookStore\BookStore
2023-08-04 16:07:15,934 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - REQUEST INFO:  [TraceId: 0HMSKRBLR3B6Q:00000001] - Schema: http - Method: GET - Host: localhost:5049 - Path: /author/list - QueryString:  - Client IP: ::1 - RequestBody: 
2023-08-04 16:07:18,322 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - RESPONSE INFO: [TraceId: 0HMSKRBLR3B6Q:00000001] - Status: 200 - SpentTime: 2406ms - Response Body: {"success":true,"message":"SUCCESS","data":[{"id":2,"firstname":"Bekzod","lastname":"Toshpulatov","age":0},{"id":3,"firstname":"string","lastname":"string","age":0},{"id":4,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":5,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":6,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":7,"firstname":"string","lastname":"string","age":0},{"id":8,"firstname":"string","lastname":"string","age":0},{"id":9,"firstname":"string","lastname":"string","age":0},{"id":10,"firstname":"ewrew","lastname":"rewrwerwe","age":0},{"id":11,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":12,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":14,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":15,"firstname":"uheiqwguwehng","lastname":"asfewgew","age":122},{"id":16,"firstname":"string","lastname":"string","age":0},{"id":17,"firstname":"string","lastname":"string","age":0},{"id":18,"firstname":"string","lastname":"string","age":0},{"id":19,"firstname":"string","lastname":"string","age":0},{"id":20,"firstname":"string","lastname":"string","age":0},{"id":21,"firstname":"string","lastname":"string","age":0},{"id":22,"firstname":"string","lastname":"string","age":0},{"id":23,"firstname":"string","lastname":"string","age":0},{"id":24,"firstname":"string","lastname":"string","age":0},{"id":25,"firstname":"string","lastname":"string","age":0},{"id":26,"firstname":"string","lastname":"string","age":0},{"id":27,"firstname":"string","lastname":"string","age":0}]}
2023-08-04 16:07:45,076 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - REQUEST INFO:  [TraceId: 0HMSKRBLR3B6R:00000001] - Schema: http - Method: GET - Host: localhost:5049 - Path: /author/list - QueryString:  - Client IP: ::1 - RequestBody: 
2023-08-04 16:07:45,177 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - RESPONSE INFO: [TraceId: 0HMSKRBLR3B6R:00000001] - Status: 200 - SpentTime: 101ms - Response Body: {"success":true,"message":"SUCCESS","data":[{"id":2,"firstname":"Bekzod","lastname":"Toshpulatov","age":0},{"id":3,"firstname":"string","lastname":"string","age":0},{"id":4,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":5,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":6,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":7,"firstname":"string","lastname":"string","age":0},{"id":8,"firstname":"string","lastname":"string","age":0},{"id":9,"firstname":"string","lastname":"string","age":0},{"id":10,"firstname":"ewrew","lastname":"rewrwerwe","age":0},{"id":11,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":12,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":14,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":15,"firstname":"uheiqwguwehng","lastname":"asfewgew","age":122},{"id":16,"firstname":"string","lastname":"string","age":0},{"id":17,"firstname":"string","lastname":"string","age":0},{"id":18,"firstname":"string","lastname":"string","age":0},{"id":19,"firstname":"string","lastname":"string","age":0},{"id":20,"firstname":"string","lastname":"string","age":0},{"id":21,"firstname":"string","lastname":"string","age":0},{"id":22,"firstname":"string","lastname":"string","age":0},{"id":23,"firstname":"string","lastname":"string","age":0},{"id":24,"firstname":"string","lastname":"string","age":0},{"id":25,"firstname":"string","lastname":"string","age":0},{"id":26,"firstname":"string","lastname":"string","age":0},{"id":27,"firstname":"string","lastname":"string","age":0}]}
2023-08-04 16:07:54,131 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - REQUEST INFO:  [TraceId: 0HMSKRBLR3B6S:00000001] - Schema: http - Method: GET - Host: localhost:5049 - Path: /author/list - QueryString:  - Client IP: ::1 - RequestBody: 
2023-08-04 16:07:54,335 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - RESPONSE INFO: [TraceId: 0HMSKRBLR3B6S:00000001] - Status: 200 - SpentTime: 203ms - Response Body: {"success":true,"message":"SUCCESS","data":[{"id":2,"firstname":"Bekzod","lastname":"Toshpulatov","age":0},{"id":3,"firstname":"string","lastname":"string","age":0},{"id":4,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":5,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":6,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":7,"firstname":"string","lastname":"string","age":0},{"id":8,"firstname":"string","lastname":"string","age":0},{"id":9,"firstname":"string","lastname":"string","age":0},{"id":10,"firstname":"ewrew","lastname":"rewrwerwe","age":0},{"id":11,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":12,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":14,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":15,"firstname":"uheiqwguwehng","lastname":"asfewgew","age":122},{"id":16,"firstname":"string","lastname":"string","age":0},{"id":17,"firstname":"string","lastname":"string","age":0},{"id":18,"firstname":"string","lastname":"string","age":0},{"id":19,"firstname":"string","lastname":"string","age":0},{"id":20,"firstname":"string","lastname":"string","age":0},{"id":21,"firstname":"string","lastname":"string","age":0},{"id":22,"firstname":"string","lastname":"string","age":0},{"id":23,"firstname":"string","lastname":"string","age":0},{"id":24,"firstname":"string","lastname":"string","age":0},{"id":25,"firstname":"string","lastname":"string","age":0},{"id":26,"firstname":"string","lastname":"string","age":0},{"id":27,"firstname":"string","lastname":"string","age":0}]}
2023-08-04 16:08:01,306 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - REQUEST INFO:  [TraceId: 0HMSKRBLR3B6S:00000002] - Schema: http - Method: GET - Host: localhost:5049 - Path: /author/list - QueryString:  - Client IP: ::1 - RequestBody: 
2023-08-04 16:08:01,315 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - RESPONSE INFO: [TraceId: 0HMSKRBLR3B6S:00000002] - Status: 200 - SpentTime: 8ms - Response Body: {"success":true,"message":"SUCCESS","data":[{"id":2,"firstname":"Bekzod","lastname":"Toshpulatov","age":0},{"id":3,"firstname":"string","lastname":"string","age":0},{"id":4,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":5,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":6,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":7,"firstname":"string","lastname":"string","age":0},{"id":8,"firstname":"string","lastname":"string","age":0},{"id":9,"firstname":"string","lastname":"string","age":0},{"id":10,"firstname":"ewrew","lastname":"rewrwerwe","age":0},{"id":11,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":12,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":14,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":15,"firstname":"uheiqwguwehng","lastname":"asfewgew","age":122},{"id":16,"firstname":"string","lastname":"string","age":0},{"id":17,"firstname":"string","lastname":"string","age":0},{"id":18,"firstname":"string","lastname":"string","age":0},{"id":19,"firstname":"string","lastname":"string","age":0},{"id":20,"firstname":"string","lastname":"string","age":0},{"id":21,"firstname":"string","lastname":"string","age":0},{"id":22,"firstname":"string","lastname":"string","age":0},{"id":23,"firstname":"string","lastname":"string","age":0},{"id":24,"firstname":"string","lastname":"string","age":0},{"id":25,"firstname":"string","lastname":"string","age":0},{"id":26,"firstname":"string","lastname":"string","age":0},{"id":27,"firstname":"string","lastname":"string","age":0}]}
2023-08-04 16:08:57,620 [3] INFO  Microsoft.Hosting.Lifetime - Application is shutting down...
2023-08-04 16:09:08,041 [1] INFO  Microsoft.Hosting.Lifetime - Now listening on: http://localhost:5049
2023-08-04 16:09:08,058 [1] INFO  Microsoft.Hosting.Lifetime - Application started. Press Ctrl+C to shut down.
2023-08-04 16:09:08,059 [1] INFO  Microsoft.Hosting.Lifetime - Hosting environment: Development
2023-08-04 16:09:08,060 [1] INFO  Microsoft.Hosting.Lifetime - Content root path: P:\C#\BookStore\BookStore
2023-08-04 16:09:13,564 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - REQUEST INFO:  [TraceId: 0HMSKRCSKSGOE:00000003] - Schema: http - Method: GET - Host: localhost:5049 - Path: /author/list - QueryString:  - Client IP: ::1 - RequestBody: 
2023-08-04 16:09:14,138 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - RESPONSE INFO: [TraceId: 0HMSKRCSKSGOE:00000003] - Status: 200 - SpentTime: 592ms - Response Body: ok
2023-08-04 16:09:34,269 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - REQUEST INFO:  [TraceId: 0HMSKRCSKSGOF:00000001] - Schema: http - Method: GET - Host: localhost:5049 - Path: /author/list - QueryString:  - Client IP: ::1 - RequestBody: 
2023-08-04 16:09:34,320 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - RESPONSE INFO: [TraceId: 0HMSKRCSKSGOF:00000001] - Status: 200 - SpentTime: 55ms - Response Body: ok
2023-08-04 16:10:18,490 [13] INFO  Microsoft.Hosting.Lifetime - Application is shutting down...
2023-08-04 16:10:26,762 [1] INFO  Microsoft.Hosting.Lifetime - Now listening on: http://localhost:5049
2023-08-04 16:10:26,776 [1] INFO  Microsoft.Hosting.Lifetime - Application started. Press Ctrl+C to shut down.
2023-08-04 16:10:26,776 [1] INFO  Microsoft.Hosting.Lifetime - Hosting environment: Development
2023-08-04 16:10:26,776 [1] INFO  Microsoft.Hosting.Lifetime - Content root path: P:\C#\BookStore\BookStore
2023-08-04 16:10:35,464 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - REQUEST INFO:  [TraceId: 0HMSKRDK2RBM1:00000001] - Schema: http - Method: GET - Host: localhost:5049 - Path: /author/list - QueryString:  - Client IP: ::1 - RequestBody: 
2023-08-04 16:10:35,936 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - RESPONSE INFO: [TraceId: 0HMSKRDK2RBM1:00000001] - Status: 200 - SpentTime: 468ms - Response Body: ok
2023-08-04 16:10:43,048 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - REQUEST INFO:  [TraceId: 0HMSKRDK2RBM1:00000002] - Schema: http - Method: GET - Host: localhost:5049 - Path: /author/list - QueryString:  - Client IP: ::1 - RequestBody: 
2023-08-04 16:10:43,109 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - RESPONSE INFO: [TraceId: 0HMSKRDK2RBM1:00000002] - Status: 200 - SpentTime: 56ms - Response Body: ok
2023-08-04 16:10:46,568 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - REQUEST INFO:  [TraceId: 0HMSKRDK2RBM2:00000001] - Schema: http - Method: GET - Host: localhost:5049 - Path: /author/list - QueryString:  - Client IP: ::1 - RequestBody: 
2023-08-04 16:10:46,585 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - RESPONSE INFO: [TraceId: 0HMSKRDK2RBM2:00000001] - Status: 200 - SpentTime: 15ms - Response Body: ok
2023-08-04 16:16:39,734 [15] INFO  Microsoft.Hosting.Lifetime - Application is shutting down...
2023-08-04 16:16:49,725 [1] INFO  Microsoft.Hosting.Lifetime - Now listening on: http://localhost:5049
2023-08-04 16:16:49,739 [1] INFO  Microsoft.Hosting.Lifetime - Application started. Press Ctrl+C to shut down.
2023-08-04 16:16:49,740 [1] INFO  Microsoft.Hosting.Lifetime - Hosting environment: Development
2023-08-04 16:16:49,740 [1] INFO  Microsoft.Hosting.Lifetime - Content root path: P:\C#\BookStore\BookStore
2023-08-04 16:17:12,441 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - REQUEST INFO:  [TraceId: 0HMSKRH659A3F:00000001] - Schema: http - Method: GET - Host: localhost:5049 - Path: /author/list - QueryString:  - Client IP: ::1 - RequestBody: 
2023-08-04 16:17:12,617 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - RESPONSE INFO: [TraceId: 0HMSKRH659A3F:00000001] - Status: 200 - SpentTime: 175ms - Response Body: ok
2023-08-04 16:17:22,297 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - REQUEST INFO:  [TraceId: 0HMSKRH659A3G:00000001] - Schema: http - Method: GET - Host: localhost:5049 - Path: /author/list - QueryString:  - Client IP: ::1 - RequestBody: 
2023-08-04 16:17:22,312 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - RESPONSE INFO: [TraceId: 0HMSKRH659A3G:00000001] - Status: 200 - SpentTime: 14ms - Response Body: ok
2023-08-04 16:17:26,396 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - REQUEST INFO:  [TraceId: 0HMSKRH659A3H:00000001] - Schema: http - Method: GET - Host: localhost:5049 - Path: /author/list - QueryString:  - Client IP: ::1 - RequestBody: 
2023-08-04 16:17:26,420 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - RESPONSE INFO: [TraceId: 0HMSKRH659A3H:00000001] - Status: 200 - SpentTime: 23ms - Response Body: ok
2023-08-04 16:17:27,032 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - REQUEST INFO:  [TraceId: 0HMSKRH659A3H:00000002] - Schema: http - Method: GET - Host: localhost:5049 - Path: /author/list - QueryString:  - Client IP: ::1 - RequestBody: 
2023-08-04 16:17:27,033 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - RESPONSE INFO: [TraceId: 0HMSKRH659A3H:00000002] - Status: 200 - SpentTime: 0ms - Response Body: ok
2023-08-04 16:17:27,459 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - REQUEST INFO:  [TraceId: 0HMSKRH659A3H:00000003] - Schema: http - Method: GET - Host: localhost:5049 - Path: /author/list - QueryString:  - Client IP: ::1 - RequestBody: 
2023-08-04 16:17:27,460 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - RESPONSE INFO: [TraceId: 0HMSKRH659A3H:00000003] - Status: 200 - SpentTime: 0ms - Response Body: ok
2023-08-04 16:17:27,833 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - REQUEST INFO:  [TraceId: 0HMSKRH659A3H:00000004] - Schema: http - Method: GET - Host: localhost:5049 - Path: /author/list - QueryString:  - Client IP: ::1 - RequestBody: 
2023-08-04 16:17:27,835 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - RESPONSE INFO: [TraceId: 0HMSKRH659A3H:00000004] - Status: 200 - SpentTime: 1ms - Response Body: ok
2023-08-04 16:17:28,048 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - REQUEST INFO:  [TraceId: 0HMSKRH659A3H:00000005] - Schema: http - Method: GET - Host: localhost:5049 - Path: /author/list - QueryString:  - Client IP: ::1 - RequestBody: 
2023-08-04 16:17:28,069 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - RESPONSE INFO: [TraceId: 0HMSKRH659A3H:00000005] - Status: 200 - SpentTime: 0ms - Response Body: ok
2023-08-04 16:17:28,252 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - REQUEST INFO:  [TraceId: 0HMSKRH659A3H:00000006] - Schema: http - Method: GET - Host: localhost:5049 - Path: /author/list - QueryString:  - Client IP: ::1 - RequestBody: 
2023-08-04 16:17:28,254 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - RESPONSE INFO: [TraceId: 0HMSKRH659A3H:00000006] - Status: 200 - SpentTime: 0ms - Response Body: ok
2023-08-04 16:17:28,440 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - REQUEST INFO:  [TraceId: 0HMSKRH659A3H:00000007] - Schema: http - Method: GET - Host: localhost:5049 - Path: /author/list - QueryString:  - Client IP: ::1 - RequestBody: 
2023-08-04 16:17:28,442 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - RESPONSE INFO: [TraceId: 0HMSKRH659A3H:00000007] - Status: 200 - SpentTime: 0ms - Response Body: ok
2023-08-04 16:17:28,654 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - REQUEST INFO:  [TraceId: 0HMSKRH659A3H:00000008] - Schema: http - Method: GET - Host: localhost:5049 - Path: /author/list - QueryString:  - Client IP: ::1 - RequestBody: 
2023-08-04 16:17:28,656 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - RESPONSE INFO: [TraceId: 0HMSKRH659A3H:00000008] - Status: 200 - SpentTime: 0ms - Response Body: ok
2023-08-04 16:17:28,860 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - REQUEST INFO:  [TraceId: 0HMSKRH659A3H:00000009] - Schema: http - Method: GET - Host: localhost:5049 - Path: /author/list - QueryString:  - Client IP: ::1 - RequestBody: 
2023-08-04 16:17:28,861 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - RESPONSE INFO: [TraceId: 0HMSKRH659A3H:00000009] - Status: 200 - SpentTime: 0ms - Response Body: ok
2023-08-04 16:17:29,041 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - REQUEST INFO:  [TraceId: 0HMSKRH659A3H:0000000A] - Schema: http - Method: GET - Host: localhost:5049 - Path: /author/list - QueryString:  - Client IP: ::1 - RequestBody: 
2023-08-04 16:17:29,042 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - RESPONSE INFO: [TraceId: 0HMSKRH659A3H:0000000A] - Status: 200 - SpentTime: 0ms - Response Body: ok
2023-08-04 16:17:29,231 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - REQUEST INFO:  [TraceId: 0HMSKRH659A3H:0000000B] - Schema: http - Method: GET - Host: localhost:5049 - Path: /author/list - QueryString:  - Client IP: ::1 - RequestBody: 
2023-08-04 16:17:29,232 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - RESPONSE INFO: [TraceId: 0HMSKRH659A3H:0000000B] - Status: 200 - SpentTime: 0ms - Response Body: ok
2023-08-04 16:17:29,431 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - REQUEST INFO:  [TraceId: 0HMSKRH659A3H:0000000C] - Schema: http - Method: GET - Host: localhost:5049 - Path: /author/list - QueryString:  - Client IP: ::1 - RequestBody: 
2023-08-04 16:17:29,432 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - RESPONSE INFO: [TraceId: 0HMSKRH659A3H:0000000C] - Status: 200 - SpentTime: 0ms - Response Body: ok
2023-08-04 16:17:29,614 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - REQUEST INFO:  [TraceId: 0HMSKRH659A3H:0000000D] - Schema: http - Method: GET - Host: localhost:5049 - Path: /author/list - QueryString:  - Client IP: ::1 - RequestBody: 
2023-08-04 16:17:29,615 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - RESPONSE INFO: [TraceId: 0HMSKRH659A3H:0000000D] - Status: 200 - SpentTime: 0ms - Response Body: ok
2023-08-04 16:17:29,800 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - REQUEST INFO:  [TraceId: 0HMSKRH659A3H:0000000E] - Schema: http - Method: GET - Host: localhost:5049 - Path: /author/list - QueryString:  - Client IP: ::1 - RequestBody: 
2023-08-04 16:17:29,801 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - RESPONSE INFO: [TraceId: 0HMSKRH659A3H:0000000E] - Status: 200 - SpentTime: 0ms - Response Body: ok
2023-08-04 16:17:30,002 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - REQUEST INFO:  [TraceId: 0HMSKRH659A3H:0000000F] - Schema: http - Method: GET - Host: localhost:5049 - Path: /author/list - QueryString:  - Client IP: ::1 - RequestBody: 
2023-08-04 16:17:30,003 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - RESPONSE INFO: [TraceId: 0HMSKRH659A3H:0000000F] - Status: 200 - SpentTime: 0ms - Response Body: ok
2023-08-04 16:17:30,160 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - REQUEST INFO:  [TraceId: 0HMSKRH659A3H:00000010] - Schema: http - Method: GET - Host: localhost:5049 - Path: /author/list - QueryString:  - Client IP: ::1 - RequestBody: 
2023-08-04 16:17:30,161 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - RESPONSE INFO: [TraceId: 0HMSKRH659A3H:00000010] - Status: 200 - SpentTime: 0ms - Response Body: ok
2023-08-04 16:17:30,364 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - REQUEST INFO:  [TraceId: 0HMSKRH659A3H:00000011] - Schema: http - Method: GET - Host: localhost:5049 - Path: /author/list - QueryString:  - Client IP: ::1 - RequestBody: 
2023-08-04 16:17:30,365 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - RESPONSE INFO: [TraceId: 0HMSKRH659A3H:00000011] - Status: 200 - SpentTime: 0ms - Response Body: ok
2023-08-04 16:17:43,401 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - REQUEST INFO:  [TraceId: 0HMSKRH659A3I:00000001] - Schema: http - Method: GET - Host: localhost:5049 - Path: /author/list - QueryString:  - Client IP: ::1 - RequestBody: 
2023-08-04 16:17:43,402 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - RESPONSE INFO: [TraceId: 0HMSKRH659A3I:00000001] - Status: 200 - SpentTime: 0ms - Response Body: ok
2023-08-04 16:17:47,550 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - REQUEST INFO:  [TraceId: 0HMSKRH659A3J:00000001] - Schema: http - Method: GET - Host: localhost:5049 - Path: /author/list - QueryString:  - Client IP: ::1 - RequestBody: 
2023-08-04 16:17:47,551 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - RESPONSE INFO: [TraceId: 0HMSKRH659A3J:00000001] - Status: 200 - SpentTime: 0ms - Response Body: ok
2023-08-04 16:18:07,119 [13] INFO  Microsoft.Hosting.Lifetime - Application is shutting down...
2023-08-04 16:18:15,270 [1] INFO  Microsoft.Hosting.Lifetime - Now listening on: http://localhost:5049
2023-08-04 16:18:15,281 [1] INFO  Microsoft.Hosting.Lifetime - Application started. Press Ctrl+C to shut down.
2023-08-04 16:18:15,281 [1] INFO  Microsoft.Hosting.Lifetime - Hosting environment: Development
2023-08-04 16:18:15,281 [1] INFO  Microsoft.Hosting.Lifetime - Content root path: P:\C#\BookStore\BookStore
2023-08-04 16:18:19,476 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - REQUEST INFO:  [TraceId: 0HMSKRHVPIHG9:00000003] - Schema: http - Method: GET - Host: localhost:5049 - Path: /author/list - QueryString:  - Client IP: ::1 - RequestBody: 
2023-08-04 16:18:21,084 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - RESPONSE INFO: [TraceId: 0HMSKRHVPIHG9:00000003] - Status: 200 - SpentTime: 1587ms - Response Body: {"success":true,"message":"SUCCESS","data":[{"id":2,"firstname":"Bekzod","lastname":"Toshpulatov","age":0},{"id":3,"firstname":"string","lastname":"string","age":0},{"id":4,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":5,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":6,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":7,"firstname":"string","lastname":"string","age":0},{"id":8,"firstname":"string","lastname":"string","age":0},{"id":9,"firstname":"string","lastname":"string","age":0},{"id":10,"firstname":"ewrew","lastname":"rewrwerwe","age":0},{"id":11,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":12,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":14,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":15,"firstname":"uheiqwguwehng","lastname":"asfewgew","age":122},{"id":16,"firstname":"string","lastname":"string","age":0},{"id":17,"firstname":"string","lastname":"string","age":0},{"id":18,"firstname":"string","lastname":"string","age":0},{"id":19,"firstname":"string","lastname":"string","age":0},{"id":20,"firstname":"string","lastname":"string","age":0},{"id":21,"firstname":"string","lastname":"string","age":0},{"id":22,"firstname":"string","lastname":"string","age":0},{"id":23,"firstname":"string","lastname":"string","age":0},{"id":24,"firstname":"string","lastname":"string","age":0},{"id":25,"firstname":"string","lastname":"string","age":0},{"id":26,"firstname":"string","lastname":"string","age":0},{"id":27,"firstname":"string","lastname":"string","age":0}]}
2023-08-04 16:21:09,034 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - REQUEST INFO:  [TraceId: 0HMSKRHVPIHGB:00000001] - Schema: http - Method: GET - Host: localhost:5049 - Path: /author/list - QueryString:  - Client IP: ::1 - RequestBody: 
2023-08-04 16:21:09,063 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - RESPONSE INFO: [TraceId: 0HMSKRHVPIHGB:00000001] - Status: 200 - SpentTime: 27ms - Response Body: {"success":true,"message":"SUCCESS","data":[{"id":2,"firstname":"Bekzod","lastname":"Toshpulatov","age":0},{"id":3,"firstname":"string","lastname":"string","age":0},{"id":4,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":5,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":6,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":7,"firstname":"string","lastname":"string","age":0},{"id":8,"firstname":"string","lastname":"string","age":0},{"id":9,"firstname":"string","lastname":"string","age":0},{"id":10,"firstname":"ewrew","lastname":"rewrwerwe","age":0},{"id":11,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":12,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":14,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":15,"firstname":"uheiqwguwehng","lastname":"asfewgew","age":122},{"id":16,"firstname":"string","lastname":"string","age":0},{"id":17,"firstname":"string","lastname":"string","age":0},{"id":18,"firstname":"string","lastname":"string","age":0},{"id":19,"firstname":"string","lastname":"string","age":0},{"id":20,"firstname":"string","lastname":"string","age":0},{"id":21,"firstname":"string","lastname":"string","age":0},{"id":22,"firstname":"string","lastname":"string","age":0},{"id":23,"firstname":"string","lastname":"string","age":0},{"id":24,"firstname":"string","lastname":"string","age":0},{"id":25,"firstname":"string","lastname":"string","age":0},{"id":26,"firstname":"string","lastname":"string","age":0},{"id":27,"firstname":"string","lastname":"string","age":0}]}
2023-08-04 16:21:18,846 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - REQUEST INFO:  [TraceId: 0HMSKRHVPIHGC:00000001] - Schema: http - Method: GET - Host: localhost:5049 - Path: /author/list - QueryString:  - Client IP: ::1 - RequestBody: 
2023-08-04 16:21:18,923 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - RESPONSE INFO: [TraceId: 0HMSKRHVPIHGC:00000001] - Status: 200 - SpentTime: 75ms - Response Body: {"success":true,"message":"SUCCESS","data":[{"id":2,"firstname":"Bekzod","lastname":"Toshpulatov","age":0},{"id":3,"firstname":"string","lastname":"string","age":0},{"id":4,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":5,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":6,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":7,"firstname":"string","lastname":"string","age":0},{"id":8,"firstname":"string","lastname":"string","age":0},{"id":9,"firstname":"string","lastname":"string","age":0},{"id":10,"firstname":"ewrew","lastname":"rewrwerwe","age":0},{"id":11,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":12,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":14,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":15,"firstname":"uheiqwguwehng","lastname":"asfewgew","age":122},{"id":16,"firstname":"string","lastname":"string","age":0},{"id":17,"firstname":"string","lastname":"string","age":0},{"id":18,"firstname":"string","lastname":"string","age":0},{"id":19,"firstname":"string","lastname":"string","age":0},{"id":20,"firstname":"string","lastname":"string","age":0},{"id":21,"firstname":"string","lastname":"string","age":0},{"id":22,"firstname":"string","lastname":"string","age":0},{"id":23,"firstname":"string","lastname":"string","age":0},{"id":24,"firstname":"string","lastname":"string","age":0},{"id":25,"firstname":"string","lastname":"string","age":0},{"id":26,"firstname":"string","lastname":"string","age":0},{"id":27,"firstname":"string","lastname":"string","age":0}]}
2023-08-04 16:21:19,267 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - REQUEST INFO:  [TraceId: 0HMSKRHVPIHGC:00000002] - Schema: http - Method: GET - Host: localhost:5049 - Path: /author/list - QueryString:  - Client IP: ::1 - RequestBody: 
2023-08-04 16:21:19,271 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - RESPONSE INFO: [TraceId: 0HMSKRHVPIHGC:00000002] - Status: 200 - SpentTime: 3ms - Response Body: {"success":true,"message":"SUCCESS","data":[{"id":2,"firstname":"Bekzod","lastname":"Toshpulatov","age":0},{"id":3,"firstname":"string","lastname":"string","age":0},{"id":4,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":5,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":6,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":7,"firstname":"string","lastname":"string","age":0},{"id":8,"firstname":"string","lastname":"string","age":0},{"id":9,"firstname":"string","lastname":"string","age":0},{"id":10,"firstname":"ewrew","lastname":"rewrwerwe","age":0},{"id":11,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":12,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":14,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":15,"firstname":"uheiqwguwehng","lastname":"asfewgew","age":122},{"id":16,"firstname":"string","lastname":"string","age":0},{"id":17,"firstname":"string","lastname":"string","age":0},{"id":18,"firstname":"string","lastname":"string","age":0},{"id":19,"firstname":"string","lastname":"string","age":0},{"id":20,"firstname":"string","lastname":"string","age":0},{"id":21,"firstname":"string","lastname":"string","age":0},{"id":22,"firstname":"string","lastname":"string","age":0},{"id":23,"firstname":"string","lastname":"string","age":0},{"id":24,"firstname":"string","lastname":"string","age":0},{"id":25,"firstname":"string","lastname":"string","age":0},{"id":26,"firstname":"string","lastname":"string","age":0},{"id":27,"firstname":"string","lastname":"string","age":0}]}
2023-08-04 16:21:19,697 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - REQUEST INFO:  [TraceId: 0HMSKRHVPIHGC:00000003] - Schema: http - Method: GET - Host: localhost:5049 - Path: /author/list - QueryString:  - Client IP: ::1 - RequestBody: 
2023-08-04 16:21:19,700 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - RESPONSE INFO: [TraceId: 0HMSKRHVPIHGC:00000003] - Status: 200 - SpentTime: 2ms - Response Body: {"success":true,"message":"SUCCESS","data":[{"id":2,"firstname":"Bekzod","lastname":"Toshpulatov","age":0},{"id":3,"firstname":"string","lastname":"string","age":0},{"id":4,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":5,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":6,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":7,"firstname":"string","lastname":"string","age":0},{"id":8,"firstname":"string","lastname":"string","age":0},{"id":9,"firstname":"string","lastname":"string","age":0},{"id":10,"firstname":"ewrew","lastname":"rewrwerwe","age":0},{"id":11,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":12,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":14,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":15,"firstname":"uheiqwguwehng","lastname":"asfewgew","age":122},{"id":16,"firstname":"string","lastname":"string","age":0},{"id":17,"firstname":"string","lastname":"string","age":0},{"id":18,"firstname":"string","lastname":"string","age":0},{"id":19,"firstname":"string","lastname":"string","age":0},{"id":20,"firstname":"string","lastname":"string","age":0},{"id":21,"firstname":"string","lastname":"string","age":0},{"id":22,"firstname":"string","lastname":"string","age":0},{"id":23,"firstname":"string","lastname":"string","age":0},{"id":24,"firstname":"string","lastname":"string","age":0},{"id":25,"firstname":"string","lastname":"string","age":0},{"id":26,"firstname":"string","lastname":"string","age":0},{"id":27,"firstname":"string","lastname":"string","age":0}]}
2023-08-04 16:21:20,057 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - REQUEST INFO:  [TraceId: 0HMSKRHVPIHGC:00000004] - Schema: http - Method: GET - Host: localhost:5049 - Path: /author/list - QueryString:  - Client IP: ::1 - RequestBody: 
2023-08-04 16:21:20,060 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - RESPONSE INFO: [TraceId: 0HMSKRHVPIHGC:00000004] - Status: 200 - SpentTime: 2ms - Response Body: {"success":true,"message":"SUCCESS","data":[{"id":2,"firstname":"Bekzod","lastname":"Toshpulatov","age":0},{"id":3,"firstname":"string","lastname":"string","age":0},{"id":4,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":5,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":6,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":7,"firstname":"string","lastname":"string","age":0},{"id":8,"firstname":"string","lastname":"string","age":0},{"id":9,"firstname":"string","lastname":"string","age":0},{"id":10,"firstname":"ewrew","lastname":"rewrwerwe","age":0},{"id":11,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":12,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":14,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":15,"firstname":"uheiqwguwehng","lastname":"asfewgew","age":122},{"id":16,"firstname":"string","lastname":"string","age":0},{"id":17,"firstname":"string","lastname":"string","age":0},{"id":18,"firstname":"string","lastname":"string","age":0},{"id":19,"firstname":"string","lastname":"string","age":0},{"id":20,"firstname":"string","lastname":"string","age":0},{"id":21,"firstname":"string","lastname":"string","age":0},{"id":22,"firstname":"string","lastname":"string","age":0},{"id":23,"firstname":"string","lastname":"string","age":0},{"id":24,"firstname":"string","lastname":"string","age":0},{"id":25,"firstname":"string","lastname":"string","age":0},{"id":26,"firstname":"string","lastname":"string","age":0},{"id":27,"firstname":"string","lastname":"string","age":0}]}
2023-08-04 16:21:20,429 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - REQUEST INFO:  [TraceId: 0HMSKRHVPIHGC:00000005] - Schema: http - Method: GET - Host: localhost:5049 - Path: /author/list - QueryString:  - Client IP: ::1 - RequestBody: 
2023-08-04 16:21:20,431 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - RESPONSE INFO: [TraceId: 0HMSKRHVPIHGC:00000005] - Status: 200 - SpentTime: 2ms - Response Body: {"success":true,"message":"SUCCESS","data":[{"id":2,"firstname":"Bekzod","lastname":"Toshpulatov","age":0},{"id":3,"firstname":"string","lastname":"string","age":0},{"id":4,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":5,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":6,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":7,"firstname":"string","lastname":"string","age":0},{"id":8,"firstname":"string","lastname":"string","age":0},{"id":9,"firstname":"string","lastname":"string","age":0},{"id":10,"firstname":"ewrew","lastname":"rewrwerwe","age":0},{"id":11,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":12,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":14,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":15,"firstname":"uheiqwguwehng","lastname":"asfewgew","age":122},{"id":16,"firstname":"string","lastname":"string","age":0},{"id":17,"firstname":"string","lastname":"string","age":0},{"id":18,"firstname":"string","lastname":"string","age":0},{"id":19,"firstname":"string","lastname":"string","age":0},{"id":20,"firstname":"string","lastname":"string","age":0},{"id":21,"firstname":"string","lastname":"string","age":0},{"id":22,"firstname":"string","lastname":"string","age":0},{"id":23,"firstname":"string","lastname":"string","age":0},{"id":24,"firstname":"string","lastname":"string","age":0},{"id":25,"firstname":"string","lastname":"string","age":0},{"id":26,"firstname":"string","lastname":"string","age":0},{"id":27,"firstname":"string","lastname":"string","age":0}]}
2023-08-04 16:21:20,834 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - REQUEST INFO:  [TraceId: 0HMSKRHVPIHGC:00000006] - Schema: http - Method: GET - Host: localhost:5049 - Path: /author/list - QueryString:  - Client IP: ::1 - RequestBody: 
2023-08-04 16:21:20,836 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - RESPONSE INFO: [TraceId: 0HMSKRHVPIHGC:00000006] - Status: 200 - SpentTime: 1ms - Response Body: {"success":true,"message":"SUCCESS","data":[{"id":2,"firstname":"Bekzod","lastname":"Toshpulatov","age":0},{"id":3,"firstname":"string","lastname":"string","age":0},{"id":4,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":5,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":6,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":7,"firstname":"string","lastname":"string","age":0},{"id":8,"firstname":"string","lastname":"string","age":0},{"id":9,"firstname":"string","lastname":"string","age":0},{"id":10,"firstname":"ewrew","lastname":"rewrwerwe","age":0},{"id":11,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":12,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":14,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":15,"firstname":"uheiqwguwehng","lastname":"asfewgew","age":122},{"id":16,"firstname":"string","lastname":"string","age":0},{"id":17,"firstname":"string","lastname":"string","age":0},{"id":18,"firstname":"string","lastname":"string","age":0},{"id":19,"firstname":"string","lastname":"string","age":0},{"id":20,"firstname":"string","lastname":"string","age":0},{"id":21,"firstname":"string","lastname":"string","age":0},{"id":22,"firstname":"string","lastname":"string","age":0},{"id":23,"firstname":"string","lastname":"string","age":0},{"id":24,"firstname":"string","lastname":"string","age":0},{"id":25,"firstname":"string","lastname":"string","age":0},{"id":26,"firstname":"string","lastname":"string","age":0},{"id":27,"firstname":"string","lastname":"string","age":0}]}
2023-08-04 16:21:21,202 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - REQUEST INFO:  [TraceId: 0HMSKRHVPIHGC:00000007] - Schema: http - Method: GET - Host: localhost:5049 - Path: /author/list - QueryString:  - Client IP: ::1 - RequestBody: 
2023-08-04 16:21:21,206 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - RESPONSE INFO: [TraceId: 0HMSKRHVPIHGC:00000007] - Status: 200 - SpentTime: 2ms - Response Body: {"success":true,"message":"SUCCESS","data":[{"id":2,"firstname":"Bekzod","lastname":"Toshpulatov","age":0},{"id":3,"firstname":"string","lastname":"string","age":0},{"id":4,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":5,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":6,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":7,"firstname":"string","lastname":"string","age":0},{"id":8,"firstname":"string","lastname":"string","age":0},{"id":9,"firstname":"string","lastname":"string","age":0},{"id":10,"firstname":"ewrew","lastname":"rewrwerwe","age":0},{"id":11,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":12,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":14,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":15,"firstname":"uheiqwguwehng","lastname":"asfewgew","age":122},{"id":16,"firstname":"string","lastname":"string","age":0},{"id":17,"firstname":"string","lastname":"string","age":0},{"id":18,"firstname":"string","lastname":"string","age":0},{"id":19,"firstname":"string","lastname":"string","age":0},{"id":20,"firstname":"string","lastname":"string","age":0},{"id":21,"firstname":"string","lastname":"string","age":0},{"id":22,"firstname":"string","lastname":"string","age":0},{"id":23,"firstname":"string","lastname":"string","age":0},{"id":24,"firstname":"string","lastname":"string","age":0},{"id":25,"firstname":"string","lastname":"string","age":0},{"id":26,"firstname":"string","lastname":"string","age":0},{"id":27,"firstname":"string","lastname":"string","age":0}]}
2023-08-04 16:21:21,574 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - REQUEST INFO:  [TraceId: 0HMSKRHVPIHGC:00000008] - Schema: http - Method: GET - Host: localhost:5049 - Path: /author/list - QueryString:  - Client IP: ::1 - RequestBody: 
2023-08-04 16:21:21,577 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - RESPONSE INFO: [TraceId: 0HMSKRHVPIHGC:00000008] - Status: 200 - SpentTime: 1ms - Response Body: {"success":true,"message":"SUCCESS","data":[{"id":2,"firstname":"Bekzod","lastname":"Toshpulatov","age":0},{"id":3,"firstname":"string","lastname":"string","age":0},{"id":4,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":5,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":6,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":7,"firstname":"string","lastname":"string","age":0},{"id":8,"firstname":"string","lastname":"string","age":0},{"id":9,"firstname":"string","lastname":"string","age":0},{"id":10,"firstname":"ewrew","lastname":"rewrwerwe","age":0},{"id":11,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":12,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":14,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":15,"firstname":"uheiqwguwehng","lastname":"asfewgew","age":122},{"id":16,"firstname":"string","lastname":"string","age":0},{"id":17,"firstname":"string","lastname":"string","age":0},{"id":18,"firstname":"string","lastname":"string","age":0},{"id":19,"firstname":"string","lastname":"string","age":0},{"id":20,"firstname":"string","lastname":"string","age":0},{"id":21,"firstname":"string","lastname":"string","age":0},{"id":22,"firstname":"string","lastname":"string","age":0},{"id":23,"firstname":"string","lastname":"string","age":0},{"id":24,"firstname":"string","lastname":"string","age":0},{"id":25,"firstname":"string","lastname":"string","age":0},{"id":26,"firstname":"string","lastname":"string","age":0},{"id":27,"firstname":"string","lastname":"string","age":0}]}
2023-08-04 16:21:21,907 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - REQUEST INFO:  [TraceId: 0HMSKRHVPIHGC:00000009] - Schema: http - Method: GET - Host: localhost:5049 - Path: /author/list - QueryString:  - Client IP: ::1 - RequestBody: 
2023-08-04 16:21:21,911 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - RESPONSE INFO: [TraceId: 0HMSKRHVPIHGC:00000009] - Status: 200 - SpentTime: 2ms - Response Body: {"success":true,"message":"SUCCESS","data":[{"id":2,"firstname":"Bekzod","lastname":"Toshpulatov","age":0},{"id":3,"firstname":"string","lastname":"string","age":0},{"id":4,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":5,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":6,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":7,"firstname":"string","lastname":"string","age":0},{"id":8,"firstname":"string","lastname":"string","age":0},{"id":9,"firstname":"string","lastname":"string","age":0},{"id":10,"firstname":"ewrew","lastname":"rewrwerwe","age":0},{"id":11,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":12,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":14,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":15,"firstname":"uheiqwguwehng","lastname":"asfewgew","age":122},{"id":16,"firstname":"string","lastname":"string","age":0},{"id":17,"firstname":"string","lastname":"string","age":0},{"id":18,"firstname":"string","lastname":"string","age":0},{"id":19,"firstname":"string","lastname":"string","age":0},{"id":20,"firstname":"string","lastname":"string","age":0},{"id":21,"firstname":"string","lastname":"string","age":0},{"id":22,"firstname":"string","lastname":"string","age":0},{"id":23,"firstname":"string","lastname":"string","age":0},{"id":24,"firstname":"string","lastname":"string","age":0},{"id":25,"firstname":"string","lastname":"string","age":0},{"id":26,"firstname":"string","lastname":"string","age":0},{"id":27,"firstname":"string","lastname":"string","age":0}]}
2023-08-04 16:21:22,139 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - REQUEST INFO:  [TraceId: 0HMSKRHVPIHGC:0000000A] - Schema: http - Method: GET - Host: localhost:5049 - Path: /author/list - QueryString:  - Client IP: ::1 - RequestBody: 
2023-08-04 16:21:22,141 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - RESPONSE INFO: [TraceId: 0HMSKRHVPIHGC:0000000A] - Status: 200 - SpentTime: 1ms - Response Body: {"success":true,"message":"SUCCESS","data":[{"id":2,"firstname":"Bekzod","lastname":"Toshpulatov","age":0},{"id":3,"firstname":"string","lastname":"string","age":0},{"id":4,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":5,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":6,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":7,"firstname":"string","lastname":"string","age":0},{"id":8,"firstname":"string","lastname":"string","age":0},{"id":9,"firstname":"string","lastname":"string","age":0},{"id":10,"firstname":"ewrew","lastname":"rewrwerwe","age":0},{"id":11,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":12,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":14,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":15,"firstname":"uheiqwguwehng","lastname":"asfewgew","age":122},{"id":16,"firstname":"string","lastname":"string","age":0},{"id":17,"firstname":"string","lastname":"string","age":0},{"id":18,"firstname":"string","lastname":"string","age":0},{"id":19,"firstname":"string","lastname":"string","age":0},{"id":20,"firstname":"string","lastname":"string","age":0},{"id":21,"firstname":"string","lastname":"string","age":0},{"id":22,"firstname":"string","lastname":"string","age":0},{"id":23,"firstname":"string","lastname":"string","age":0},{"id":24,"firstname":"string","lastname":"string","age":0},{"id":25,"firstname":"string","lastname":"string","age":0},{"id":26,"firstname":"string","lastname":"string","age":0},{"id":27,"firstname":"string","lastname":"string","age":0}]}
2023-08-04 16:21:22,346 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - REQUEST INFO:  [TraceId: 0HMSKRHVPIHGC:0000000B] - Schema: http - Method: GET - Host: localhost:5049 - Path: /author/list - QueryString:  - Client IP: ::1 - RequestBody: 
2023-08-04 16:21:22,348 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - RESPONSE INFO: [TraceId: 0HMSKRHVPIHGC:0000000B] - Status: 200 - SpentTime: 1ms - Response Body: {"success":true,"message":"SUCCESS","data":[{"id":2,"firstname":"Bekzod","lastname":"Toshpulatov","age":0},{"id":3,"firstname":"string","lastname":"string","age":0},{"id":4,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":5,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":6,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":7,"firstname":"string","lastname":"string","age":0},{"id":8,"firstname":"string","lastname":"string","age":0},{"id":9,"firstname":"string","lastname":"string","age":0},{"id":10,"firstname":"ewrew","lastname":"rewrwerwe","age":0},{"id":11,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":12,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":14,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":15,"firstname":"uheiqwguwehng","lastname":"asfewgew","age":122},{"id":16,"firstname":"string","lastname":"string","age":0},{"id":17,"firstname":"string","lastname":"string","age":0},{"id":18,"firstname":"string","lastname":"string","age":0},{"id":19,"firstname":"string","lastname":"string","age":0},{"id":20,"firstname":"string","lastname":"string","age":0},{"id":21,"firstname":"string","lastname":"string","age":0},{"id":22,"firstname":"string","lastname":"string","age":0},{"id":23,"firstname":"string","lastname":"string","age":0},{"id":24,"firstname":"string","lastname":"string","age":0},{"id":25,"firstname":"string","lastname":"string","age":0},{"id":26,"firstname":"string","lastname":"string","age":0},{"id":27,"firstname":"string","lastname":"string","age":0}]}
2023-08-04 16:21:22,541 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - REQUEST INFO:  [TraceId: 0HMSKRHVPIHGC:0000000C] - Schema: http - Method: GET - Host: localhost:5049 - Path: /author/list - QueryString:  - Client IP: ::1 - RequestBody: 
2023-08-04 16:21:22,543 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - RESPONSE INFO: [TraceId: 0HMSKRHVPIHGC:0000000C] - Status: 200 - SpentTime: 1ms - Response Body: {"success":true,"message":"SUCCESS","data":[{"id":2,"firstname":"Bekzod","lastname":"Toshpulatov","age":0},{"id":3,"firstname":"string","lastname":"string","age":0},{"id":4,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":5,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":6,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":7,"firstname":"string","lastname":"string","age":0},{"id":8,"firstname":"string","lastname":"string","age":0},{"id":9,"firstname":"string","lastname":"string","age":0},{"id":10,"firstname":"ewrew","lastname":"rewrwerwe","age":0},{"id":11,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":12,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":14,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":15,"firstname":"uheiqwguwehng","lastname":"asfewgew","age":122},{"id":16,"firstname":"string","lastname":"string","age":0},{"id":17,"firstname":"string","lastname":"string","age":0},{"id":18,"firstname":"string","lastname":"string","age":0},{"id":19,"firstname":"string","lastname":"string","age":0},{"id":20,"firstname":"string","lastname":"string","age":0},{"id":21,"firstname":"string","lastname":"string","age":0},{"id":22,"firstname":"string","lastname":"string","age":0},{"id":23,"firstname":"string","lastname":"string","age":0},{"id":24,"firstname":"string","lastname":"string","age":0},{"id":25,"firstname":"string","lastname":"string","age":0},{"id":26,"firstname":"string","lastname":"string","age":0},{"id":27,"firstname":"string","lastname":"string","age":0}]}
2023-08-04 16:21:22,715 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - REQUEST INFO:  [TraceId: 0HMSKRHVPIHGC:0000000D] - Schema: http - Method: GET - Host: localhost:5049 - Path: /author/list - QueryString:  - Client IP: ::1 - RequestBody: 
2023-08-04 16:21:22,717 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - RESPONSE INFO: [TraceId: 0HMSKRHVPIHGC:0000000D] - Status: 200 - SpentTime: 1ms - Response Body: {"success":true,"message":"SUCCESS","data":[{"id":2,"firstname":"Bekzod","lastname":"Toshpulatov","age":0},{"id":3,"firstname":"string","lastname":"string","age":0},{"id":4,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":5,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":6,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":7,"firstname":"string","lastname":"string","age":0},{"id":8,"firstname":"string","lastname":"string","age":0},{"id":9,"firstname":"string","lastname":"string","age":0},{"id":10,"firstname":"ewrew","lastname":"rewrwerwe","age":0},{"id":11,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":12,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":14,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":15,"firstname":"uheiqwguwehng","lastname":"asfewgew","age":122},{"id":16,"firstname":"string","lastname":"string","age":0},{"id":17,"firstname":"string","lastname":"string","age":0},{"id":18,"firstname":"string","lastname":"string","age":0},{"id":19,"firstname":"string","lastname":"string","age":0},{"id":20,"firstname":"string","lastname":"string","age":0},{"id":21,"firstname":"string","lastname":"string","age":0},{"id":22,"firstname":"string","lastname":"string","age":0},{"id":23,"firstname":"string","lastname":"string","age":0},{"id":24,"firstname":"string","lastname":"string","age":0},{"id":25,"firstname":"string","lastname":"string","age":0},{"id":26,"firstname":"string","lastname":"string","age":0},{"id":27,"firstname":"string","lastname":"string","age":0}]}
2023-08-04 16:21:22,914 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - REQUEST INFO:  [TraceId: 0HMSKRHVPIHGC:0000000E] - Schema: http - Method: GET - Host: localhost:5049 - Path: /author/list - QueryString:  - Client IP: ::1 - RequestBody: 
2023-08-04 16:21:22,917 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - RESPONSE INFO: [TraceId: 0HMSKRHVPIHGC:0000000E] - Status: 200 - SpentTime: 2ms - Response Body: {"success":true,"message":"SUCCESS","data":[{"id":2,"firstname":"Bekzod","lastname":"Toshpulatov","age":0},{"id":3,"firstname":"string","lastname":"string","age":0},{"id":4,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":5,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":6,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":7,"firstname":"string","lastname":"string","age":0},{"id":8,"firstname":"string","lastname":"string","age":0},{"id":9,"firstname":"string","lastname":"string","age":0},{"id":10,"firstname":"ewrew","lastname":"rewrwerwe","age":0},{"id":11,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":12,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":14,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":15,"firstname":"uheiqwguwehng","lastname":"asfewgew","age":122},{"id":16,"firstname":"string","lastname":"string","age":0},{"id":17,"firstname":"string","lastname":"string","age":0},{"id":18,"firstname":"string","lastname":"string","age":0},{"id":19,"firstname":"string","lastname":"string","age":0},{"id":20,"firstname":"string","lastname":"string","age":0},{"id":21,"firstname":"string","lastname":"string","age":0},{"id":22,"firstname":"string","lastname":"string","age":0},{"id":23,"firstname":"string","lastname":"string","age":0},{"id":24,"firstname":"string","lastname":"string","age":0},{"id":25,"firstname":"string","lastname":"string","age":0},{"id":26,"firstname":"string","lastname":"string","age":0},{"id":27,"firstname":"string","lastname":"string","age":0}]}
2023-08-04 16:21:23,100 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - REQUEST INFO:  [TraceId: 0HMSKRHVPIHGC:0000000F] - Schema: http - Method: GET - Host: localhost:5049 - Path: /author/list - QueryString:  - Client IP: ::1 - RequestBody: 
2023-08-04 16:21:23,104 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - RESPONSE INFO: [TraceId: 0HMSKRHVPIHGC:0000000F] - Status: 200 - SpentTime: 2ms - Response Body: {"success":true,"message":"SUCCESS","data":[{"id":2,"firstname":"Bekzod","lastname":"Toshpulatov","age":0},{"id":3,"firstname":"string","lastname":"string","age":0},{"id":4,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":5,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":6,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":7,"firstname":"string","lastname":"string","age":0},{"id":8,"firstname":"string","lastname":"string","age":0},{"id":9,"firstname":"string","lastname":"string","age":0},{"id":10,"firstname":"ewrew","lastname":"rewrwerwe","age":0},{"id":11,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":12,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":14,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":15,"firstname":"uheiqwguwehng","lastname":"asfewgew","age":122},{"id":16,"firstname":"string","lastname":"string","age":0},{"id":17,"firstname":"string","lastname":"string","age":0},{"id":18,"firstname":"string","lastname":"string","age":0},{"id":19,"firstname":"string","lastname":"string","age":0},{"id":20,"firstname":"string","lastname":"string","age":0},{"id":21,"firstname":"string","lastname":"string","age":0},{"id":22,"firstname":"string","lastname":"string","age":0},{"id":23,"firstname":"string","lastname":"string","age":0},{"id":24,"firstname":"string","lastname":"string","age":0},{"id":25,"firstname":"string","lastname":"string","age":0},{"id":26,"firstname":"string","lastname":"string","age":0},{"id":27,"firstname":"string","lastname":"string","age":0}]}
2023-08-04 16:21:23,291 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - REQUEST INFO:  [TraceId: 0HMSKRHVPIHGC:00000010] - Schema: http - Method: GET - Host: localhost:5049 - Path: /author/list - QueryString:  - Client IP: ::1 - RequestBody: 
2023-08-04 16:21:23,293 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - RESPONSE INFO: [TraceId: 0HMSKRHVPIHGC:00000010] - Status: 200 - SpentTime: 1ms - Response Body: {"success":true,"message":"SUCCESS","data":[{"id":2,"firstname":"Bekzod","lastname":"Toshpulatov","age":0},{"id":3,"firstname":"string","lastname":"string","age":0},{"id":4,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":5,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":6,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":7,"firstname":"string","lastname":"string","age":0},{"id":8,"firstname":"string","lastname":"string","age":0},{"id":9,"firstname":"string","lastname":"string","age":0},{"id":10,"firstname":"ewrew","lastname":"rewrwerwe","age":0},{"id":11,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":12,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":14,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":15,"firstname":"uheiqwguwehng","lastname":"asfewgew","age":122},{"id":16,"firstname":"string","lastname":"string","age":0},{"id":17,"firstname":"string","lastname":"string","age":0},{"id":18,"firstname":"string","lastname":"string","age":0},{"id":19,"firstname":"string","lastname":"string","age":0},{"id":20,"firstname":"string","lastname":"string","age":0},{"id":21,"firstname":"string","lastname":"string","age":0},{"id":22,"firstname":"string","lastname":"string","age":0},{"id":23,"firstname":"string","lastname":"string","age":0},{"id":24,"firstname":"string","lastname":"string","age":0},{"id":25,"firstname":"string","lastname":"string","age":0},{"id":26,"firstname":"string","lastname":"string","age":0},{"id":27,"firstname":"string","lastname":"string","age":0}]}
2023-08-04 16:21:23,504 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - REQUEST INFO:  [TraceId: 0HMSKRHVPIHGC:00000011] - Schema: http - Method: GET - Host: localhost:5049 - Path: /author/list - QueryString:  - Client IP: ::1 - RequestBody: 
2023-08-04 16:21:23,506 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - RESPONSE INFO: [TraceId: 0HMSKRHVPIHGC:00000011] - Status: 200 - SpentTime: 1ms - Response Body: {"success":true,"message":"SUCCESS","data":[{"id":2,"firstname":"Bekzod","lastname":"Toshpulatov","age":0},{"id":3,"firstname":"string","lastname":"string","age":0},{"id":4,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":5,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":6,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":7,"firstname":"string","lastname":"string","age":0},{"id":8,"firstname":"string","lastname":"string","age":0},{"id":9,"firstname":"string","lastname":"string","age":0},{"id":10,"firstname":"ewrew","lastname":"rewrwerwe","age":0},{"id":11,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":12,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":14,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":15,"firstname":"uheiqwguwehng","lastname":"asfewgew","age":122},{"id":16,"firstname":"string","lastname":"string","age":0},{"id":17,"firstname":"string","lastname":"string","age":0},{"id":18,"firstname":"string","lastname":"string","age":0},{"id":19,"firstname":"string","lastname":"string","age":0},{"id":20,"firstname":"string","lastname":"string","age":0},{"id":21,"firstname":"string","lastname":"string","age":0},{"id":22,"firstname":"string","lastname":"string","age":0},{"id":23,"firstname":"string","lastname":"string","age":0},{"id":24,"firstname":"string","lastname":"string","age":0},{"id":25,"firstname":"string","lastname":"string","age":0},{"id":26,"firstname":"string","lastname":"string","age":0},{"id":27,"firstname":"string","lastname":"string","age":0}]}
2023-08-04 16:21:23,740 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - REQUEST INFO:  [TraceId: 0HMSKRHVPIHGC:00000012] - Schema: http - Method: GET - Host: localhost:5049 - Path: /author/list - QueryString:  - Client IP: ::1 - RequestBody: 
2023-08-04 16:21:23,742 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - RESPONSE INFO: [TraceId: 0HMSKRHVPIHGC:00000012] - Status: 200 - SpentTime: 1ms - Response Body: {"success":true,"message":"SUCCESS","data":[{"id":2,"firstname":"Bekzod","lastname":"Toshpulatov","age":0},{"id":3,"firstname":"string","lastname":"string","age":0},{"id":4,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":5,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":6,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":7,"firstname":"string","lastname":"string","age":0},{"id":8,"firstname":"string","lastname":"string","age":0},{"id":9,"firstname":"string","lastname":"string","age":0},{"id":10,"firstname":"ewrew","lastname":"rewrwerwe","age":0},{"id":11,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":12,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":14,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":15,"firstname":"uheiqwguwehng","lastname":"asfewgew","age":122},{"id":16,"firstname":"string","lastname":"string","age":0},{"id":17,"firstname":"string","lastname":"string","age":0},{"id":18,"firstname":"string","lastname":"string","age":0},{"id":19,"firstname":"string","lastname":"string","age":0},{"id":20,"firstname":"string","lastname":"string","age":0},{"id":21,"firstname":"string","lastname":"string","age":0},{"id":22,"firstname":"string","lastname":"string","age":0},{"id":23,"firstname":"string","lastname":"string","age":0},{"id":24,"firstname":"string","lastname":"string","age":0},{"id":25,"firstname":"string","lastname":"string","age":0},{"id":26,"firstname":"string","lastname":"string","age":0},{"id":27,"firstname":"string","lastname":"string","age":0}]}
2023-08-04 16:21:23,920 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - REQUEST INFO:  [TraceId: 0HMSKRHVPIHGC:00000013] - Schema: http - Method: GET - Host: localhost:5049 - Path: /author/list - QueryString:  - Client IP: ::1 - RequestBody: 
2023-08-04 16:21:23,923 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - RESPONSE INFO: [TraceId: 0HMSKRHVPIHGC:00000013] - Status: 200 - SpentTime: 1ms - Response Body: {"success":true,"message":"SUCCESS","data":[{"id":2,"firstname":"Bekzod","lastname":"Toshpulatov","age":0},{"id":3,"firstname":"string","lastname":"string","age":0},{"id":4,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":5,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":6,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":7,"firstname":"string","lastname":"string","age":0},{"id":8,"firstname":"string","lastname":"string","age":0},{"id":9,"firstname":"string","lastname":"string","age":0},{"id":10,"firstname":"ewrew","lastname":"rewrwerwe","age":0},{"id":11,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":12,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":14,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":15,"firstname":"uheiqwguwehng","lastname":"asfewgew","age":122},{"id":16,"firstname":"string","lastname":"string","age":0},{"id":17,"firstname":"string","lastname":"string","age":0},{"id":18,"firstname":"string","lastname":"string","age":0},{"id":19,"firstname":"string","lastname":"string","age":0},{"id":20,"firstname":"string","lastname":"string","age":0},{"id":21,"firstname":"string","lastname":"string","age":0},{"id":22,"firstname":"string","lastname":"string","age":0},{"id":23,"firstname":"string","lastname":"string","age":0},{"id":24,"firstname":"string","lastname":"string","age":0},{"id":25,"firstname":"string","lastname":"string","age":0},{"id":26,"firstname":"string","lastname":"string","age":0},{"id":27,"firstname":"string","lastname":"string","age":0}]}
2023-08-04 16:21:24,108 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - REQUEST INFO:  [TraceId: 0HMSKRHVPIHGC:00000014] - Schema: http - Method: GET - Host: localhost:5049 - Path: /author/list - QueryString:  - Client IP: ::1 - RequestBody: 
2023-08-04 16:21:24,111 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - RESPONSE INFO: [TraceId: 0HMSKRHVPIHGC:00000014] - Status: 200 - SpentTime: 1ms - Response Body: {"success":true,"message":"SUCCESS","data":[{"id":2,"firstname":"Bekzod","lastname":"Toshpulatov","age":0},{"id":3,"firstname":"string","lastname":"string","age":0},{"id":4,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":5,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":6,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":7,"firstname":"string","lastname":"string","age":0},{"id":8,"firstname":"string","lastname":"string","age":0},{"id":9,"firstname":"string","lastname":"string","age":0},{"id":10,"firstname":"ewrew","lastname":"rewrwerwe","age":0},{"id":11,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":12,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":14,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":15,"firstname":"uheiqwguwehng","lastname":"asfewgew","age":122},{"id":16,"firstname":"string","lastname":"string","age":0},{"id":17,"firstname":"string","lastname":"string","age":0},{"id":18,"firstname":"string","lastname":"string","age":0},{"id":19,"firstname":"string","lastname":"string","age":0},{"id":20,"firstname":"string","lastname":"string","age":0},{"id":21,"firstname":"string","lastname":"string","age":0},{"id":22,"firstname":"string","lastname":"string","age":0},{"id":23,"firstname":"string","lastname":"string","age":0},{"id":24,"firstname":"string","lastname":"string","age":0},{"id":25,"firstname":"string","lastname":"string","age":0},{"id":26,"firstname":"string","lastname":"string","age":0},{"id":27,"firstname":"string","lastname":"string","age":0}]}
2023-08-04 16:21:24,295 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - REQUEST INFO:  [TraceId: 0HMSKRHVPIHGC:00000015] - Schema: http - Method: GET - Host: localhost:5049 - Path: /author/list - QueryString:  - Client IP: ::1 - RequestBody: 
2023-08-04 16:21:24,297 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - RESPONSE INFO: [TraceId: 0HMSKRHVPIHGC:00000015] - Status: 200 - SpentTime: 1ms - Response Body: {"success":true,"message":"SUCCESS","data":[{"id":2,"firstname":"Bekzod","lastname":"Toshpulatov","age":0},{"id":3,"firstname":"string","lastname":"string","age":0},{"id":4,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":5,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":6,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":7,"firstname":"string","lastname":"string","age":0},{"id":8,"firstname":"string","lastname":"string","age":0},{"id":9,"firstname":"string","lastname":"string","age":0},{"id":10,"firstname":"ewrew","lastname":"rewrwerwe","age":0},{"id":11,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":12,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":14,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":15,"firstname":"uheiqwguwehng","lastname":"asfewgew","age":122},{"id":16,"firstname":"string","lastname":"string","age":0},{"id":17,"firstname":"string","lastname":"string","age":0},{"id":18,"firstname":"string","lastname":"string","age":0},{"id":19,"firstname":"string","lastname":"string","age":0},{"id":20,"firstname":"string","lastname":"string","age":0},{"id":21,"firstname":"string","lastname":"string","age":0},{"id":22,"firstname":"string","lastname":"string","age":0},{"id":23,"firstname":"string","lastname":"string","age":0},{"id":24,"firstname":"string","lastname":"string","age":0},{"id":25,"firstname":"string","lastname":"string","age":0},{"id":26,"firstname":"string","lastname":"string","age":0},{"id":27,"firstname":"string","lastname":"string","age":0}]}
2023-08-04 16:21:24,499 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - REQUEST INFO:  [TraceId: 0HMSKRHVPIHGC:00000016] - Schema: http - Method: GET - Host: localhost:5049 - Path: /author/list - QueryString:  - Client IP: ::1 - RequestBody: 
2023-08-04 16:21:24,501 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - RESPONSE INFO: [TraceId: 0HMSKRHVPIHGC:00000016] - Status: 200 - SpentTime: 1ms - Response Body: {"success":true,"message":"SUCCESS","data":[{"id":2,"firstname":"Bekzod","lastname":"Toshpulatov","age":0},{"id":3,"firstname":"string","lastname":"string","age":0},{"id":4,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":5,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":6,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":7,"firstname":"string","lastname":"string","age":0},{"id":8,"firstname":"string","lastname":"string","age":0},{"id":9,"firstname":"string","lastname":"string","age":0},{"id":10,"firstname":"ewrew","lastname":"rewrwerwe","age":0},{"id":11,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":12,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":14,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":15,"firstname":"uheiqwguwehng","lastname":"asfewgew","age":122},{"id":16,"firstname":"string","lastname":"string","age":0},{"id":17,"firstname":"string","lastname":"string","age":0},{"id":18,"firstname":"string","lastname":"string","age":0},{"id":19,"firstname":"string","lastname":"string","age":0},{"id":20,"firstname":"string","lastname":"string","age":0},{"id":21,"firstname":"string","lastname":"string","age":0},{"id":22,"firstname":"string","lastname":"string","age":0},{"id":23,"firstname":"string","lastname":"string","age":0},{"id":24,"firstname":"string","lastname":"string","age":0},{"id":25,"firstname":"string","lastname":"string","age":0},{"id":26,"firstname":"string","lastname":"string","age":0},{"id":27,"firstname":"string","lastname":"string","age":0}]}
2023-08-04 16:21:24,717 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - REQUEST INFO:  [TraceId: 0HMSKRHVPIHGC:00000017] - Schema: http - Method: GET - Host: localhost:5049 - Path: /author/list - QueryString:  - Client IP: ::1 - RequestBody: 
2023-08-04 16:21:24,720 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - RESPONSE INFO: [TraceId: 0HMSKRHVPIHGC:00000017] - Status: 200 - SpentTime: 1ms - Response Body: {"success":true,"message":"SUCCESS","data":[{"id":2,"firstname":"Bekzod","lastname":"Toshpulatov","age":0},{"id":3,"firstname":"string","lastname":"string","age":0},{"id":4,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":5,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":6,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":7,"firstname":"string","lastname":"string","age":0},{"id":8,"firstname":"string","lastname":"string","age":0},{"id":9,"firstname":"string","lastname":"string","age":0},{"id":10,"firstname":"ewrew","lastname":"rewrwerwe","age":0},{"id":11,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":12,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":14,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":15,"firstname":"uheiqwguwehng","lastname":"asfewgew","age":122},{"id":16,"firstname":"string","lastname":"string","age":0},{"id":17,"firstname":"string","lastname":"string","age":0},{"id":18,"firstname":"string","lastname":"string","age":0},{"id":19,"firstname":"string","lastname":"string","age":0},{"id":20,"firstname":"string","lastname":"string","age":0},{"id":21,"firstname":"string","lastname":"string","age":0},{"id":22,"firstname":"string","lastname":"string","age":0},{"id":23,"firstname":"string","lastname":"string","age":0},{"id":24,"firstname":"string","lastname":"string","age":0},{"id":25,"firstname":"string","lastname":"string","age":0},{"id":26,"firstname":"string","lastname":"string","age":0},{"id":27,"firstname":"string","lastname":"string","age":0}]}
2023-08-04 16:21:24,917 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - REQUEST INFO:  [TraceId: 0HMSKRHVPIHGC:00000018] - Schema: http - Method: GET - Host: localhost:5049 - Path: /author/list - QueryString:  - Client IP: ::1 - RequestBody: 
2023-08-04 16:21:24,919 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - RESPONSE INFO: [TraceId: 0HMSKRHVPIHGC:00000018] - Status: 200 - SpentTime: 1ms - Response Body: {"success":true,"message":"SUCCESS","data":[{"id":2,"firstname":"Bekzod","lastname":"Toshpulatov","age":0},{"id":3,"firstname":"string","lastname":"string","age":0},{"id":4,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":5,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":6,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":7,"firstname":"string","lastname":"string","age":0},{"id":8,"firstname":"string","lastname":"string","age":0},{"id":9,"firstname":"string","lastname":"string","age":0},{"id":10,"firstname":"ewrew","lastname":"rewrwerwe","age":0},{"id":11,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":12,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":14,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":15,"firstname":"uheiqwguwehng","lastname":"asfewgew","age":122},{"id":16,"firstname":"string","lastname":"string","age":0},{"id":17,"firstname":"string","lastname":"string","age":0},{"id":18,"firstname":"string","lastname":"string","age":0},{"id":19,"firstname":"string","lastname":"string","age":0},{"id":20,"firstname":"string","lastname":"string","age":0},{"id":21,"firstname":"string","lastname":"string","age":0},{"id":22,"firstname":"string","lastname":"string","age":0},{"id":23,"firstname":"string","lastname":"string","age":0},{"id":24,"firstname":"string","lastname":"string","age":0},{"id":25,"firstname":"string","lastname":"string","age":0},{"id":26,"firstname":"string","lastname":"string","age":0},{"id":27,"firstname":"string","lastname":"string","age":0}]}
2023-08-04 16:21:25,106 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - REQUEST INFO:  [TraceId: 0HMSKRHVPIHGD:00000001] - Schema: http - Method: GET - Host: localhost:5049 - Path: /author/list - QueryString:  - Client IP: ::1 - RequestBody: 
2023-08-04 16:21:25,109 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - RESPONSE INFO: [TraceId: 0HMSKRHVPIHGD:00000001] - Status: 200 - SpentTime: 1ms - Response Body: {"success":true,"message":"SUCCESS","data":[{"id":2,"firstname":"Bekzod","lastname":"Toshpulatov","age":0},{"id":3,"firstname":"string","lastname":"string","age":0},{"id":4,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":5,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":6,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":7,"firstname":"string","lastname":"string","age":0},{"id":8,"firstname":"string","lastname":"string","age":0},{"id":9,"firstname":"string","lastname":"string","age":0},{"id":10,"firstname":"ewrew","lastname":"rewrwerwe","age":0},{"id":11,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":12,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":14,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":15,"firstname":"uheiqwguwehng","lastname":"asfewgew","age":122},{"id":16,"firstname":"string","lastname":"string","age":0},{"id":17,"firstname":"string","lastname":"string","age":0},{"id":18,"firstname":"string","lastname":"string","age":0},{"id":19,"firstname":"string","lastname":"string","age":0},{"id":20,"firstname":"string","lastname":"string","age":0},{"id":21,"firstname":"string","lastname":"string","age":0},{"id":22,"firstname":"string","lastname":"string","age":0},{"id":23,"firstname":"string","lastname":"string","age":0},{"id":24,"firstname":"string","lastname":"string","age":0},{"id":25,"firstname":"string","lastname":"string","age":0},{"id":26,"firstname":"string","lastname":"string","age":0},{"id":27,"firstname":"string","lastname":"string","age":0}]}
2023-08-04 16:21:25,294 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - REQUEST INFO:  [TraceId: 0HMSKRHVPIHGD:00000002] - Schema: http - Method: GET - Host: localhost:5049 - Path: /author/list - QueryString:  - Client IP: ::1 - RequestBody: 
2023-08-04 16:21:25,297 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - RESPONSE INFO: [TraceId: 0HMSKRHVPIHGD:00000002] - Status: 200 - SpentTime: 2ms - Response Body: {"success":true,"message":"SUCCESS","data":[{"id":2,"firstname":"Bekzod","lastname":"Toshpulatov","age":0},{"id":3,"firstname":"string","lastname":"string","age":0},{"id":4,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":5,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":6,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":7,"firstname":"string","lastname":"string","age":0},{"id":8,"firstname":"string","lastname":"string","age":0},{"id":9,"firstname":"string","lastname":"string","age":0},{"id":10,"firstname":"ewrew","lastname":"rewrwerwe","age":0},{"id":11,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":12,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":14,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":15,"firstname":"uheiqwguwehng","lastname":"asfewgew","age":122},{"id":16,"firstname":"string","lastname":"string","age":0},{"id":17,"firstname":"string","lastname":"string","age":0},{"id":18,"firstname":"string","lastname":"string","age":0},{"id":19,"firstname":"string","lastname":"string","age":0},{"id":20,"firstname":"string","lastname":"string","age":0},{"id":21,"firstname":"string","lastname":"string","age":0},{"id":22,"firstname":"string","lastname":"string","age":0},{"id":23,"firstname":"string","lastname":"string","age":0},{"id":24,"firstname":"string","lastname":"string","age":0},{"id":25,"firstname":"string","lastname":"string","age":0},{"id":26,"firstname":"string","lastname":"string","age":0},{"id":27,"firstname":"string","lastname":"string","age":0}]}
2023-08-04 16:21:25,467 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - REQUEST INFO:  [TraceId: 0HMSKRHVPIHGD:00000003] - Schema: http - Method: GET - Host: localhost:5049 - Path: /author/list - QueryString:  - Client IP: ::1 - RequestBody: 
2023-08-04 16:21:25,469 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - RESPONSE INFO: [TraceId: 0HMSKRHVPIHGD:00000003] - Status: 200 - SpentTime: 1ms - Response Body: {"success":true,"message":"SUCCESS","data":[{"id":2,"firstname":"Bekzod","lastname":"Toshpulatov","age":0},{"id":3,"firstname":"string","lastname":"string","age":0},{"id":4,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":5,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":6,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":7,"firstname":"string","lastname":"string","age":0},{"id":8,"firstname":"string","lastname":"string","age":0},{"id":9,"firstname":"string","lastname":"string","age":0},{"id":10,"firstname":"ewrew","lastname":"rewrwerwe","age":0},{"id":11,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":12,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":14,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":15,"firstname":"uheiqwguwehng","lastname":"asfewgew","age":122},{"id":16,"firstname":"string","lastname":"string","age":0},{"id":17,"firstname":"string","lastname":"string","age":0},{"id":18,"firstname":"string","lastname":"string","age":0},{"id":19,"firstname":"string","lastname":"string","age":0},{"id":20,"firstname":"string","lastname":"string","age":0},{"id":21,"firstname":"string","lastname":"string","age":0},{"id":22,"firstname":"string","lastname":"string","age":0},{"id":23,"firstname":"string","lastname":"string","age":0},{"id":24,"firstname":"string","lastname":"string","age":0},{"id":25,"firstname":"string","lastname":"string","age":0},{"id":26,"firstname":"string","lastname":"string","age":0},{"id":27,"firstname":"string","lastname":"string","age":0}]}
2023-08-04 16:21:42,711 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - REQUEST INFO:  [TraceId: 0HMSKRHVPIHGE:00000001] - Schema: http - Method: GET - Host: localhost:5049 - Path: /author/list - QueryString:  - Client IP: ::1 - RequestBody: 
2023-08-04 16:21:42,718 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - RESPONSE INFO: [TraceId: 0HMSKRHVPIHGE:00000001] - Status: 200 - SpentTime: 5ms - Response Body: {"success":true,"message":"SUCCESS","data":[{"id":2,"firstname":"Bekzod","lastname":"Toshpulatov","age":0},{"id":3,"firstname":"string","lastname":"string","age":0},{"id":4,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":5,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":6,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":7,"firstname":"string","lastname":"string","age":0},{"id":8,"firstname":"string","lastname":"string","age":0},{"id":9,"firstname":"string","lastname":"string","age":0},{"id":10,"firstname":"ewrew","lastname":"rewrwerwe","age":0},{"id":11,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":12,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":14,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":15,"firstname":"uheiqwguwehng","lastname":"asfewgew","age":122},{"id":16,"firstname":"string","lastname":"string","age":0},{"id":17,"firstname":"string","lastname":"string","age":0},{"id":18,"firstname":"string","lastname":"string","age":0},{"id":19,"firstname":"string","lastname":"string","age":0},{"id":20,"firstname":"string","lastname":"string","age":0},{"id":21,"firstname":"string","lastname":"string","age":0},{"id":22,"firstname":"string","lastname":"string","age":0},{"id":23,"firstname":"string","lastname":"string","age":0},{"id":24,"firstname":"string","lastname":"string","age":0},{"id":25,"firstname":"string","lastname":"string","age":0},{"id":26,"firstname":"string","lastname":"string","age":0},{"id":27,"firstname":"string","lastname":"string","age":0}]}
2023-08-04 16:25:47,070 [25] INFO  Microsoft.Hosting.Lifetime - Application is shutting down...
2023-08-04 16:48:26,410 [1] INFO  Microsoft.Hosting.Lifetime - Now listening on: http://localhost:5049
2023-08-04 16:48:26,422 [1] INFO  Microsoft.Hosting.Lifetime - Application started. Press Ctrl+C to shut down.
2023-08-04 16:48:26,423 [1] INFO  Microsoft.Hosting.Lifetime - Hosting environment: Development
2023-08-04 16:48:26,423 [1] INFO  Microsoft.Hosting.Lifetime - Content root path: P:\C#\BookStore\BookStore
2023-08-04 16:48:34,056 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - REQUEST INFO:  [TraceId: 0HMSKS2RGO38N:00000001] - Schema: http - Method: GET - Host: localhost:5049 - Path: /author/list - QueryString:  - Client IP: ::1 - RequestBody: 
2023-08-04 16:51:28,108 [1] INFO  Microsoft.Hosting.Lifetime - Now listening on: http://localhost:5049
2023-08-04 16:51:28,118 [1] INFO  Microsoft.Hosting.Lifetime - Application started. Press Ctrl+C to shut down.
2023-08-04 16:51:28,118 [1] INFO  Microsoft.Hosting.Lifetime - Hosting environment: Development
2023-08-04 16:51:28,118 [1] INFO  Microsoft.Hosting.Lifetime - Content root path: P:\C#\BookStore\BookStore
2023-08-04 16:51:36,300 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - REQUEST INFO:  [TraceId: 0HMSKS4HIHS99:00000003] - Schema: http - Method: GET - Host: localhost:5049 - Path: /author/list - QueryString:  - Client IP: ::1 - RequestBody: 
2023-08-04 16:52:27,671 [.NET ThreadPool Worker] ERROR BookStore.DAL.Repositories.AuthorRepository - 0HMSKS4HIHS99:00000003 - GetAll(IHttpContextAccessor accessor) - ErrorMessage 42P01: relation "authors" does not exist

POSITION: 15
2023-08-04 16:52:27,735 [.NET ThreadPool Worker] ERROR BookStore.Service.Implementations.AuthorService - 0HMSKS4HIHS99:00000003 - ListService(IHttpContextAccessor accessor) - ErrorMessage 42P01: relation "authors" does not exist

POSITION: 15
2023-08-04 16:52:27,755 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - RESPONSE INFO: [TraceId: 0HMSKS4HIHS99:00000003] - Status: 200 - SpentTime: 51454ms - Response Body: {"success":false,"message":"42P01: relation \"authors\" does not exist\r\n\r\nPOSITION: 15","data":null}
2023-08-04 16:53:23,295 [1] INFO  Microsoft.Hosting.Lifetime - Now listening on: http://localhost:5049
2023-08-04 16:53:23,306 [1] INFO  Microsoft.Hosting.Lifetime - Application started. Press Ctrl+C to shut down.
2023-08-04 16:53:23,306 [1] INFO  Microsoft.Hosting.Lifetime - Hosting environment: Development
2023-08-04 16:53:23,306 [1] INFO  Microsoft.Hosting.Lifetime - Content root path: P:\C#\BookStore\BookStore
2023-08-04 16:53:28,436 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - REQUEST INFO:  [TraceId: 0HMSKS5JTSJLI:00000001] - Schema: http - Method: GET - Host: localhost:5049 - Path: /author/list - QueryString:  - Client IP: ::1 - RequestBody: 
2023-08-04 16:54:27,574 [1] INFO  Microsoft.Hosting.Lifetime - Now listening on: http://localhost:5049
2023-08-04 16:54:27,586 [1] INFO  Microsoft.Hosting.Lifetime - Application started. Press Ctrl+C to shut down.
2023-08-04 16:54:27,586 [1] INFO  Microsoft.Hosting.Lifetime - Hosting environment: Development
2023-08-04 16:54:27,586 [1] INFO  Microsoft.Hosting.Lifetime - Content root path: P:\C#\BookStore\BookStore
2023-08-04 16:54:31,179 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - REQUEST INFO:  [TraceId: 0HMSKS6723NQ1:00000003] - Schema: http - Method: GET - Host: localhost:5049 - Path: /author/list - QueryString:  - Client IP: ::1 - RequestBody: 
2023-08-04 16:55:30,138 [1] INFO  Microsoft.Hosting.Lifetime - Now listening on: http://localhost:5049
2023-08-04 16:55:30,150 [1] INFO  Microsoft.Hosting.Lifetime - Application started. Press Ctrl+C to shut down.
2023-08-04 16:55:30,151 [1] INFO  Microsoft.Hosting.Lifetime - Hosting environment: Development
2023-08-04 16:55:30,151 [1] INFO  Microsoft.Hosting.Lifetime - Content root path: P:\C#\BookStore\BookStore
2023-08-04 16:55:33,577 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - REQUEST INFO:  [TraceId: 0HMSKS6PNSS70:00000003] - Schema: http - Method: GET - Host: localhost:5049 - Path: /author/list - QueryString:  - Client IP: ::1 - RequestBody: 
2023-08-04 16:56:15,483 [1] INFO  Microsoft.Hosting.Lifetime - Now listening on: http://localhost:5049
2023-08-04 16:56:15,492 [1] INFO  Microsoft.Hosting.Lifetime - Application started. Press Ctrl+C to shut down.
2023-08-04 16:56:15,493 [1] INFO  Microsoft.Hosting.Lifetime - Hosting environment: Development
2023-08-04 16:56:15,493 [1] INFO  Microsoft.Hosting.Lifetime - Content root path: P:\C#\BookStore\BookStore
2023-08-04 16:56:21,198 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - REQUEST INFO:  [TraceId: 0HMSKS777HB84:00000001] - Schema: http - Method: GET - Host: localhost:5049 - Path: /author/list - QueryString:  - Client IP: ::1 - RequestBody: 
2023-08-04 16:56:21,651 [.NET ThreadPool Worker] ERROR BookStore.DAL.Repositories.AuthorRepository - 0HMSKS777HB84:00000001 - GetAll(IHttpContextAccessor accessor) - ErrorMessage 42P01: relation "public.authors" does not exist

POSITION: 15
2023-08-04 16:56:21,653 [.NET ThreadPool Worker] ERROR BookStore.Service.Implementations.AuthorService - 0HMSKS777HB84:00000001 - ListService(IHttpContextAccessor accessor) - ErrorMessage 42P01: relation "public.authors" does not exist

POSITION: 15
2023-08-04 16:56:21,675 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - RESPONSE INFO: [TraceId: 0HMSKS777HB84:00000001] - Status: 200 - SpentTime: 475ms - Response Body: {"success":false,"message":"42P01: relation \"public.authors\" does not exist\r\n\r\nPOSITION: 15","data":null}
2023-08-04 17:27:36,369 [3] INFO  Microsoft.Hosting.Lifetime - Application is shutting down...
2023-08-04 17:27:44,021 [1] INFO  Microsoft.Hosting.Lifetime - Now listening on: http://localhost:5049
2023-08-04 17:27:44,030 [1] INFO  Microsoft.Hosting.Lifetime - Application started. Press Ctrl+C to shut down.
2023-08-04 17:27:44,031 [1] INFO  Microsoft.Hosting.Lifetime - Hosting environment: Development
2023-08-04 17:27:44,031 [1] INFO  Microsoft.Hosting.Lifetime - Content root path: P:\C#\BookStore\BookStore
2023-08-04 17:27:48,583 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - REQUEST INFO:  [TraceId: 0HMSKSOQ3QO85:00000003] - Schema: http - Method: GET - Host: localhost:5049 - Path: /author/list - QueryString:  - Client IP: ::1 - RequestBody: 
2023-08-04 17:27:49,093 [.NET ThreadPool Worker] ERROR BookStore.DAL.Repositories.AuthorRepository - 0HMSKSOQ3QO85:00000003 - GetAll(IHttpContextAccessor accessor) - ErrorMessage 42P01: relation "author" does not exist

POSITION: 15
2023-08-04 17:27:49,095 [.NET ThreadPool Worker] ERROR BookStore.Service.Implementations.AuthorService - 0HMSKSOQ3QO85:00000003 - ListService(IHttpContextAccessor accessor) - ErrorMessage 42P01: relation "author" does not exist

POSITION: 15
2023-08-04 17:27:49,119 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - RESPONSE INFO: [TraceId: 0HMSKSOQ3QO85:00000003] - Status: 200 - SpentTime: 535ms - Response Body: {"success":false,"message":"42P01: relation \"author\" does not exist\r\n\r\nPOSITION: 15","data":null}
2023-08-04 17:29:45,205 [3] INFO  Microsoft.Hosting.Lifetime - Application is shutting down...
2023-08-04 17:29:48,955 [1] INFO  Microsoft.Hosting.Lifetime - Now listening on: http://localhost:5049
2023-08-04 17:29:48,965 [1] INFO  Microsoft.Hosting.Lifetime - Application started. Press Ctrl+C to shut down.
2023-08-04 17:29:48,965 [1] INFO  Microsoft.Hosting.Lifetime - Hosting environment: Development
2023-08-04 17:29:48,965 [1] INFO  Microsoft.Hosting.Lifetime - Content root path: P:\C#\BookStore\BookStore
2023-08-04 17:29:53,252 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - REQUEST INFO:  [TraceId: 0HMSKSPVD5DEP:00000001] - Schema: http - Method: GET - Host: localhost:5049 - Path: /author/list - QueryString:  - Client IP: ::1 - RequestBody: 
2023-08-04 17:29:53,672 [.NET ThreadPool Worker] ERROR BookStore.DAL.Repositories.AuthorRepository - 0HMSKSPVD5DEP:00000001 - GetAll(IHttpContextAccessor accessor) - ErrorMessage 42601: syntax error at or near "'Author'"

POSITION: 22
2023-08-04 17:29:53,673 [.NET ThreadPool Worker] ERROR BookStore.Service.Implementations.AuthorService - 0HMSKSPVD5DEP:00000001 - ListService(IHttpContextAccessor accessor) - ErrorMessage 42601: syntax error at or near "'Author'"

POSITION: 22
2023-08-04 17:29:53,694 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - RESPONSE INFO: [TraceId: 0HMSKSPVD5DEP:00000001] - Status: 200 - SpentTime: 440ms - Response Body: {"success":false,"message":"42601: syntax error at or near \"'Author'\"\r\n\r\nPOSITION: 22","data":null}
2023-08-04 17:30:27,387 [15] INFO  Microsoft.Hosting.Lifetime - Application is shutting down...
2023-08-04 17:30:33,354 [1] INFO  Microsoft.Hosting.Lifetime - Now listening on: http://localhost:5049
2023-08-04 17:30:33,364 [1] INFO  Microsoft.Hosting.Lifetime - Application started. Press Ctrl+C to shut down.
2023-08-04 17:30:33,364 [1] INFO  Microsoft.Hosting.Lifetime - Hosting environment: Development
2023-08-04 17:30:33,364 [1] INFO  Microsoft.Hosting.Lifetime - Content root path: P:\C#\BookStore\BookStore
2023-08-04 17:30:38,595 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - REQUEST INFO:  [TraceId: 0HMSKSQCJPTEG:00000003] - Schema: http - Method: GET - Host: localhost:5049 - Path: /author/list - QueryString:  - Client IP: ::1 - RequestBody: 
2023-08-04 17:30:39,147 [.NET ThreadPool Worker] ERROR BookStore.DAL.Repositories.AuthorRepository - 0HMSKSQCJPTEG:00000003 - GetAll(IHttpContextAccessor accessor) - ErrorMessage 42P01: relation "public.Author" does not exist

POSITION: 15
2023-08-04 17:30:39,149 [.NET ThreadPool Worker] ERROR BookStore.Service.Implementations.AuthorService - 0HMSKSQCJPTEG:00000003 - ListService(IHttpContextAccessor accessor) - ErrorMessage 42P01: relation "public.Author" does not exist

POSITION: 15
2023-08-04 17:30:39,181 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - RESPONSE INFO: [TraceId: 0HMSKSQCJPTEG:00000003] - Status: 200 - SpentTime: 583ms - Response Body: {"success":false,"message":"42P01: relation \"public.Author\" does not exist\r\n\r\nPOSITION: 15","data":null}
2023-08-04 17:35:21,117 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - REQUEST INFO:  [TraceId: 0HMSKSQCJPTEI:00000001] - Schema: http - Method: GET - Host: localhost:5049 - Path: /author/list - QueryString:  - Client IP: ::1 - RequestBody: 
2023-08-04 17:35:21,133 [.NET ThreadPool Worker] ERROR BookStore.DAL.Repositories.AuthorRepository - 0HMSKSQCJPTEI:00000001 - GetAll(IHttpContextAccessor accessor) - ErrorMessage 42P01: relation "public.Author" does not exist

POSITION: 15
2023-08-04 17:35:21,133 [.NET ThreadPool Worker] ERROR BookStore.Service.Implementations.AuthorService - 0HMSKSQCJPTEI:00000001 - ListService(IHttpContextAccessor accessor) - ErrorMessage 42P01: relation "public.Author" does not exist

POSITION: 15
2023-08-04 17:35:21,134 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - RESPONSE INFO: [TraceId: 0HMSKSQCJPTEI:00000001] - Status: 200 - SpentTime: 16ms - Response Body: {"success":false,"message":"42P01: relation \"public.Author\" does not exist\r\n\r\nPOSITION: 15","data":null}
2023-08-04 17:35:57,388 [3] INFO  Microsoft.Hosting.Lifetime - Application is shutting down...
2023-08-04 17:36:01,432 [1] INFO  Microsoft.Hosting.Lifetime - Now listening on: http://localhost:5049
2023-08-04 17:36:01,444 [1] INFO  Microsoft.Hosting.Lifetime - Application started. Press Ctrl+C to shut down.
2023-08-04 17:36:01,444 [1] INFO  Microsoft.Hosting.Lifetime - Hosting environment: Development
2023-08-04 17:36:01,445 [1] INFO  Microsoft.Hosting.Lifetime - Content root path: P:\C#\BookStore\BookStore
2023-08-04 17:36:05,210 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - REQUEST INFO:  [TraceId: 0HMSKSTE90P2H:00000003] - Schema: http - Method: GET - Host: localhost:5049 - Path: /author/list - QueryString:  - Client IP: ::1 - RequestBody: 
2023-08-04 17:36:05,664 [.NET ThreadPool Worker] ERROR BookStore.DAL.Repositories.AuthorRepository - 0HMSKSTE90P2H:00000003 - GetAll(IHttpContextAccessor accessor) - ErrorMessage 42P01: relation "authors" does not exist

POSITION: 15
2023-08-04 17:36:05,666 [.NET ThreadPool Worker] ERROR BookStore.Service.Implementations.AuthorService - 0HMSKSTE90P2H:00000003 - ListService(IHttpContextAccessor accessor) - ErrorMessage 42P01: relation "authors" does not exist

POSITION: 15
2023-08-04 17:36:05,688 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - RESPONSE INFO: [TraceId: 0HMSKSTE90P2H:00000003] - Status: 200 - SpentTime: 476ms - Response Body: {"success":false,"message":"42P01: relation \"authors\" does not exist\r\n\r\nPOSITION: 15","data":null}
2023-08-04 17:36:17,758 [15] INFO  Microsoft.Hosting.Lifetime - Application is shutting down...
2023-08-04 17:36:23,591 [1] INFO  Microsoft.Hosting.Lifetime - Now listening on: http://localhost:5049
2023-08-04 17:36:23,600 [1] INFO  Microsoft.Hosting.Lifetime - Application started. Press Ctrl+C to shut down.
2023-08-04 17:36:23,600 [1] INFO  Microsoft.Hosting.Lifetime - Hosting environment: Development
2023-08-04 17:36:23,600 [1] INFO  Microsoft.Hosting.Lifetime - Content root path: P:\C#\BookStore\BookStore
2023-08-04 17:36:27,630 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - REQUEST INFO:  [TraceId: 0HMSKSTL0C3JR:00000003] - Schema: http - Method: GET - Host: localhost:5049 - Path: /author/list - QueryString:  - Client IP: ::1 - RequestBody: 
2023-08-04 17:36:28,067 [.NET ThreadPool Worker] ERROR BookStore.DAL.Repositories.AuthorRepository - 0HMSKSTL0C3JR:00000003 - GetAll(IHttpContextAccessor accessor) - ErrorMessage Field not found in row: column_name
2023-08-04 17:36:28,070 [.NET ThreadPool Worker] ERROR BookStore.Service.Implementations.AuthorService - 0HMSKSTL0C3JR:00000003 - ListService(IHttpContextAccessor accessor) - ErrorMessage Field not found in row: column_name
2023-08-04 17:36:28,092 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - RESPONSE INFO: [TraceId: 0HMSKSTL0C3JR:00000003] - Status: 200 - SpentTime: 460ms - Response Body: {"success":false,"message":"Field not found in row: column_name","data":null}
2023-08-04 17:37:07,752 [3] INFO  Microsoft.Hosting.Lifetime - Application is shutting down...
2023-08-04 17:37:13,302 [1] INFO  Microsoft.Hosting.Lifetime - Now listening on: http://localhost:5049
2023-08-04 17:37:13,316 [1] INFO  Microsoft.Hosting.Lifetime - Application started. Press Ctrl+C to shut down.
2023-08-04 17:37:13,316 [1] INFO  Microsoft.Hosting.Lifetime - Hosting environment: Development
2023-08-04 17:37:13,317 [1] INFO  Microsoft.Hosting.Lifetime - Content root path: P:\C#\BookStore\BookStore
2023-08-04 17:37:17,135 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - REQUEST INFO:  [TraceId: 0HMSKSU3NCL1N:00000001] - Schema: http - Method: GET - Host: localhost:5049 - Path: /author/list - QueryString:  - Client IP: ::1 - RequestBody: 
2023-08-04 17:37:18,794 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - RESPONSE INFO: [TraceId: 0HMSKSU3NCL1N:00000001] - Status: 200 - SpentTime: 1657ms - Response Body: {"success":true,"message":"SUCCESS","data":[{"id":2,"firstname":"Bekzod","lastname":"Toshpulatov","age":0},{"id":3,"firstname":"string","lastname":"string","age":0},{"id":4,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":5,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":6,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":7,"firstname":"string","lastname":"string","age":0},{"id":8,"firstname":"string","lastname":"string","age":0},{"id":9,"firstname":"string","lastname":"string","age":0},{"id":10,"firstname":"ewrew","lastname":"rewrwerwe","age":0},{"id":11,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":12,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":14,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":15,"firstname":"uheiqwguwehng","lastname":"asfewgew","age":122},{"id":16,"firstname":"string","lastname":"string","age":0},{"id":17,"firstname":"string","lastname":"string","age":0},{"id":18,"firstname":"string","lastname":"string","age":0},{"id":19,"firstname":"string","lastname":"string","age":0},{"id":20,"firstname":"string","lastname":"string","age":0},{"id":21,"firstname":"string","lastname":"string","age":0},{"id":22,"firstname":"string","lastname":"string","age":0},{"id":23,"firstname":"string","lastname":"string","age":0},{"id":24,"firstname":"string","lastname":"string","age":0},{"id":25,"firstname":"string","lastname":"string","age":0},{"id":26,"firstname":"string","lastname":"string","age":0},{"id":27,"firstname":"string","lastname":"string","age":0}]}
2023-08-04 17:44:46,642 [3] INFO  Microsoft.Hosting.Lifetime - Application is shutting down...
2023-08-04 17:44:51,166 [1] INFO  Microsoft.Hosting.Lifetime - Now listening on: http://localhost:5049
2023-08-04 17:44:51,176 [1] INFO  Microsoft.Hosting.Lifetime - Application started. Press Ctrl+C to shut down.
2023-08-04 17:44:51,176 [1] INFO  Microsoft.Hosting.Lifetime - Hosting environment: Development
2023-08-04 17:44:51,176 [1] INFO  Microsoft.Hosting.Lifetime - Content root path: P:\C#\BookStore\BookStore
2023-08-04 17:44:54,916 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - REQUEST INFO:  [TraceId: 0HMSKT2C8EQLF:00000003] - Schema: http - Method: GET - Host: localhost:5049 - Path: /author/list - QueryString:  - Client IP: ::1 - RequestBody: 
2023-08-04 17:44:55,392 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - RESPONSE INFO: [TraceId: 0HMSKT2C8EQLF:00000003] - Status: 200 - SpentTime: 475ms - Response Body: {"success":true,"message":"SUCCESS","data":[{"id":2,"firstname":"Bekzod","lastname":"Toshpulatov","age":0},{"id":3,"firstname":"string","lastname":"string","age":0},{"id":4,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":5,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":6,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":7,"firstname":"string","lastname":"string","age":0},{"id":8,"firstname":"string","lastname":"string","age":0},{"id":9,"firstname":"string","lastname":"string","age":0},{"id":10,"firstname":"ewrew","lastname":"rewrwerwe","age":0},{"id":11,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":12,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":14,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":15,"firstname":"uheiqwguwehng","lastname":"asfewgew","age":122},{"id":16,"firstname":"string","lastname":"string","age":0},{"id":17,"firstname":"string","lastname":"string","age":0},{"id":18,"firstname":"string","lastname":"string","age":0},{"id":19,"firstname":"string","lastname":"string","age":0},{"id":20,"firstname":"string","lastname":"string","age":0},{"id":21,"firstname":"string","lastname":"string","age":0},{"id":22,"firstname":"string","lastname":"string","age":0},{"id":23,"firstname":"string","lastname":"string","age":0},{"id":24,"firstname":"string","lastname":"string","age":0},{"id":25,"firstname":"string","lastname":"string","age":0},{"id":26,"firstname":"string","lastname":"string","age":0},{"id":27,"firstname":"string","lastname":"string","age":0}]}
2023-08-04 17:45:07,960 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - REQUEST INFO:  [TraceId: 0HMSKT2C8EQLH:00000001] - Schema: http - Method: GET - Host: localhost:5049 - Path: /author/list - QueryString:  - Client IP: ::1 - RequestBody: 
2023-08-04 17:45:07,982 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - RESPONSE INFO: [TraceId: 0HMSKT2C8EQLH:00000001] - Status: 200 - SpentTime: 21ms - Response Body: {"success":true,"message":"SUCCESS","data":[{"id":2,"firstname":"Bekzod","lastname":"Toshpulatov","age":0},{"id":3,"firstname":"string","lastname":"string","age":0},{"id":4,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":5,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":6,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":7,"firstname":"string","lastname":"string","age":0},{"id":8,"firstname":"string","lastname":"string","age":0},{"id":9,"firstname":"string","lastname":"string","age":0},{"id":10,"firstname":"ewrew","lastname":"rewrwerwe","age":0},{"id":11,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":12,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":14,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":15,"firstname":"uheiqwguwehng","lastname":"asfewgew","age":122},{"id":16,"firstname":"string","lastname":"string","age":0},{"id":17,"firstname":"string","lastname":"string","age":0},{"id":18,"firstname":"string","lastname":"string","age":0},{"id":19,"firstname":"string","lastname":"string","age":0},{"id":20,"firstname":"string","lastname":"string","age":0},{"id":21,"firstname":"string","lastname":"string","age":0},{"id":22,"firstname":"string","lastname":"string","age":0},{"id":23,"firstname":"string","lastname":"string","age":0},{"id":24,"firstname":"string","lastname":"string","age":0},{"id":25,"firstname":"string","lastname":"string","age":0},{"id":26,"firstname":"string","lastname":"string","age":0},{"id":27,"firstname":"string","lastname":"string","age":0}]}
2023-08-04 17:45:10,751 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - REQUEST INFO:  [TraceId: 0HMSKT2C8EQLH:00000002] - Schema: http - Method: GET - Host: localhost:5049 - Path: /author/list - QueryString:  - Client IP: ::1 - RequestBody: 
2023-08-04 17:45:10,758 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - RESPONSE INFO: [TraceId: 0HMSKT2C8EQLH:00000002] - Status: 200 - SpentTime: 6ms - Response Body: {"success":true,"message":"SUCCESS","data":[{"id":2,"firstname":"Bekzod","lastname":"Toshpulatov","age":0},{"id":3,"firstname":"string","lastname":"string","age":0},{"id":4,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":5,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":6,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":7,"firstname":"string","lastname":"string","age":0},{"id":8,"firstname":"string","lastname":"string","age":0},{"id":9,"firstname":"string","lastname":"string","age":0},{"id":10,"firstname":"ewrew","lastname":"rewrwerwe","age":0},{"id":11,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":12,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":14,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":15,"firstname":"uheiqwguwehng","lastname":"asfewgew","age":122},{"id":16,"firstname":"string","lastname":"string","age":0},{"id":17,"firstname":"string","lastname":"string","age":0},{"id":18,"firstname":"string","lastname":"string","age":0},{"id":19,"firstname":"string","lastname":"string","age":0},{"id":20,"firstname":"string","lastname":"string","age":0},{"id":21,"firstname":"string","lastname":"string","age":0},{"id":22,"firstname":"string","lastname":"string","age":0},{"id":23,"firstname":"string","lastname":"string","age":0},{"id":24,"firstname":"string","lastname":"string","age":0},{"id":25,"firstname":"string","lastname":"string","age":0},{"id":26,"firstname":"string","lastname":"string","age":0},{"id":27,"firstname":"string","lastname":"string","age":0}]}
2023-08-04 17:45:18,480 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - REQUEST INFO:  [TraceId: 0HMSKT2C8EQLI:00000001] - Schema: http - Method: GET - Host: localhost:5049 - Path: /book/list - QueryString:  - Client IP: ::1 - RequestBody: 
2023-08-04 17:45:20,149 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - RESPONSE INFO: [TraceId: 0HMSKT2C8EQLI:00000001] - Status: 200 - SpentTime: 1668ms - Response Body: {"success":true,"message":"SUCCESS","data":[{"id":13,"title":"safdsfaffqwe","description":"qwegwegqwe","createdAt":"2023-08-02T04:37:41.115083Z","imagePath":"2177e58b-c547-4669-88e1-76bf91344167.jpg","authorId":3,"genres":[{"id":1,"name":"Comedy"},{"id":2,"name":"UJAS"},{"id":3,"name":"Romantic"}]},{"id":14,"title":"Kino","description":"Bookq fernfunreubfreubgreghbre hgjrbhgeb rhbgreb gr","createdAt":"2023-07-26T12:02:04.479141Z","imagePath":null,"authorId":3,"genres":[]},{"id":15,"title":"neoline","description":"neoline","createdAt":"2023-07-26T12:04:38.284355Z","imagePath":null,"authorId":2,"genres":[]},{"id":17,"title":"Book With Image","description":"Hello I Implemented Image Upload","createdAt":"2023-08-01T13:43:44.005005Z","imagePath":null,"authorId":2,"genres":[{"id":2,"name":"UJAS"},{"id":4,"name":"New"}]},{"id":18,"title":"Book With Image 2","description":"Hello I Implemented Image Upload 2","createdAt":"2023-08-01T13:45:09.156436Z","imagePath":null,"authorId":2,"genres":[{"id":2,"name":"UJAS"},{"id":4,"name":"New"}]},{"id":19,"title":"Book With Image 3","description":"Hello I Implemented Image Upload 3","createdAt":"2023-08-01T13:46:44.524278Z","imagePath":null,"authorId":2,"genres":[{"id":2,"name":"UJAS"},{"id":4,"name":"New"}]},{"id":20,"title":"Book With Image 4","description":"Hello I Implemented Image Upload 4","createdAt":"2023-08-01T13:49:00.951604Z","imagePath":null,"authorId":2,"genres":[{"id":2,"name":"UJAS"},{"id":4,"name":"New"}]},{"id":21,"title":"Book With Image 4","description":"Hello I Implemented Image Upload 4","createdAt":"2023-08-01T13:51:12.089066Z","imagePath":"67dbee6b-1b22-4ee8-9ff5-a482250e8cf9.jpg","authorId":2,"genres":[{"id":2,"name":"UJAS"},{"id":4,"name":"New"}]},{"id":53,"title":"bekki","description":"asfy ihfugweufygwyeh iwegbufjweigfewjfigweoifh uejopivfuwe","createdAt":"2023-08-03T05:51:59.689751Z","imagePath":"17045a91-d619-4917-95f4-92bedf2456cc.jpg","authorId":2,"genres":[{"id":3,"name":"Romantic"},{"id":4,"name":"New"}]}]}
2023-08-04 17:45:36,546 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - REQUEST INFO:  [TraceId: 0HMSKT2C8EQLJ:00000001] - Schema: http - Method: GET - Host: localhost:5049 - Path: /book/list - QueryString:  - Client IP: ::1 - RequestBody: 
2023-08-04 17:45:36,608 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - RESPONSE INFO: [TraceId: 0HMSKT2C8EQLJ:00000001] - Status: 200 - SpentTime: 61ms - Response Body: {"success":true,"message":"SUCCESS","data":[{"id":13,"title":"safdsfaffqwe","description":"qwegwegqwe","createdAt":"2023-08-02T04:37:41.115083Z","imagePath":"2177e58b-c547-4669-88e1-76bf91344167.jpg","authorId":3,"genres":[{"id":1,"name":"Comedy"},{"id":2,"name":"UJAS"},{"id":3,"name":"Romantic"}]},{"id":14,"title":"Kino","description":"Bookq fernfunreubfreubgreghbre hgjrbhgeb rhbgreb gr","createdAt":"2023-07-26T12:02:04.479141Z","imagePath":null,"authorId":3,"genres":[]},{"id":15,"title":"neoline","description":"neoline","createdAt":"2023-07-26T12:04:38.284355Z","imagePath":null,"authorId":2,"genres":[]},{"id":17,"title":"Book With Image","description":"Hello I Implemented Image Upload","createdAt":"2023-08-01T13:43:44.005005Z","imagePath":null,"authorId":2,"genres":[{"id":2,"name":"UJAS"},{"id":4,"name":"New"}]},{"id":18,"title":"Book With Image 2","description":"Hello I Implemented Image Upload 2","createdAt":"2023-08-01T13:45:09.156436Z","imagePath":null,"authorId":2,"genres":[{"id":2,"name":"UJAS"},{"id":4,"name":"New"}]},{"id":19,"title":"Book With Image 3","description":"Hello I Implemented Image Upload 3","createdAt":"2023-08-01T13:46:44.524278Z","imagePath":null,"authorId":2,"genres":[{"id":2,"name":"UJAS"},{"id":4,"name":"New"}]},{"id":20,"title":"Book With Image 4","description":"Hello I Implemented Image Upload 4","createdAt":"2023-08-01T13:49:00.951604Z","imagePath":null,"authorId":2,"genres":[{"id":2,"name":"UJAS"},{"id":4,"name":"New"}]},{"id":21,"title":"Book With Image 4","description":"Hello I Implemented Image Upload 4","createdAt":"2023-08-01T13:51:12.089066Z","imagePath":"67dbee6b-1b22-4ee8-9ff5-a482250e8cf9.jpg","authorId":2,"genres":[{"id":2,"name":"UJAS"},{"id":4,"name":"New"}]},{"id":53,"title":"bekki","description":"asfy ihfugweufygwyeh iwegbufjweigfewjfigweoifh uejopivfuwe","createdAt":"2023-08-03T05:51:59.689751Z","imagePath":"17045a91-d619-4917-95f4-92bedf2456cc.jpg","authorId":2,"genres":[{"id":3,"name":"Romantic"},{"id":4,"name":"New"}]}]}
2023-08-04 17:45:39,609 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - REQUEST INFO:  [TraceId: 0HMSKT2C8EQLK:00000001] - Schema: http - Method: GET - Host: localhost:5049 - Path: /book/list - QueryString:  - Client IP: ::1 - RequestBody: 
2023-08-04 17:45:39,688 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - RESPONSE INFO: [TraceId: 0HMSKT2C8EQLK:00000001] - Status: 200 - SpentTime: 78ms - Response Body: {"success":true,"message":"SUCCESS","data":[{"id":13,"title":"safdsfaffqwe","description":"qwegwegqwe","createdAt":"2023-08-02T04:37:41.115083Z","imagePath":"2177e58b-c547-4669-88e1-76bf91344167.jpg","authorId":3,"genres":[{"id":1,"name":"Comedy"},{"id":2,"name":"UJAS"},{"id":3,"name":"Romantic"}]},{"id":14,"title":"Kino","description":"Bookq fernfunreubfreubgreghbre hgjrbhgeb rhbgreb gr","createdAt":"2023-07-26T12:02:04.479141Z","imagePath":null,"authorId":3,"genres":[]},{"id":15,"title":"neoline","description":"neoline","createdAt":"2023-07-26T12:04:38.284355Z","imagePath":null,"authorId":2,"genres":[]},{"id":17,"title":"Book With Image","description":"Hello I Implemented Image Upload","createdAt":"2023-08-01T13:43:44.005005Z","imagePath":null,"authorId":2,"genres":[{"id":2,"name":"UJAS"},{"id":4,"name":"New"}]},{"id":18,"title":"Book With Image 2","description":"Hello I Implemented Image Upload 2","createdAt":"2023-08-01T13:45:09.156436Z","imagePath":null,"authorId":2,"genres":[{"id":2,"name":"UJAS"},{"id":4,"name":"New"}]},{"id":19,"title":"Book With Image 3","description":"Hello I Implemented Image Upload 3","createdAt":"2023-08-01T13:46:44.524278Z","imagePath":null,"authorId":2,"genres":[{"id":2,"name":"UJAS"},{"id":4,"name":"New"}]},{"id":20,"title":"Book With Image 4","description":"Hello I Implemented Image Upload 4","createdAt":"2023-08-01T13:49:00.951604Z","imagePath":null,"authorId":2,"genres":[{"id":2,"name":"UJAS"},{"id":4,"name":"New"}]},{"id":21,"title":"Book With Image 4","description":"Hello I Implemented Image Upload 4","createdAt":"2023-08-01T13:51:12.089066Z","imagePath":"67dbee6b-1b22-4ee8-9ff5-a482250e8cf9.jpg","authorId":2,"genres":[{"id":2,"name":"UJAS"},{"id":4,"name":"New"}]},{"id":53,"title":"bekki","description":"asfy ihfugweufygwyeh iwegbufjweigfewjfigweoifh uejopivfuwe","createdAt":"2023-08-03T05:51:59.689751Z","imagePath":"17045a91-d619-4917-95f4-92bedf2456cc.jpg","authorId":2,"genres":[{"id":3,"name":"Romantic"},{"id":4,"name":"New"}]}]}
2023-08-04 17:45:48,467 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - REQUEST INFO:  [TraceId: 0HMSKT2C8EQLL:00000001] - Schema: http - Method: GET - Host: localhost:5049 - Path: /genre/list - QueryString:  - Client IP: ::1 - RequestBody: 
2023-08-04 17:45:48,492 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - RESPONSE INFO: [TraceId: 0HMSKT2C8EQLL:00000001] - Status: 200 - SpentTime: 25ms - Response Body: {"success":true,"message":"SUCCESS","data":[{"id":1,"name":"Comedy"},{"id":3,"name":"Romantic"},{"id":2,"name":"UJAS"},{"id":4,"name":"New"},{"id":6,"name":"nma gap"},{"id":7,"name":"asdasds"},{"id":8,"name":"string"}]}
2023-08-04 17:47:37,477 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - REQUEST INFO:  [TraceId: 0HMSKT2C8EQLM:00000001] - Schema: http - Method: GET - Host: localhost:5049 - Path: /author/list - QueryString:  - Client IP: ::1 - RequestBody: 
2023-08-04 17:47:37,482 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - RESPONSE INFO: [TraceId: 0HMSKT2C8EQLM:00000001] - Status: 200 - SpentTime: 3ms - Response Body: {"success":true,"message":"SUCCESS","data":[{"id":2,"firstname":"Bekzod","lastname":"Toshpulatov","age":0},{"id":3,"firstname":"string","lastname":"string","age":0},{"id":4,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":5,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":6,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":7,"firstname":"string","lastname":"string","age":0},{"id":8,"firstname":"string","lastname":"string","age":0},{"id":9,"firstname":"string","lastname":"string","age":0},{"id":10,"firstname":"ewrew","lastname":"rewrwerwe","age":0},{"id":11,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":12,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":14,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":15,"firstname":"uheiqwguwehng","lastname":"asfewgew","age":122},{"id":16,"firstname":"string","lastname":"string","age":0},{"id":17,"firstname":"string","lastname":"string","age":0},{"id":18,"firstname":"string","lastname":"string","age":0},{"id":19,"firstname":"string","lastname":"string","age":0},{"id":20,"firstname":"string","lastname":"string","age":0},{"id":21,"firstname":"string","lastname":"string","age":0},{"id":22,"firstname":"string","lastname":"string","age":0},{"id":23,"firstname":"string","lastname":"string","age":0},{"id":24,"firstname":"string","lastname":"string","age":0},{"id":25,"firstname":"string","lastname":"string","age":0},{"id":26,"firstname":"string","lastname":"string","age":0},{"id":27,"firstname":"string","lastname":"string","age":0}]}
2023-08-04 17:47:49,697 [3] INFO  Microsoft.Hosting.Lifetime - Application is shutting down...
2023-08-04 17:47:54,956 [1] INFO  Microsoft.Hosting.Lifetime - Now listening on: http://localhost:5049
2023-08-04 17:47:54,973 [1] INFO  Microsoft.Hosting.Lifetime - Application started. Press Ctrl+C to shut down.
2023-08-04 17:47:54,973 [1] INFO  Microsoft.Hosting.Lifetime - Hosting environment: Development
2023-08-04 17:47:54,973 [1] INFO  Microsoft.Hosting.Lifetime - Content root path: P:\C#\BookStore\BookStore
2023-08-04 17:48:03,461 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - REQUEST INFO:  [TraceId: 0HMSKT432HPDU:00000001] - Schema: http - Method: GET - Host: localhost:5049 - Path: /author/list - QueryString:  - Client IP: ::1 - RequestBody: 
2023-08-04 17:48:05,376 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - RESPONSE INFO: [TraceId: 0HMSKT432HPDU:00000001] - Status: 200 - SpentTime: 1910ms - Response Body: {"success":true,"message":"SUCCESS","data":[{"id":2,"firstname":"Bekzod","lastname":"Toshpulatov","age":0},{"id":3,"firstname":"string","lastname":"string","age":0},{"id":4,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":5,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":6,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":7,"firstname":"string","lastname":"string","age":0},{"id":8,"firstname":"string","lastname":"string","age":0},{"id":9,"firstname":"string","lastname":"string","age":0},{"id":10,"firstname":"ewrew","lastname":"rewrwerwe","age":0},{"id":11,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":12,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":14,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":15,"firstname":"uheiqwguwehng","lastname":"asfewgew","age":122},{"id":16,"firstname":"string","lastname":"string","age":0},{"id":17,"firstname":"string","lastname":"string","age":0},{"id":18,"firstname":"string","lastname":"string","age":0},{"id":19,"firstname":"string","lastname":"string","age":0},{"id":20,"firstname":"string","lastname":"string","age":0},{"id":21,"firstname":"string","lastname":"string","age":0},{"id":22,"firstname":"string","lastname":"string","age":0},{"id":23,"firstname":"string","lastname":"string","age":0},{"id":24,"firstname":"string","lastname":"string","age":0},{"id":25,"firstname":"string","lastname":"string","age":0},{"id":26,"firstname":"string","lastname":"string","age":0},{"id":27,"firstname":"string","lastname":"string","age":0}]}
2023-08-04 17:48:14,067 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - REQUEST INFO:  [TraceId: 0HMSKT432HPDV:00000001] - Schema: http - Method: GET - Host: localhost:5049 - Path: /author/list - QueryString:  - Client IP: ::1 - RequestBody: 
2023-08-04 17:48:14,125 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - RESPONSE INFO: [TraceId: 0HMSKT432HPDV:00000001] - Status: 200 - SpentTime: 56ms - Response Body: {"success":true,"message":"SUCCESS","data":[{"id":2,"firstname":"Bekzod","lastname":"Toshpulatov","age":0},{"id":3,"firstname":"string","lastname":"string","age":0},{"id":4,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":5,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":6,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":7,"firstname":"string","lastname":"string","age":0},{"id":8,"firstname":"string","lastname":"string","age":0},{"id":9,"firstname":"string","lastname":"string","age":0},{"id":10,"firstname":"ewrew","lastname":"rewrwerwe","age":0},{"id":11,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":12,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":14,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":15,"firstname":"uheiqwguwehng","lastname":"asfewgew","age":122},{"id":16,"firstname":"string","lastname":"string","age":0},{"id":17,"firstname":"string","lastname":"string","age":0},{"id":18,"firstname":"string","lastname":"string","age":0},{"id":19,"firstname":"string","lastname":"string","age":0},{"id":20,"firstname":"string","lastname":"string","age":0},{"id":21,"firstname":"string","lastname":"string","age":0},{"id":22,"firstname":"string","lastname":"string","age":0},{"id":23,"firstname":"string","lastname":"string","age":0},{"id":24,"firstname":"string","lastname":"string","age":0},{"id":25,"firstname":"string","lastname":"string","age":0},{"id":26,"firstname":"string","lastname":"string","age":0},{"id":27,"firstname":"string","lastname":"string","age":0}]}
2023-08-04 17:48:19,661 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - REQUEST INFO:  [TraceId: 0HMSKT432HPE0:00000001] - Schema: http - Method: GET - Host: localhost:5049 - Path: /author/list - QueryString:  - Client IP: ::1 - RequestBody: 
2023-08-04 17:48:19,678 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - RESPONSE INFO: [TraceId: 0HMSKT432HPE0:00000001] - Status: 200 - SpentTime: 16ms - Response Body: {"success":true,"message":"SUCCESS","data":[{"id":2,"firstname":"Bekzod","lastname":"Toshpulatov","age":0},{"id":3,"firstname":"string","lastname":"string","age":0},{"id":4,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":5,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":6,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":7,"firstname":"string","lastname":"string","age":0},{"id":8,"firstname":"string","lastname":"string","age":0},{"id":9,"firstname":"string","lastname":"string","age":0},{"id":10,"firstname":"ewrew","lastname":"rewrwerwe","age":0},{"id":11,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":12,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":14,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":15,"firstname":"uheiqwguwehng","lastname":"asfewgew","age":122},{"id":16,"firstname":"string","lastname":"string","age":0},{"id":17,"firstname":"string","lastname":"string","age":0},{"id":18,"firstname":"string","lastname":"string","age":0},{"id":19,"firstname":"string","lastname":"string","age":0},{"id":20,"firstname":"string","lastname":"string","age":0},{"id":21,"firstname":"string","lastname":"string","age":0},{"id":22,"firstname":"string","lastname":"string","age":0},{"id":23,"firstname":"string","lastname":"string","age":0},{"id":24,"firstname":"string","lastname":"string","age":0},{"id":25,"firstname":"string","lastname":"string","age":0},{"id":26,"firstname":"string","lastname":"string","age":0},{"id":27,"firstname":"string","lastname":"string","age":0}]}
2023-08-04 17:48:49,425 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - REQUEST INFO:  [TraceId: 0HMSKT432HPE1:00000001] - Schema: http - Method: GET - Host: localhost:5049 - Path: /author/list - QueryString:  - Client IP: ::1 - RequestBody: 
2023-08-04 17:48:49,427 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - RESPONSE INFO: [TraceId: 0HMSKT432HPE1:00000001] - Status: 200 - SpentTime: 1ms - Response Body: {"success":true,"message":"SUCCESS","data":[{"id":2,"firstname":"Bekzod","lastname":"Toshpulatov","age":0},{"id":3,"firstname":"string","lastname":"string","age":0},{"id":4,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":5,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":6,"firstname":"dasdasd","lastname":"stradsgadsgasdging","age":19},{"id":7,"firstname":"string","lastname":"string","age":0},{"id":8,"firstname":"string","lastname":"string","age":0},{"id":9,"firstname":"string","lastname":"string","age":0},{"id":10,"firstname":"ewrew","lastname":"rewrwerwe","age":0},{"id":11,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":12,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":14,"firstname":"gewgewg","lastname":"egewgwegw","age":12},{"id":15,"firstname":"uheiqwguwehng","lastname":"asfewgew","age":122},{"id":16,"firstname":"string","lastname":"string","age":0},{"id":17,"firstname":"string","lastname":"string","age":0},{"id":18,"firstname":"string","lastname":"string","age":0},{"id":19,"firstname":"string","lastname":"string","age":0},{"id":20,"firstname":"string","lastname":"string","age":0},{"id":21,"firstname":"string","lastname":"string","age":0},{"id":22,"firstname":"string","lastname":"string","age":0},{"id":23,"firstname":"string","lastname":"string","age":0},{"id":24,"firstname":"string","lastname":"string","age":0},{"id":25,"firstname":"string","lastname":"string","age":0},{"id":26,"firstname":"string","lastname":"string","age":0},{"id":27,"firstname":"string","lastname":"string","age":0}]}
2023-08-04 17:49:03,007 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - REQUEST INFO:  [TraceId: 0HMSKT432HPE2:00000001] - Schema: http - Method: GET - Host: localhost:5049 - Path: /genre/list - QueryString:  - Client IP: ::1 - RequestBody: 
2023-08-04 17:49:05,342 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - RESPONSE INFO: [TraceId: 0HMSKT432HPE2:00000001] - Status: 200 - SpentTime: 2335ms - Response Body: {"success":true,"message":"SUCCESS","data":[{"id":1,"name":"Comedy"},{"id":3,"name":"Romantic"},{"id":2,"name":"UJAS"},{"id":4,"name":"New"},{"id":6,"name":"nma gap"},{"id":7,"name":"asdasds"},{"id":8,"name":"string"}]}
2023-08-04 17:49:17,364 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - REQUEST INFO:  [TraceId: 0HMSKT432HPE3:00000001] - Schema: http - Method: GET - Host: localhost:5049 - Path: /genre/list - QueryString:  - Client IP: ::1 - RequestBody: 
2023-08-04 17:49:17,458 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - RESPONSE INFO: [TraceId: 0HMSKT432HPE3:00000001] - Status: 200 - SpentTime: 93ms - Response Body: {"success":true,"message":"SUCCESS","data":[{"id":1,"name":"Comedy"},{"id":3,"name":"Romantic"},{"id":2,"name":"UJAS"},{"id":4,"name":"New"},{"id":6,"name":"nma gap"},{"id":7,"name":"asdasds"},{"id":8,"name":"string"}]}
2023-08-04 17:49:22,076 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - REQUEST INFO:  [TraceId: 0HMSKT432HPE4:00000001] - Schema: http - Method: GET - Host: localhost:5049 - Path: /genre/list - QueryString:  - Client IP: ::1 - RequestBody: 
2023-08-04 17:49:22,159 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - RESPONSE INFO: [TraceId: 0HMSKT432HPE4:00000001] - Status: 200 - SpentTime: 82ms - Response Body: {"success":true,"message":"SUCCESS","data":[{"id":1,"name":"Comedy"},{"id":3,"name":"Romantic"},{"id":2,"name":"UJAS"},{"id":4,"name":"New"},{"id":6,"name":"nma gap"},{"id":7,"name":"asdasds"},{"id":8,"name":"string"}]}
2023-08-04 17:49:25,987 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - REQUEST INFO:  [TraceId: 0HMSKT432HPE4:00000002] - Schema: http - Method: GET - Host: localhost:5049 - Path: /genre/list - QueryString:  - Client IP: ::1 - RequestBody: 
2023-08-04 17:49:25,994 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - RESPONSE INFO: [TraceId: 0HMSKT432HPE4:00000002] - Status: 200 - SpentTime: 6ms - Response Body: {"success":true,"message":"SUCCESS","data":[{"id":1,"name":"Comedy"},{"id":3,"name":"Romantic"},{"id":2,"name":"UJAS"},{"id":4,"name":"New"},{"id":6,"name":"nma gap"},{"id":7,"name":"asdasds"},{"id":8,"name":"string"}]}
2023-08-04 17:49:31,704 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - REQUEST INFO:  [TraceId: 0HMSKT432HPE5:00000001] - Schema: http - Method: GET - Host: localhost:5049 - Path: /genre/list - QueryString:  - Client IP: ::1 - RequestBody: 
2023-08-04 17:49:31,710 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - RESPONSE INFO: [TraceId: 0HMSKT432HPE5:00000001] - Status: 200 - SpentTime: 5ms - Response Body: {"success":true,"message":"SUCCESS","data":[{"id":1,"name":"Comedy"},{"id":3,"name":"Romantic"},{"id":2,"name":"UJAS"},{"id":4,"name":"New"},{"id":6,"name":"nma gap"},{"id":7,"name":"asdasds"},{"id":8,"name":"string"}]}
2023-08-04 17:49:32,526 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - REQUEST INFO:  [TraceId: 0HMSKT432HPE5:00000002] - Schema: http - Method: GET - Host: localhost:5049 - Path: /genre/list - QueryString:  - Client IP: ::1 - RequestBody: 
2023-08-04 17:49:32,530 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - RESPONSE INFO: [TraceId: 0HMSKT432HPE5:00000002] - Status: 200 - SpentTime: 4ms - Response Body: {"success":true,"message":"SUCCESS","data":[{"id":1,"name":"Comedy"},{"id":3,"name":"Romantic"},{"id":2,"name":"UJAS"},{"id":4,"name":"New"},{"id":6,"name":"nma gap"},{"id":7,"name":"asdasds"},{"id":8,"name":"string"}]}
2023-08-04 17:49:33,318 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - REQUEST INFO:  [TraceId: 0HMSKT432HPE5:00000003] - Schema: http - Method: GET - Host: localhost:5049 - Path: /genre/list - QueryString:  - Client IP: ::1 - RequestBody: 
2023-08-04 17:49:33,320 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - RESPONSE INFO: [TraceId: 0HMSKT432HPE5:00000003] - Status: 200 - SpentTime: 1ms - Response Body: {"success":true,"message":"SUCCESS","data":[{"id":1,"name":"Comedy"},{"id":3,"name":"Romantic"},{"id":2,"name":"UJAS"},{"id":4,"name":"New"},{"id":6,"name":"nma gap"},{"id":7,"name":"asdasds"},{"id":8,"name":"string"}]}
2023-08-04 17:51:33,640 [14] INFO  Microsoft.Hosting.Lifetime - Application is shutting down...
2023-08-04 17:51:42,087 [1] INFO  Microsoft.Hosting.Lifetime - Now listening on: http://localhost:5049
2023-08-04 17:51:42,098 [1] INFO  Microsoft.Hosting.Lifetime - Application started. Press Ctrl+C to shut down.
2023-08-04 17:51:42,099 [1] INFO  Microsoft.Hosting.Lifetime - Hosting environment: Development
2023-08-04 17:51:42,099 [1] INFO  Microsoft.Hosting.Lifetime - Content root path: P:\C#\BookStore\BookStore
2023-08-04 17:51:48,924 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - REQUEST INFO:  [TraceId: 0HMSKT66MJ81A:00000002] - Schema: http - Method: GET - Host: localhost:5049 - Path: /author/list - QueryString:  - Client IP: ::1 - RequestBody: 
2023-08-04 17:51:49,779 [.NET ThreadPool Worker] ERROR BookStore.DAL.Repositories.AuthorRepository - 0HMSKT66MJ81A:00000002 - GetAll(IHttpContextAccessor accessor) - ErrorMessage Connection is not open
2023-08-04 17:51:49,786 [.NET ThreadPool Worker] ERROR BookStore.Service.Implementations.AuthorService - 0HMSKT66MJ81A:00000002 - ListService(IHttpContextAccessor accessor) - ErrorMessage Connection is not open
2023-08-04 17:51:49,827 [.NET ThreadPool Worker] INFO  RequestResponseLoggingMiddleware - RESPONSE INFO: [TraceId: 0HMSKT66MJ81A:00000002] - Status: 200 - SpentTime: 899ms - Response Body: {"success":false,"message":"Connection is not open","data":null}
